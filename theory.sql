/*
 Navicat Premium Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 80018
 Source Host           : localhost:3306
 Source Schema         : theory

 Target Server Type    : MySQL
 Target Server Version : 80018
 File Encoding         : 65001

 Date: 27/10/2019 16:08:39
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for topic
-- ----------------------------
DROP TABLE IF EXISTS `topic`;
CREATE TABLE `topic` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT ' ',
  `title` varchar(1000) DEFAULT NULL,
  `type` int(10) DEFAULT NULL,
  `optionA` varchar(255) DEFAULT NULL,
  `optionB` varchar(255) DEFAULT NULL,
  `optionC` varchar(255) DEFAULT NULL,
  `optionD` varchar(255) DEFAULT NULL,
  `answer` varchar(255) DEFAULT NULL,
  `imgurl` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2088 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of topic
-- ----------------------------
BEGIN;
INSERT INTO `topic` VALUES (1, '计算机运行过程中，遇到突发事件，要求CPU暂时停止正在运行的程序，转去为突发事件服务，服务完毕，再自动返回原程序继续执行，这个过程称为（），其处理过程中保存现场的目的是返回去继续执行原程序。', 1, '阻塞', '中断', '动态绑定', '静态绑定', 'B', NULL);
INSERT INTO `topic` VALUES (2, '计算机运行过程中，遇到突发事件，要求CPU暂时停止正在运行的程序，转去为突发事件服务，服务完毕，再自动返回原程序继续执行，这个过程称为中断，其处理过程中保存现场的目的是（）。', 1, '防止丢失数据', '防止对其他部件造成影响', '返回去继续执行原程序', '为中断处理程序提供数据', 'C', NULL);
INSERT INTO `topic` VALUES (3, 'CPU在执行指令的过程中，会自动修改（）的内容，以使其保存的总是将要执行的下一条指令的地址', 1, '指令寄存器', '程序计数器', '地址寄存器', '指令译码器', 'B', NULL);
INSERT INTO `topic` VALUES (4, '在微机系统中，BIOS（基本输入输出系统）保存在（）中。', 1, '主板上的ROM', 'CPU的寄存器', '主板上的RAM', '虚拟存储器', 'A', NULL);
INSERT INTO `topic` VALUES (5, '采用n位补码（包含一个符号位）表示数据，可以直接在表示数值（）。', 1, '2n', '-2n', '2n-1', '-2n-1', 'D', NULL);
INSERT INTO `topic` VALUES (6, '以下关于采用一位奇校验法的叙述中，正确的是（）。', 1, '若所有奇数位出错，则可以检测出该错误但无法纠正错误', '若所有偶数位出错，则可以检测出该错误并加以纠正', '若所有奇数个数据位出错，则可以检测出该错误但无法纠正错误', '若有偶数个数据位出错，则可以检测出该错误并加以纠正', 'C', NULL);
INSERT INTO `topic` VALUES (7, '下列关于流水线方式执行指令的叙述中，不正确的是（）', 1, '流水线方式可提高单条指令的执行速度', '流水线方式下可同时执行多条指令', '流水线方式提高了各部件的利用率	', '流水线方式提高了系统的吞吐率', 'A', NULL);
INSERT INTO `topic` VALUES (8, 'CPU执行算术运算或者逻辑运算时，常将源操作数和结果暂存在（）中。', 1, '程序计数器(PC)	', '累加器(AC)	', '指令寄存器(IR)	', '地址寄存器(AR)', 'B', NULL);
INSERT INTO `topic` VALUES (9, '要判断字长为16位的整数a的低四位是否全为0，则（）。', 1, '将a与0x000F进行\"逻辑与\"运算，然后判断运算结果是否等于0', '将a与0x000F进行\"逻辑或\"运算，然后判断运算结果是否等于F', '将a与0x000F进行\"逻辑或\"运算，然后判断运算结果是否等于F', '将a与0x000F进行\"逻辑与\"运算，然后判断运算结果是否等于F', 'A', NULL);
INSERT INTO `topic` VALUES (10, '计算机系统中常用的输入/输出控制方式有无条件传送、中断、程序查询和DMA方式等。当采用（）方式时，不需要CPU执行程序指令来传送数据。', 1, '中断', '程序查询', '无条件传送', 'DMA', 'D', NULL);
INSERT INTO `topic` VALUES (1208, '计算机内存一般分为静态数据区、代码区、栈区和堆区，若某指令的操作数之一采用立即数寻址方式，则该操作数位于栈区。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1209, '计算机在进行浮点数的相加(减)运算之前先进行对阶操作，若x的阶码大于y的阶码，则应将y的阶码扩大至与x的阶码相同，且使y的尾数部分进行算术左移。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1210, '在CPU中，程序计数器可用于传送和暂存用户数据，为ALU执行算术逻辑运算提供工作区。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1211, 'I/O设备与主机间交换数据，中断方式和DMA方式下，CPU与I/O设备都可同步工作。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1212, '下面关于校验方法的叙述，采用CRC校验，需要将校验码分散开并插入数据的指定位置中。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1213, 'Cache用于存放主存数据的部分备份，主存单元地址与Cache单元地址之间的转换工作由用户完成。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1214, '《中华人民共和国著作权法》和《计算机软件保护条例》是构成我国保护计算机软件著作权的两个基本法律文件。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1215, '为了防止电子邮件中的恶意代码，应该用网页方式阅读电子邮件。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1216, 'TCP/IP在多个层次引入了安全机制，其中TLS协议位于应用层。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1217, '我国专利申请的原则之一是申请在先与使用在先相结合。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1218, '王某是M国际运输有限公司计算机系统管理员。任职期间，王某根据公司的业务要求开发了“海运出口业务系统”，并由公司使用，随后，王某向国家版权局申请了计算机软件著作权登记，并取得了《计算机软件著作权登记证书》。证书明确软件名称是“海运出口业务系统V1.0”，著作权人为王某。以下说法中，不正确的是______。', 3, '海运出口业务系统V1.0的著作权属于王某', '海运出口业务系统V1.0的著作权属于M公司', '海运出口业务系统V1.0的著作权属于王某和M公司', '王某获取的软件著作权登记证是不可以撤销的', 'ACD', NULL);
INSERT INTO `topic` VALUES (1219, '确定软件的模块划分及模块之间的调用关系不是______阶段的任务。', 3, '需求分析	', '概要设计', '详细设计', '编码', 'ACD', NULL);
INSERT INTO `topic` VALUES (1220, '甘特图(Gantt图)能______。', 3, '作为项目进度管理的一个工具', '清晰地描述每个任务的开始和截止时间', '清晰地获得任务并行进行的信息', '清晰地获得各任务之间的依赖关系', 'ABC', NULL);
INSERT INTO `topic` VALUES (1221, '以下关于风险管理的叙述中，正确的是______。', 3, '仅根据风险产生的后果来对风险排优先级', '可以通过改变系统性能或功能需求来避免某些风险', '不可能去除所有风险，但可以通过采取行动来降低或者减轻风险', '在项目开发过程中，需要定期地评估和管理风险', 'BCD', NULL);
INSERT INTO `topic` VALUES (1222, '若C程序的表达式中引用了未赋初值的变量，不会出现______。', 3, '编译时一定会报告错误信息，该程序不能运行', '可以通过编译并运行，但运行时一定会报告异常', '可以通过编译，但链接时一定会报告错误信息而不能运行', '可以通过编译并运行，但运行结果不一定是期望的结果', 'ABC', NULL);
INSERT INTO `topic` VALUES (1223, '　　己知数据信息为16位，最少应附加（）位校验位，才能实现海明码纠错。', 1, '3', '4', '5', '6', 'C', NULL);
INSERT INTO `topic` VALUES (1224, '　　以下关于Cache(高速缓冲存储器)的叙述中，不正确的是（）。', 1, 'Cache的设置扩大了主存的容量', 'Cache的内容是主存部分内容的拷贝', 'Cache的命中率并不随其容量增大线性地提高', 'Cache位于主存与CPU之间', 'A', NULL);
INSERT INTO `topic` VALUES (1225, '海明码是一种纠错码，其方法是为需要校验的数据位增加若干校验位，使得校验位的值决定于某些被校位的数据，当被校数据出错时，可根据校验位的值的变化找到出错位，从而纠正错误。对于32位的数据，至少需要增加（）个校验位才能构成海明码。', 1, '3', '4', '5', '6', 'D', NULL);
INSERT INTO `topic` VALUES (1226, '　　在程序运行过程中，CPU需要将指令从内存中取出并加以分析和执行。CPU依据（）来区分在内存中以二进制编码形式存放的指令和数据。', 1, '指令周期的不同阶段', '指令和数据的寻址方式', '指令操作码的译码结果', '指令和数据所在的存储单元', 'B', NULL);
INSERT INTO `topic` VALUES (1227, '　　关于编译器的说法中，不正确的是（）。', 1, '词法分析的功能是扫描源程序，识别出一个个的“单词”符号', '语法分析的功能是将单词符号序列分解成各类语法单位，如“表达式”、“语句”、“函数”和“程序”等', '语义分析的功能是检查出源程序中的所有语义错误', '目标代码生成阶段的功能是生成特定机器上的绝对指令代码、可重定位的指令代码或汇编指令代码', 'C', NULL);
INSERT INTO `topic` VALUES (1228, '　　计算机在一个指令周期的过程中，为从内存读取指令操作码，首先要将（）的内容送到地址总线上。', 1, '指令寄存器（IR）', '通用寄存器（GR）', '程序计数器（PC）', '状态寄存器（PSW）', 'C', NULL);
INSERT INTO `topic` VALUES (1229, '　　6位浮点数，其中阶符1位、阶码值6位、数符1位、尾数8位。若阶码用移码表示，尾数用补码表示，则该浮点数所能表示的数值范围是（）。', 1, '-264～（1-2-8）264', '-263～（1-2-8）263', '-（1-2-8）264～（1-2-8）264', '-（1-2-8）263～（1-2-8）263', 'B', NULL);
INSERT INTO `topic` VALUES (1230, '　　将一条指令的执行过程分解为取指、分析和执行三步，按照流水方式执行，若取指时间t取指=4△t、分析时间t分析=2△t、执行时间t执行=3△t，则执行完100条指令，需要的时间为（）△t。', 1, '200', '300', '400', '405', 'D', NULL);
INSERT INTO `topic` VALUES (1231, '　　以下关于Cache与主存间地址映射的叙述中，正确的是（）。', 1, '操作系统负责管理Cache与主存之间的地址映射', '程序员需要通过编程来处理Cache与主存之间的地址映射', '应用软件对Cache与主存之间的地址映射进行调度', '由硬件自动完成Cache与主存之间的地址映射', 'D', NULL);
INSERT INTO `topic` VALUES (1232, '　　流水线的吞吐率是指单位时间流水线处理的任务数，如果各段流水的操作时间不同，则流水线的吞吐率是（）的倒数。', 1, '最短流水段操作时间', '各段流水的操作时间总和', '最长流水段操作时间', '流水段数乘以最长流水段操作时间', 'C', NULL);
INSERT INTO `topic` VALUES (1233, '　　某四级流水线指令分别完成取指、取数、运算、保存结果四步操作。若完成上述操作的时间依次为8ns、9ns、4ns、8ns，则流水线的操作周期至少为（）ns。', 1, '4', '8', '9', '33', 'C', NULL);
INSERT INTO `topic` VALUES (1234, '　　VLIW是（）的简称。', 1, '复杂指令系统计算机', '超大规模集成电路', '单指令流多数据流', '超长指令字', 'D', NULL);
INSERT INTO `topic` VALUES (1235, '　　主存与Cache的地址映射方式中，（）方式可以实现主存任意一块装入Cache中任意位置，只有装满才需要替换。', 1, '全相联', '直接映射', '组相联', '串并联', 'A', NULL);
INSERT INTO `topic` VALUES (1236, '　　如果“2X”的补码是“90H”，那么X的真值是（）', 1, '72', '-56', '56', '111', 'B', NULL);
INSERT INTO `topic` VALUES (1237, '内存按字节编址，从A1000H到B13FFH的区域的存储容量为（）KB。', 1, '32', '34', '65', '67', 'C', NULL);
INSERT INTO `topic` VALUES (1238, '以下关于总线的叙述中，不正确的是（）。', 1, '并行总线适合近距离高速数据传输.', '串行总线适合长距离数据传输', '单总线结构在一个总线上适应不同种类的设备，设计简单且性能很高', '专用总线在设计上可以与连接设备实现最佳匹配', 'C', NULL);
INSERT INTO `topic` VALUES (1239, '　　CPU是在（）结束时响应DMA请求的。', 1, '一条指令执行', '一段程序', '一个时钟周期', '一个总线周期', 'D', NULL);
INSERT INTO `topic` VALUES (1240, '　　虚拟存储体系由（）两级存储器构成。', 1, '主存-辅存', '寄存器-Cache', '寄存器-主存', 'Cache-主存', 'A', NULL);
INSERT INTO `topic` VALUES (1241, '　　内存按字节编址从B3000H到DABFFH的区域其存储容量为（）。', 1, '123KB', '159KB', '163KB', '194KB', 'B', NULL);
INSERT INTO `topic` VALUES (1242, '　　计算机中CPU对其访问最快的是（）。', 1, '内存', 'Cache', '通用寄存器', '硬盘', 'C', NULL);
INSERT INTO `topic` VALUES (1243, '计算机中CPU的中断响应时间指的是（）时间。', 1, '从发出中断请求到中断处理结束', '从中断处理开始到中断处理结束', 'CPU分析判断中断请求', '从发出中断请求到开始进入中断处理程序', 'D', NULL);
INSERT INTO `topic` VALUES (1244, '属于CPU中算术逻辑单元的部件是（）。', 1, '程序计数器', '加法器', '指令寄存器', '指令译码器', 'B', NULL);
INSERT INTO `topic` VALUES (1245, '　　35．计算机采用分级存储体系的主要目的是为了解决（）问题。', 1, '主存容量不足', '存储器读写可靠性', '外设访问效率', '存储容量、成本和速度之间的矛盾', 'D', NULL);
INSERT INTO `topic` VALUES (1246, '三总线结构的计算机总线系统由（）组成。', 1, 'CPU总线、内存总线和IO总线', '数据总线、地址总线和控制总线', '系统总线、内部总线和外部总线', '串行总线、并行总线和PCI总线', 'A', NULL);
INSERT INTO `topic` VALUES (1247, '以下关于RISC和CISC的叙述中，不正确的是（）。', 1, 'RISC通常比CISC的指令系统更复杂', 'RISC通常会比CISC配置更多的寄存器', 'RISC编译器的子程序库通常要比CISC编译器的子程序库大得多', 'RISC比CISC更加适合VLSI工艺的规整性要求', 'A', NULL);
INSERT INTO `topic` VALUES (1248, 'CISC是（）的简称。', 1, '复杂指令系统计算机', '超大规模集成电路', '精简指令系统计算机', '超长指令字', 'A', NULL);
INSERT INTO `topic` VALUES (1249, '　　中断向量可提供（）。', 1, 'I/O设备的端口地址', '所传送数据的起始地址', '中断服务程序的入口地址', '主程序的断电地址', 'C', NULL);
INSERT INTO `topic` VALUES (1250, '　　为了便于实现多级中断嵌套，使用（）来保护断电和现场最有效。', 1, 'ROM', '中断向量表', '通用寄存器', '堆栈', 'D', NULL);
INSERT INTO `topic` VALUES (1251, '　　DMA工作方式下，在（）之间建立了直接的数据通路。', 1, 'CPU与外设', 'CPU与主存', '主存与外没', '外设与外设。', 'C', NULL);
INSERT INTO `topic` VALUES (1252, '若用16K×4bit的存储器芯片构成地址编号从80000H到BFFFFH且按字节编址的内存，共需（）片。', 1, '8', '16', '32', '64', 'C', NULL);
INSERT INTO `topic` VALUES (1253, '　　在程序执行过程中，Cache与主存的地址映像是（）。', 1, '硬件自动完成', '程序员调度', '操作系统管理', '程序员与操作系统协议完成', 'A', NULL);
INSERT INTO `topic` VALUES (1254, '　　指令寄存器的位效取决于（）。', 1, '存储器的容量', '指令字长', '数据总线的宽度', '地址总线的宽度', 'B', NULL);
INSERT INTO `topic` VALUES (1255, '　　若计算机存储数据采用的是双符号位(00表示正号、11表示负号)，两个符号相同的数相加时，如果运算结果的两个符号位经（）运算得1，则可断定这两个数相加的结果产生了溢出。', 1, '逻辑与', '逻辑或', '逻辑同或', '逻辑异或', 'D', NULL);
INSERT INTO `topic` VALUES (1256, '　　（）不是RISC的特点。', 1, '指令种类丰富', '高效的流水线操作', '寻址方式较少', '硬布线控制', 'A', NULL);
INSERT INTO `topic` VALUES (1257, '　　若某计算机字长为32位，内存容量为2GB，按字编址则可寻址范围为（）。', 1, '1024M', '1GB', '512M', '2GB', 'C', NULL);
INSERT INTO `topic` VALUES (1258, '　　在CPU中，（）不仅要保证指令的正确执行，还要能够处理异常事件。', 1, '运算器', '控制器', '寄存器组', '内部总线', 'B', NULL);
INSERT INTO `topic` VALUES (1259, '循环冗余校验码（CRC）利用生成多项式进行编码，设数据位为k位，校验位为r位，则CRC码的格式为（）。', 1, 'k个数据位之后跟r个校验位', 'r个校验位之后跟k个数据位', 'r个校验位随机加入k个数据位中', 'r个校验位等间隔地加入k个数据位中', 'CRC', NULL);
INSERT INTO `topic` VALUES (1260, '以下关于数的定点表示和浮点表示的叙述中，不正确的是（）。', 1, '定点表示法表示的数（称为定点数）常分为定点整数和定点小数两种', '定点表示法中，小数点需要占用一个存储位', '浮点表示法用阶码和尾数来表示数，称为浮点数', '在总位数相同的情况下，浮点表示法可以表示更大的数', 'B', NULL);
INSERT INTO `topic` VALUES (1261, '　　（）不属于按寻址方式划分的一类存储器。', 1, '随机存储器', '顺序存储器', '相联存储器', '直接存储器', 'C', NULL);
INSERT INTO `topic` VALUES (1262, '　　在I/O设备与主机间进行数据传输时，CPU只需在开始和结束时作少量处理，而无需干预数据传送过程的是（）方式。', 1, '中断', '程序查询', '无条件传送', '直接存储器存取', 'D', NULL);
INSERT INTO `topic` VALUES (1263, '　　（）不属于系统总线。', 1, 'ISA', 'EISA', 'SCSI', 'PCI', 'C', NULL);
INSERT INTO `topic` VALUES (1264, '　　在CPU中，（）可用于传送和暂存用户数据，为ALU执行算术逻辑运算提供工作区。', 1, '程序计数器', '累加寄存器', '程序状态寄存器', '地址寄存器', 'B', NULL);
INSERT INTO `topic` VALUES (1265, '　　下面关于在I/O设备与主机间交换数据的叙述，（）是错误的。', 1, '中断方式下，CPU需要执行程序来实现数据传送任务', '中断方式和DMA方式下，CPU与I/O设备都可同步工作', '中断方式和DMA方式中，快速I/O设备更适合采用中断方式传递数据', '若同时接到DMA请求和中断请求，CPU优先响应DMA请求', 'C', NULL);
INSERT INTO `topic` VALUES (1266, '　　下面关于校验方法的叙述，（）是正确的。', 1, '采用奇偶校验可检测数据传输过程中出现一位数据错误的位置并加以纠正', '采用海明校验可检测数据传输过程中出现一位数据错误的位置并加以纠正', '采用海明校验，校验码的长度和位置可随机设定', '采用CRC校验，需要将校验码分散开并插入数据的指定位置中', 'B', NULL);
INSERT INTO `topic` VALUES (1267, '　　（）不属于计算机控制器中的部件。', 1, '指令寄存器IR', '程序计数器PC', '算术逻辑单元ALU', '程序状态字寄存器PSW', 'C', NULL);
INSERT INTO `topic` VALUES (1268, '　　在CPU与主存之间设置高速缓冲存储器Cache，其目的是为了（）。', 1, '扩大主存的存储容量', '提高CPU对主存的访问效率', '既扩大主存容量又提高存取速度', '提高外存储器的速度', 'B', NULL);
INSERT INTO `topic` VALUES (1269, '　　下面的描述中，（）不是RISC设计应遵循的设计原则。', 1, '指令条数应少一些', '寻址方式尽可能少', '采用变长指令，功能复杂的指令长度长而简单指令长度短', '设计尽可能多的通用寄存器', 'C', NULL);
INSERT INTO `topic` VALUES (1270, '　　系统响应时间和作业吞吐量是衡量计算机系统性能的重要指标。对于一个持续处理业务的系统而言，其（）。', 1, '响应时间越短，作业吞吐量越小', '响应时间越短，作业吞吐量越大', '响应时间越长，作业吞吐量越大', '响应时间不会影响作业吞吐量', 'B', NULL);
INSERT INTO `topic` VALUES (1271, '　　在指令系统的各种寻址方式中，获取操作数最快的方式是（）。', 1, '直接寻址', '立即寻址', '寄存器寻址', '间接寻址', 'B', NULL);
INSERT INTO `topic` VALUES (1272, '　　若内存地址区间为4000H～43FFH，每个存贮单元可存储16位二进制数，该内存区域用4片存储器芯片构成，则构成该内存所用的存储器芯片的容量是（）。', 1, '512×16bit', '256×8bit', '256×16bit', '1024×8bit', 'C', NULL);
INSERT INTO `topic` VALUES (1273, '　　若某计算机系统是由500个元器件构成的串联系统，且每个元器件的失效率均为10-7/H，在不考虑其他因素对可靠性的影响时，该计算机系统的平均故障间隔时间为（）小时。', 1, '2×104', '5×104', '2×105', '5×105', 'A', NULL);
INSERT INTO `topic` VALUES (1274, '　计算机病毒的特征不包括（）。', 1, '传染性', '触发性', '隐蔽性', '自毁性', 'D', NULL);
INSERT INTO `topic` VALUES (1275, '　　MD5是摘要算法，对任意长度的输入计算得到的结果长度为（）位。', 1, '56', '128', '140', '160', 'B', NULL);
INSERT INTO `topic` VALUES (1276, '　　网络管理员通过命令行方式对路由器进行管理，要确保ID、口令和会话内容的保密性，应采取的访问方式是（）。', 1, '控制台', 'AUX', 'TELNET', 'SSH', 'D', NULL);
INSERT INTO `topic` VALUES (1277, '　　在安全通信中，S将所发送的信息使用（）进行数字签名，T收到该消息后可利用S的公钥验证该消息的真实性。', 1, 'S的公钥', 'S的私钥', 'T的公钥', 'T的私钥', 'B', NULL);
INSERT INTO `topic` VALUES (1278, '　　在安全通信中，S将所发送的信息使用S的私钥进行数字签名，T收到该消息后可利用（）验证该消息的真实性。', 1, 'S的公钥', 'S的私钥', 'T的公钥', 'T的私钥', 'A', NULL);
INSERT INTO `topic` VALUES (1279, '　　攻击者通过发送一个目的主机已经接收过的报文来达到攻击的目的，这种攻击方式属于（）攻击。', 1, '重放', '拒绝服务', '数据截获', '数据流分析', 'A', NULL);
INSERT INTO `topic` VALUES (1280, '　　与HTTP相比，HTTPS协议对传输的内容进行加密，更加安全，HTTPS基于（）安全协议。', 1, 'RSA', 'DES', 'SSL', 'SSH', 'C', NULL);
INSERT INTO `topic` VALUES (1281, '　　下列攻击行为中，属于典型被动攻击的是（）。', 1, '拒绝服务攻击', '会话拦截', '系统干涉', '修改数据命令', 'C', NULL);
INSERT INTO `topic` VALUES (1282, '（）不属于入侵检测技术。', 1, '专家系统', '模型检测', '简单匹配', '漏洞扫描', 'D', NULL);
INSERT INTO `topic` VALUES (1283, '　　以下关于防火墙功能特性的叙述中，不正确的是（）。', 1, '控制进出网络的数据包和数据流向', '提供流量信息的日志和审计', '隐藏内部IP以及网络结构细节', '提供漏洞扫描功能', 'D', NULL);
INSERT INTO `topic` VALUES (1284, '　　HTTPS使用（）协议对报文进行封装。', 1, 'SSH', 'SSL', 'SHA-1', 'SET', 'B', NULL);
INSERT INTO `topic` VALUES (1285, '　　以下加密算法中适合对大量的明文消息进行加密传输的是（）。', 1, 'RSA', 'SHA-1', 'MD5', 'RC5', 'D', NULL);
INSERT INTO `topic` VALUES (1286, '　　假定用户A、B分别在I1和I2两个CA处取得了各自的证书，（）是A、B互信的必要条件。', 1, 'A、B互换私钥', 'A、B互换公钥', 'I1、I2互换私钥', 'I1、I2互换公钥', 'D', NULL);
INSERT INTO `topic` VALUES (1287, '　　可用于数字签名的算法是（）。', 1, 'RSA', 'IDEA', 'RC4', 'MD5', 'A', NULL);
INSERT INTO `topic` VALUES (1288, '　　（）不是数字签名的作用。', 1, '接收者可验证消息来源的真实性', '发送者无法否认发送过该消息', '接收者无法伪造或篡改消息', '可验证接收者合法性', 'D', NULL);
INSERT INTO `topic` VALUES (1289, '　　在网络设计和实施过程中要采取多种安全措施，其中（）是针对系统安全需求的措施。', 1, '设备防雷击', '入侵检测', '漏洞发现与补丁管理', '流量控制', 'C', NULL);
INSERT INTO `topic` VALUES (1290, '　　传输经过SSL加密的网页所采用的协议是（）。', 1, 'HTTP', 'HTTPS', 'S-HTTP', 'HTTP-S', 'B', NULL);
INSERT INTO `topic` VALUES (1291, '　　为了攻击远程主机，通常利用（）技术检测远程主机状态。', 1, '病毒查杀', '端口扫描', 'QQ聊天', '身份认证', 'B', NULL);
INSERT INTO `topic` VALUES (1292, '　　（）不属于主动攻击。', 1, '流量分析', '重放', 'IP地址欺骗', '拒绝服务', 'A', NULL);
INSERT INTO `topic` VALUES (1293, '　　防火墙不具备（）功能。', 1, '记录访问过程', '查毒', '包过滤', '代理', 'B', NULL);
INSERT INTO `topic` VALUES (1294, '　　（）协议在终端设备与远程站点之间建立安全连接。', 1, 'ARP', 'Telnet', 'SSH', 'WEP', 'C', NULL);
INSERT INTO `topic` VALUES (1295, '　　安全需求可划分为物理线路安全、网络安全、系统安全和应用安全。下面的安全需求中属于系统安全的是（）。', 1, '机房安全', '入侵检测', '漏洞补丁管理', '数据库安全', 'C', NULL);
INSERT INTO `topic` VALUES (1296, '　　安全需求可划分为物理线路安全、网络安全、系统安全和应用安全。下面的安全需求中属于应用安全的是（）。', 1, '机房安全', '入侵检测', '漏洞补丁管理', '数据库安全', 'D', NULL);
INSERT INTO `topic` VALUES (1297, '　　PPP中的安全认证协议是（），它使用三次握手的会话过程传送密文。', 1, 'MD5', 'PAP', 'CHAP', 'HASH', 'C', NULL);
INSERT INTO `topic` VALUES (1298, '　　（）不是蠕虫病毒。', 1, '熊猫烧香', '红色代码', '冰河', '爱虫病毒', 'C', NULL);
INSERT INTO `topic` VALUES (1299, '以下关于拒绝服务攻击的叙述中，不正确的是（）。', 1, '拒绝服务攻击的目的是使计算机或者网络无法提供正常的服务', '拒绝服务攻击是不断向计算机发起请求来实现的', '拒绝服务攻击会造成用户密码的泄漏', 'DDoS是一种拒绝服务攻击形式', 'C', NULL);
INSERT INTO `topic` VALUES (1300, '　　网络系统中，通常把（）置于DMZ区。', 1, '网络管理服务器', 'Web服务器', '入侵检测服务器', '财务管理服务器', 'B', NULL);
INSERT INTO `topic` VALUES (1301, '　　以下关于木马程序的叙述中，正确的是（）。', 1, '木马程序主要通过移动磁盘传播', '木马程序的客户端运行在攻击者的机器上', '木马程序的目的是使计算机或网络无法提供正常的服务', 'Sniffer是典型的木马程序', 'B', NULL);
INSERT INTO `topic` VALUES (1302, '　　防火墙的工作层次是决定防火墙效率及安全的主要因素，以下叙述中，正确的是（）。', 1, '防火墙工作层次越低，工作效率越高，安全性越高', '防火墙工作层次越低，工作效率越低，安全性越低', '防火墙工作层次越高，工作效率越高，安全性越低', '防火墙工作层次越高，工作效率越低，安全性越高', 'D', NULL);
INSERT INTO `topic` VALUES (1303, '　　以下关于包过滤防火墙和代理防火墙的叙述中，正确的是（）。', 1, '包过滤技术实现成本较高，所以安全性能高', '包过滤技术对应用和用户是透明的', '代理服务技术安全性较高，可以提高网络整体性能', '代理服务技术只能配置成用户认证后才建立连接', 'B', NULL);
INSERT INTO `topic` VALUES (1304, '　　下列网络攻击行为中，（）属于DOS攻击。', 1, '特洛伊木马攻击', 'SYNFlooding攻击', '端口欺骗攻击', 'IP欺骗攻击', 'B', NULL);
INSERT INTO `topic` VALUES (1305, '　　PKI体制中，保证数字证书不被篡改的方法是（）。', 1, '用CA的私钥对数字证书签名', '用CA的公钥对数字证书签名', '用证书主人的私钥对数字证书签名', '用证书主人的公钥对数字证书签名', 'A', NULL);
INSERT INTO `topic` VALUES (1306, '　　下列算法中，不属于公开密钥加密算法的是（）。', 1, 'ECC', 'DSA', 'RSA', 'DES', 'D', NULL);
INSERT INTO `topic` VALUES (1307, '　　利用报文摘要算法生成报文摘要的目的是（ABD）。', 1, '验证通信对方的身份，防止假冒', '对传输数据进行加密，防止数据被窃听', '防止发送方否认发送过数据', '防止发送的报文被篡改', 'ABD', NULL);
INSERT INTO `topic` VALUES (1308, '　　防火墙通常分为内网、外网和DMZ三个区域，按照受保护程度，从高到低正确的排列次序为（）。', 1, '内网、外网和DMZ', '外网、内网和DMZ', 'DMZ、内网和外网', '内网、DMZ和外网', 'D', NULL);
INSERT INTO `topic` VALUES (1309, '　　相比于TCP，UDP的优势为（）。', 1, '可靠传输', '开销较小', '拥塞控制', '流量控制', 'B', NULL);
INSERT INTO `topic` VALUES (1310, '　　若一台服务器只开放了25和110两个端口，那么这台服务器可以提供（）服务。', 1, 'E-Mail', 'WEB', 'DNS', 'FTP', 'A', NULL);
INSERT INTO `topic` VALUES (1311, '　　下列排序算法中，稳定的是（）排序。', 1, '堆', '归并', '希尔', '快速', 'B', NULL);
INSERT INTO `topic` VALUES (1312, '　　在一台安装好TCP/IP协议的计算机上，当网络连接不可用时，为了测试编写好的网络程序，通常使用的目的主机IP地址为（）。', 1, '0.0.0.0', '127.0.0.1', '10.0.0.1', '210.225.21.255/24', 'B', NULL);
INSERT INTO `topic` VALUES (1313, '　　测试网络连通性通常采用的命令是（）。', 1, 'Netstat', 'Ping', 'Msconfig', 'Cmd', 'B', NULL);
INSERT INTO `topic` VALUES (1314, '　　在浏览器地址栏输入一个正确的网址后，本地主机将首先在（）查询该网址对应的IP地址。', 1, '本地DNS缓存', '本机hosts文件', '本地DNS服务器', '根域名服务器', 'B', NULL);
INSERT INTO `topic` VALUES (1315, '　　下面关于Linux目录的描述中，正确的是（）。', 1, 'Linux只有一个根目录，用“/root”表示', 'Linux中有多个根目录，用“/”加相应目录名称表示', 'Linux中只有一个根目录，用“/”表示', 'Linux中有多个根目录，用相应目录名称表示', 'C', NULL);
INSERT INTO `topic` VALUES (1316, '　　在异步通信中，每个字符包含1位起始位、7位数据位和2位终止位，若每秒钟传送500个字符，则有效数据速率是（）。', 1, '500b/s', '700b/s', '3500b/s', '5000b/s', 'C', NULL);
INSERT INTO `topic` VALUES (1317, '　　以下路由策略中，依据网络信息经常更新路由的是（）。', 1, '静态路由', '洪泛式', '随机路由', '自适应路由', 'D', NULL);
INSERT INTO `topic` VALUES (1318, '　　以下协议中属于应用层协议的是（），该协议的报文封装在UDP。', 1, 'SNMP', 'ARP', 'ICMP', 'X.25', 'A', NULL);
INSERT INTO `topic` VALUES (1319, '　　某公司内部使用w', 1, 'xyz.com.cn作为访问某服务器的地址，其中wb是（A）。', '主机名（服务器名称）', '协议名', '目录名', NULL, NULL);
INSERT INTO `topic` VALUES (1320, '　　如果路由器收到了多个路由协议转发的关于某个目标的多条路由，那么决定采用哪条路由的策略是（）。', 1, '选择与自己路由协议相同的', '选择路由费用最小的', '比较各个路由的管理距离', '比较各个路由协议的版本', 'C', NULL);
INSERT INTO `topic` VALUES (1321, '　　与地址220.112.179.92匹配的路由表的表项是（）。', 1, '220.112.145.32/22', '220.112.145.64/22', '220.112.147.64/22', '220.112.177.64/22', 'D', NULL);
INSERT INTO `topic` VALUES (1322, '　　默认情况下，FTP服务器的控制端口为（）。', 1, '大于1024的端口', '20', '80', '21', 'D', NULL);
INSERT INTO `topic` VALUES (1323, '　　使用ping命令可以进行网络检测，在进行一系列检测时，按照由近及远原则，首先执行的是（）。', 1, 'ping默认网关', 'ping本地IP', 'ping127.0.0.1', 'ping远程主机', 'C', NULL);
INSERT INTO `topic` VALUES (1324, '　　116．集线器与网桥的区别是（）。', 1, '集线器不能检测发送冲突，而网桥可以检测冲突', '集线器是物理层设备，而网桥是数据链路层设备', '网桥只有两个窗口，而集线器是一种多端口网桥', '网桥是物理层设备，而集线器是数据链路层设备', 'B', NULL);
INSERT INTO `topic` VALUES (1325, '　　TCP使用的流量控制协议是（）。', 1, '固定大小的滑动窗口协议', '后退N帧的ARQ协议', '可变大小的滑动窗口协议', '停等协议', 'C', NULL);
INSERT INTO `topic` VALUES (1326, '以下4种路由中，（）路由的子网掩码是255.255.255.255。', 1, '远程网络', '静态', '默认', '主机', 'D', NULL);
INSERT INTO `topic` VALUES (1327, '以下关于层次化局域网模型中核心层的叙述，正确的是（）。', 1, '为了保障安全性，对分组要进行有效性检查', '将分组从一个区域高速地转发到另一个区域', '由多台二、三层交换机组成', '提供多条路径来缓解通信瓶颈', 'B', NULL);
INSERT INTO `topic` VALUES (1328, '以下关于VLAN的叙述中，属于其优点的是（）。', 1, '允许逻辑地划分网段', '减少了冲突域的数量', '增加了冲突域的大小', '减少了广播域的数量', 'A', NULL);
INSERT INTO `topic` VALUES (1329, '　　DHCP协议的功能是（）。', 1, 'WINS名字解析', '静态地址分配', 'DNS名字登录', '自动分配IP地址', 'D', NULL);
INSERT INTO `topic` VALUES (1330, '　　FTP使用的传输层协议为（）。', 1, 'TCP', 'IP', 'UDP', 'HDLC', 'A', NULL);
INSERT INTO `topic` VALUES (1331, '　　DHCP客户端可从DHCP服务器获得（）。', 1, 'DHCP服务器的地址和Web服务器的地址', 'DNS服务器的地址和DHCP服务器的地址', '客户端地址和邮件服务器地址', '默认网关的地址和邮件服务器地址', 'B', NULL);
INSERT INTO `topic` VALUES (1332, '　　ICMP协议属于因特网中的（）协议，ICMP协议数据单元封装在IP数据报中传送。', 1, '数据链路层', '网络层', '传输层', '会话层', 'B', NULL);
INSERT INTO `topic` VALUES (1333, '　　ICMP协议属于因特网中的网络层协议，ICMP协议数据单元封装在（）中传送。', 1, '以太帧', 'TCP段', 'UDP数据报', 'IP数据报', 'D', NULL);
INSERT INTO `topic` VALUES (1334, '　　分配给某公司网络的地址块是210.115.192.0/20，该网络可以被划分为（）个C类子网。', 1, '4', '8', '16', '32', 'C', NULL);
INSERT INTO `topic` VALUES (1335, '　　下面关于动态规划和备忘录方法的叙述中不正确的是（）。', 1, '网络管理服务器备忘录方法是自顶向下的递归方式', 'Web服务器动态规划是自底向上的，最其优值的计算不能递归定义', '入侵检测服务器当一个问题的所有子问题都至少需要求解一次时，用动态规划方法较好', '财务管理服务器当子问题空间的部分子问题可不必求解时，用备忘录方法较有利', 'B', NULL);
INSERT INTO `topic` VALUES (1336, '　　IP地址块155.32.80.192/26包含了（）个主机地址。', 1, '15', '32', '62', '64', 'C', NULL);
INSERT INTO `topic` VALUES (1337, '　　某用户在使用校园网中的一台计算机访问某网站时，发现使用域名不能访问该网站，但是使用网站的IP地址可以访问该网站，造成该故障产生的原因有很多，其中不包括（）。', 1, '该计算机设置的本地DNS服务器工作不正常', '该计算机的DNS服务器设置错误', '该计算机与DNS服务器不在同一子网', '本地DNS服务器网络连接中断', 'C', NULL);
INSERT INTO `topic` VALUES (1338, '　　中国自主研发的3G通信标准是（）。', 1, 'CDMA2000', 'TD-SCDMA', 'WCDMA', 'WiMAX', 'B', NULL);
INSERT INTO `topic` VALUES (1339, '　　在IPv4向IPv6过渡期间，如果要使得两个IPv6结点可以通过现有的IPv4网络进行通信，应该使用（）。', 1, '堆栈技术', '双协议栈技术', '隧道技术', '翻译技术', 'C', NULL);
INSERT INTO `topic` VALUES (1340, '　　在IPv4向IPv6过渡期间，如果要使得纯IPv6结点可以与纯IPv4结点进行通信，则需要使用（）。', 1, '堆栈技术', '双协议栈技术', '隧道技术', '翻译技术', 'D', NULL);
INSERT INTO `topic` VALUES (1341, '　　POP3协议采用（）模式进行通信，当客户机需要服务时，客户端软件与POP3服务器建立TCP连接。', 1, 'Browser/Server', 'Client/Server', 'PeertoPeer', 'PeertoServer', 'B', NULL);
INSERT INTO `topic` VALUES (1342, '　　POP3协议采用Client/Server模式进行通信，当客户机需要服务时，客户端软件与POP3服务器建立（）连接。', 1, 'TCP', 'UDP', 'php', 'IP', 'A', NULL);
INSERT INTO `topic` VALUES (1343, '　　把网络117.15.32.0/23划分为117.15.32.0/27，得到的子网是（）个。', 1, '4', '8', '16', '32', 'C', NULL);
INSERT INTO `topic` VALUES (1344, '　　通常工作在UDP协议上的应用是（）。', 1, '浏览网页', 'Telnet远程登录', 'VoIP', '发送邮件', 'C', NULL);
INSERT INTO `topic` VALUES (1345, '　　随着网站知名度不断提高，网站访问量逐渐上升，网站负荷越来越重，针对此问题，一方面可通过升级网站服务器的软硬件，另一方面可以通过集群技术，如DNS负载均衡技术来解决，在Windows的DNS服务器中通过（）操作可以确保域名解析并实现负载均衡。', 1, '启用循环，启动转发器指向每个Web服务器', '禁止循环，启动转发器指向每个Web服务器', '禁止循环，添加每个Web服务器的主机记录', '启用循环，添加每个Web服务器的主机记录', 'D', NULL);
INSERT INTO `topic` VALUES (1346, '　　如果DNS服务器更新了某域名的IP地址，造成客户端域名解析故障，客户端可以用两种方法解决此问题，其中一种是在Windows命令行下执行（）命令。', 1, 'ipconfig/all', 'ipconfig/renew', 'ipconfig/flushdns', 'ipconfig/release', 'C', NULL);
INSERT INTO `topic` VALUES (1347, '　　以下关于网络中各种交换设备的叙述中错误的是（）。', 1, '以太网交换机根据MAC地址进行交换', '帧中继交换机只能根据虚电路号DLCI进行交换', '三层交换机只能根据第三层协议进行交换', 'ATM交换机根据虚电路标识进行信元交换', 'C', NULL);
INSERT INTO `topic` VALUES (1348, '　　SMTP传输的邮件报文采用（）格式表示。', 1, 'ASCII', 'ZIP', 'PNP', 'HTML', 'A', NULL);
INSERT INTO `topic` VALUES (1349, '　　网络的可用性是指（）。', 1, '网络通信能力的大小', '用户用于网络维修的时间', '网络的可靠性', '用户可利用网络时间的百分比', 'D', NULL);
INSERT INTO `topic` VALUES (1350, '　　建筑物综合布线系统中的园区子系统是指（）。', 1, '由终端到信息插座之间的连线系统', '楼层接线间到工作区的线缆系统', '各楼层设备之间的互连系统', '连接各个建筑物的通信系统', 'D', NULL);
INSERT INTO `topic` VALUES (1351, '某公司要开发一个软件产品，产品的某些需求是明确的，而某些需求则需要进一步细化。由于市场的竞争压力，产品需要尽快上市，则开发该软件产品最不适合采用（）模型。', 1, '瀑布', '原型', '增量', '螺旋', 'A', NULL);
INSERT INTO `topic` VALUES (1352, '以下关于文档的叙述中，不正确的是（）。', 1, '项目相关人员可以通过文档进行沟通', '编写文档会降低软件开发的效率', '编写高质量的文档可以提高软件开发的质量', '文档是软件的不可或缺的部分', 'B', NULL);
INSERT INTO `topic` VALUES (1353, '在开发信息系统时，用于系统开发人员与项目管理人员沟通的主要文档是（）。', 1, '系统开发合同', '系统设计说明书', '系统开发计划', '系统测试报告', 'C', NULL);
INSERT INTO `topic` VALUES (1354, '以下不正确的是（）。', 1, '仅根据风险产生的后果来对风险排优先级', '可以通过改变系统性能或功能需求来避免某些风险', '不可能去除所有风险，但可以通过采取行动来降低或者减轻风险', '在项目开发过程中，要定期地评估和管理风险', 'A', NULL);
INSERT INTO `topic` VALUES (1355, '数据流图(DFD)对系统的功能和功能之间的数据流进行建模，其中顶层数据流图描述了系统的（）。', 1, '处理过程', '输入与输出', '数据存储', '数据实体', 'B', NULL);
INSERT INTO `topic` VALUES (1356, '数据字典是结构化分析的一个重要输出。数据字典的条目不包括（）。', 1, '外部实体', '数据流', '数据项', '基本加工', 'A', NULL);
INSERT INTO `topic` VALUES (1357, '　　模块A直接访问模块B的内部数据，则模块A和模块B的耦合类型为（）。', 1, '数据耦合', '标记耦合', '公共耦合', '内容耦合', 'D', NULL);
INSERT INTO `topic` VALUES (1358, '　　功能模块M1中函数F1()调用模块M2中的函数F2()，但是参数类型传递错误，（）测试应该最可能测出这一错误。', 1, 'M1的单元测试', 'M2的单元测试', 'M1和M2的集成测试', '确认测试', 'C', NULL);
INSERT INTO `topic` VALUES (1359, '　　由于信用卡公司升级了其信用卡支付系统，导致超市的原有信息系统也需要做相应的修改工作，该类维护属于（）。', 1, '正确性维护', '适应性维护', '完善性维护', '预防性维护', 'B', NULL);
INSERT INTO `topic` VALUES (1360, '　　能力成熟度集成模型CMMI是CMM模型的最新版本，它有连续式和阶段式两种表示方式。基于连续式表示的CMMI共有6个（0~5）能力等级，每个能力等级对应到一个一般目标以及一组一般执行方法和特定方法，其中能力等级（）主要关注过程的组织标准化和部署。', 1, '1', '2', '3', '4', 'C', NULL);
INSERT INTO `topic` VALUES (1361, '　　结构化开发方法中，（）主要包含对数据结构和算法的设计。', 1, '体系结构设计', '数据设计', '接口设计', '过程设计', 'D', NULL);
INSERT INTO `topic` VALUES (1362, '　　在敏捷过程的开发方法中，（）使用了迭代的方法，其中，把每段时间（30天）一次的迭代称为一个“冲刺”，并按需求的优先级别来实现产品，多个自组织和自治的小组并行地递增实现产品。', 1, '极限编程XP', '水晶法', '并列争球法', '自适应软件开发', 'C', NULL);
INSERT INTO `topic` VALUES (1363, '若用户需求不清晰且经常发生变化，但系统规模不太大且不太复杂，则最适宜采用（）开发方法。', 1, '结构化', 'Jackson', '原型化', '面向对象', 'C', NULL);
INSERT INTO `topic` VALUES (1364, '对于数据处理领域的问题，若系统规模不太大且不太复杂，需求变化也不大，则最适宜采用（）开发方法。', 1, '结构化', 'Jackson', '原型化', '面向对象', 'A', NULL);
INSERT INTO `topic` VALUES (1365, '　　以下关于软件项目管理中人员管理的叙述，正确的是（）。', 1, '项目组成员的工作风格也应该作为组织团队时要考虑的一个要素', '鼓励团队的每个成员充分地参与开发过程的所有阶段', '仅根据开发人员的能力来组织开发团队', '若项目进度滞后于计划，则增加开发人员一定可以加快开发进度', 'A', NULL);
INSERT INTO `topic` VALUES (1366, '　　某开发小组欲开发一个超大规模软件：使用通信卫星，在订阅者中提供、监视和控制移动电话通信，则最不适宜采用（）过程模型。', 1, '瀑布', '原型', '螺旋', '喷泉', 'A', NULL);
INSERT INTO `topic` VALUES (1367, '　　（）开发过程模型以用户需求为动力，以对象为驱动，适合于面向对象的开发方法。', 1, '瀑布', '原型', '螺旋', '喷泉', 'D', NULL);
INSERT INTO `topic` VALUES (1368, '　　在ISO/IEC软件质量模型中，易使用性的子特性不包括（）。', 1, '易理解性', '易学性', '易操作性', '易分析性', 'D', NULL);
INSERT INTO `topic` VALUES (1369, '　　在进行子系统结构设计时，需要确定划分后的子系统模块结构，并画出模块结构图。该过程不需要考虑（）。', 1, '每个子系统如何划分成多个模块', '每个子系统采用何种数据结构和核心算法', '如何确定子系统之间、模块之间传送的数据及其调用关系', '如何评价并改进模块结构的质量', 'B', NULL);
INSERT INTO `topic` VALUES (1370, '　　根据软件过程活动对软件工具进行分类，则逆向工程工具属于（）工具。', 1, '软件开发', '软件维护', '软件管理', '软件支持', 'B', NULL);
INSERT INTO `topic` VALUES (1371, '　　软件工程的基本要素包括方法、工具和（）。', 1, '软件系统', '硬件系统', '过程', '人员', 'C', NULL);
INSERT INTO `topic` VALUES (1372, '　　在（）设计阶段选择适当的解决方案，将系统分解为若干个子系统，建立整个系统的体系结构。', 1, '概要', '详细', '结构化', '面向对象', 'A', NULL);
INSERT INTO `topic` VALUES (1373, '　　风险的优先级通常是根据（）设定。', 1, '风险影响（RiskImpact）', '风险概率(RiskProbability)', '风险暴露(RiskExposure)', '风险控制(Riskcontrol)', 'A', NULL);
INSERT INTO `topic` VALUES (1374, '　某公司计划开发一个产品，技术含量很高，与客户相关的风险也很多，则最适合采用（）开发过程模型。', 1, '瀑布模型', '原型模型', '增量模型', '螺旋模型', 'D', NULL);
INSERT INTO `topic` VALUES (1375, '　在敏捷过程的方法中，（）认为每一个不同的项目都需要一套不同的策略、约定和方法论。', 1, '极限编程（XP）', '水晶法（Crystal）', '并列争球法（Scrum）', '自适应软件开发（ASD）', 'B', NULL);
INSERT INTO `topic` VALUES (1376, '　软件配置管理的内容不包括（）。', 1, '版本控制', '变量控制', '过程支持', '质量控制', 'D', NULL);
INSERT INTO `topic` VALUES (1377, '　　正式技术评审的目标是（）。', 1, '允许高级技术人员修改错误', '评价程序员的工作效率', '发现软件中的错误', '记录程序员的错误情况并与绩效挂钩', 'C', NULL);
INSERT INTO `topic` VALUES (1378, '　　自底向上的集成测试策略的优点包括（）。', 1, '主要的设计问题可以在测试早期处理', '不需要写驱动程序', '不需要写桩程序', '不需要进行回归测试', 'C', NULL);
INSERT INTO `topic` VALUES (1379, '　　以下关于软件可维护性的叙述中，不正确的是“可维护性（）”', 1, '是衡量软件质量的一个重要特性', '不受软件开发文档的影响', '是软件开发阶段各个时期的关键目标', '可以从可理解性、可靠性、可测试性、可行性、可移植性等方面进行度量', 'B', NULL);
INSERT INTO `topic` VALUES (1380, '模块A提供某个班级某门课程的成绩给模块B，模块B计算平均成绩、最高分和最低分，将计算结果返回给模块A，则模块B在软件结构图中属于（）模块。', 1, '传入', '传出', '变换', '协调', 'C', NULL);
INSERT INTO `topic` VALUES (1381, '　　以下关于数据流图中基本加工的叙述，不正确的是（）。', 1, '对每一个基本加工，必须有一个加工规格说明', '加工规格说明必须描述把输入数据流变换为输出数据流的加工规则', '加工规格说明必须描述实现加工的具体流程', '决策表可以用来表示加工规格说明', 'C', NULL);
INSERT INTO `topic` VALUES (1382, '　　在划分模块时，一个模块的作用范围应该在其控制范围之内。若发现其左右的是不在其控制范围内，则（）不是适当的处理方法。', 1, '将判定所在模块合并到父模块中，使判定处于较高层次', '将受判定影响的模块下移到控制范围内', '将判定上移到层次较高的位置', '将父模块下移，使该判定处于较高层次', 'D', NULL);
INSERT INTO `topic` VALUES (1383, '　　针对“关键支援在项目没完成时就跳槽”的风险，最不合适的风险管理策略是（）。', 1, '对每一个关键性的技术人员，要培养后备人员', '建立项目组，以使大家都了解有关开发活动的信息', '临时招聘具有相关能力的新职员', '对所有工作组织细致的评审', 'C', NULL);
INSERT INTO `topic` VALUES (1384, '　　（）开发过程模型最不适用于开发初期对软件需求缺乏准确全面认识的情况。', 1, '瀑布', '演化', '螺旋', '增量', 'A', NULL);
INSERT INTO `topic` VALUES (1385, '　　（）不是增量式开发的优点。', 1, '软件可以快速地交付', '早期的增量作为原型，从而可以加强对系统后续开发需求的理解', '具有最高优先级的功能首先交付，随着后续的增量不断加入，这就使得更重要的功能得到更多的测试', '很容易将客户需求划分为多个增量', 'A', NULL);
INSERT INTO `topic` VALUES (1386, '　　在对程序质量进行评审时，模块结构是一个重要的评审项，评审内容中不包括（）。', 1, '数据结构', '数据流结构', '控制流结构', '模块结构与功能结构之间的对应关系', 'A', NULL);
INSERT INTO `topic` VALUES (1387, '　　SEI能力成熟度模型(SEICMM)把软件开发企业分为5个成熟度级别，其中（）重点关注产品和过程质量。', 1, '级别2：重复级', '级别3：确定级', '级别4：管理级', '级别5：优化级', 'C', NULL);
INSERT INTO `topic` VALUES (1388, '　　系统可维护性的评价指标不包括（）。', 1, '可理解性', '可测试性', '可移植性', '可修改性', 'C', NULL);
INSERT INTO `topic` VALUES (1389, '　　逆向工程从源代码或目标代码中提取设计信息，通常在原软件生命周期的（）阶段进行。', 1, '需求分析', '软件设计', '软件实现', '软件维护', 'D', NULL);
INSERT INTO `topic` VALUES (1390, '　　一个程序根据输入的年份和月份计算该年中该月的天数，输入参数包括年份(正整数)、月份(用1～12表示)。若用等价类划分测试方法测试，则（）不是一个进行合适的测试用例(分号后表示测试的输出)。', 1, '(2013，l；31)', '(0，1；’错误’)', '(03；’错误’)', '(2000，-1；’错误’)', 'C', NULL);
INSERT INTO `topic` VALUES (1391, '　　（）不是单元测试主要检查的内容。', 1, '模块接口', '局部数据结构', '全局数据结构', '重要的执行路径', 'C', NULL);
INSERT INTO `topic` VALUES (1392, '　　统一过程模型是一种“用例和风险驱动，以架构为中心，迭代并且增量”的开发过程，定义了不同阶段及其制品，其中精化阶段关注（）。', 1, '项目的初始活动', '需求分析和架构演进', '系统的构建，产生实现模型', '软件提交方面的工作，产生软件增量', 'C', NULL);
INSERT INTO `topic` VALUES (1393, '　　 “软件产品必须能够在3秒内对用户请求做出响应”属于软件需求中的（）。', 1, '功能需求', '非功能需求', '设计约束', '逻辑需求', 'B', NULL);
INSERT INTO `topic` VALUES (1394, '　　某项目为了修正一个错误而进行了修改。错误修正后，还需要进行（）以发现这一修正是否引起原本正确运行的代码出错。', 1, '单元测试', '接受测试', '安装测试', '回归测试', 'D', NULL);
INSERT INTO `topic` VALUES (1395, '　　（）不属于软件设计质量评审。', 1, '功能与模块之间的对应关系', '软件规格说明是否符合用户的要求', '软件是否具有可测试性', '软件是否具有良好的可靠性', 'A', NULL);
INSERT INTO `topic` VALUES (1396, '　　在软件维护中，由于企业的外部市场环境和管理需求的变化而导致的维护工作，属于（）维护。', 1, '正确性', '适应性', '完善性', '预防性', 'B', NULL);
INSERT INTO `topic` VALUES (1397, '　　在对软件系统进行评价时，需要从信息系统的组成部分、评价对象和经济学角度出发进行综合考虑以建立起一套指标体系理论架构。从信息系统评价对象出发，对于用户方来说，他们所关心的是（）。', 1, '用户需求和运行质量', '系统外部环境', '系统内部结构', '系统质量和技术水平', 'A', NULL);
INSERT INTO `topic` VALUES (1398, '　　在设计测试用例时，应遵循（）原则。', 1, '仅确定测试用例的输入数据，无需考虑输出结果', '只需检验程序是否执行应有的功能，不需要考虑程序是否做了多余的功能', '不仅要设计有效、合理的输入，也要包含不合理、失效的输入', '测试用例应设计得尽可能复杂', 'C', NULL);
INSERT INTO `topic` VALUES (1399, '　　单元测试中，检查模块接口时，不需要考虑（）。', 1, '测试模块的输入参数和形式参数的个数、属性、单位上是否一致', '全局变量在各模块中的定义和用法是否一致', '输入是否改变了形式参数', '输入参数是否使用了尚未赋值或者尚未初始化的变量', 'B', NULL);
INSERT INTO `topic` VALUES (1400, '　　在软件设计阶段，划分模块的原则是：一个模块的（）。', 1, '作用范围应该在其控制范围之内', '控制范围应该在其作用范围之内', '作用范围与控制范围互不包含', '作用范围与控制范围不受限制', 'A', NULL);
INSERT INTO `topic` VALUES (1401, '　　确定软件的模块划分及模块之间的调用关系是（）阶段的任务。', 1, '需求分析', '概要设计', '详细设计', '编码', 'B', NULL);
INSERT INTO `topic` VALUES (1402, '　　利用结构化分析模型进行接口设计时，应以（）为依据。', 1, '数据流图', '实体-联系图', '数据字典', '状态-迁移图', 'A', NULL);
INSERT INTO `topic` VALUES (1403, '　　甘特图不能（）。', 1, '作为项目进度管理的一个工具', '清晰地描述每个任务的开始和截止时间', '清晰地获得并行任务的信息', '清晰地获得各任务之间的依赖关系', 'D', NULL);
INSERT INTO `topic` VALUES (1404, '　　关于风险管理叙述中，不正确的是（）。', 1, '仅根据风险产生的后果来对风险排优先级', '可以通过改变系统性能或功能需求来避免某些风险', '不可能去除所有风险，但可以通过采取行动来降低或者减轻风险', '在项目开发过程中，需要定期地评估和管理风险', 'A', NULL);
INSERT INTO `topic` VALUES (1405, '　　以下关于喷泉模型的叙述中，不正确的是（）。', 1, '喷泉模型是以对象作为驱动的模型，适合于面向对象的开发方法', '喷泉模型克服了瀑布模型不支持软件重用和多项开发活动集成的局限性。', '模型中的开发活动常常需要重复多次，在迭代过程中不断地完善软件系统。', '各开发活动（如分析、设计和编码）之差存在明显的边界。', 'D', NULL);
INSERT INTO `topic` VALUES (1406, '　　若全面采用新技术开发一个大学记账系统，以替换原有的系统，则宜选择采用（）进行开发。', 1, '瀑布模型', '演化模型', '螺旋模型', '原型模型', 'A', NULL);
INSERT INTO `topic` VALUES (1407, '　　将每个用户的数据和其他用户的数据隔离开，是考虑了软件的（）质量特性。', 1, '功能性', '可靠性', '可维护性', '易使用性', 'A', NULL);
INSERT INTO `topic` VALUES (1408, '　　在软件评审中，设计质量是指设计的规格说明书符合用户的要求。设计质量的评审内容不包括（）。', 1, '软件可靠性', '软件的可测试性', '软件性能实现情况', '模块层次', 'D', NULL);
INSERT INTO `topic` VALUES (1409, '　针对应用在运行期的数据特点，修改其排序算法使其更高效，属于（）维护。', 1, '正确性', '适应性', '完善性', '预防性', 'C', NULL);
INSERT INTO `topic` VALUES (1410, '　　对于防错性程序设计，可以有效地控制（）维护成本。', 1, '正确性', '适应性', '完善性', '预防性', 'A', NULL);
INSERT INTO `topic` VALUES (1411, '　　下列关于风险的叙述不正确的是：风险是指（）。', 1, '可能发生的事件', '一定会发生的事件', '会带来损失的事件', '可能对其进行干预，以减少损失的事件', 'B', NULL);
INSERT INTO `topic` VALUES (1412, '　为了有效地捕获需求，应采用（）。', 1, '瀑布模型', 'V模型', '原型模型', '螺旋模型', 'C', NULL);
INSERT INTO `topic` VALUES (1413, '　　高质量的文档应具有的特性中，不包括（）。', 1, '软件质量依赖于软件开发过程的质量，其中个人因素占主导作用', '要使过程改进有效，需要制定过程改进目标', '要使过程改进有效，需要进行培训', 'CMMI成熟度模型是一种过程改进模型，仅支持阶段性过程改进而不支持连续性过程改进', 'D', NULL);
INSERT INTO `topic` VALUES (1414, '　　软件产品的可靠性并不取决于（）。', 1, '潜在错误的数量', '潜在错误的位置', '软件产品的使用方式', '软件产品的开发方式', 'D', NULL);
INSERT INTO `topic` VALUES (1415, '软件（）是指一个系统在给定时间间隔内和给定条件上无失效运行的概率。', 1, '可靠性', '可用性', '可维护性', '可伸缩性', 'A', NULL);
INSERT INTO `topic` VALUES (1416, '　　高质量的文档所应具有的特性中，不包括（）。', 1, '针对性，文档编制应考虑读者对象群', '精确性，文档的行为应该十分确切，不能出现多义性的描述', '完整性，任何文档都应当是完整的、独立的，应该自成体系', '无重复性，同一软件系统的几个文档之间应该没有相同的内容，若确实存在相同的内容，则可以用“见**文档**节”的方法引用', 'D', NULL);
INSERT INTO `topic` VALUES (1417, '　　在软件维护阶段，为软件的运行增加监控设施属于（）维护。', 1, '改正性', '适应性', '完善性', '预防性', 'C', NULL);
INSERT INTO `topic` VALUES (1418, '在改正当前故障的同时可能会引起新的故障，这时需要进行（）。', 1, '功能测试', '性能测试', '回归测试', '验收测试', 'C', NULL);
INSERT INTO `topic` VALUES (1419, '　　某项目组拟开发一个大规模系统，且具备了相关领域及类似规模系统的开发经验。下列过程模型中，（）最适合开发此项目。', 1, '原型模型', '瀑布模型', 'V模型', '螺旋模型', 'B', NULL);
INSERT INTO `topic` VALUES (1420, '　　敏捷开发方法XP是一种轻量级、高效、低风险、柔性、可预测的、科学的软件开发方法，其特性包含在12个最佳实践中。系统的设计要能够尽可能早交付，属于（）最佳实践。', 1, '隐喻', '重构', '小型发布', '持续集成', 'C', NULL);
INSERT INTO `topic` VALUES (1421, '　　在软件开发过程中进行风险分析时，（）活动目的是辅助项目组建立处理风险的策略，有效的策略应考虑风险避免、风险监控、风险管理及意外事件计划。', 1, '风险识别', '风险预测', '风险评估', '风险控制', 'D', NULL);
INSERT INTO `topic` VALUES (1422, '　　关于过程改进的叙述中，错误的是（）。', 1, '过程能力成熟度模型基于这样的理念：改进过程将改进产品，尤其是软件产品', '软件过程改进框架包括评估、计划、改进和监控四个部分', '软件过程改进不是一次性的，需要反复进行', '在评估后要把发现的问题转化为软件过程改进计划', 'B', NULL);
INSERT INTO `topic` VALUES (1423, '　　软件复杂性度量的参数不包括（）。 ', 1, '软件的规模', '开发小组的规模', '软件的难度', '软件的结构', 'B', NULL);
INSERT INTO `topic` VALUES (1424, '　　软件系统的可维护性评价指标不包括（）。', 1, '可理解性', '可测试性', '扩展性', '可修改性', 'C', NULL);
INSERT INTO `topic` VALUES (1425, '　　关于软件系统文档的叙述中，错误的是（）。', 1, '软件系统文档即包括有一定格式要求的规范文档，又包括系统建设过程中的各种来往文件、会议纪要、会计单据等资料形成的不规范文档', '软件系统文档可以提高软件开发的可见度', '软件系统文档不能提高软件开发效率', '软件系统文档便于用户理解软件的功能、性能等各项指标', 'C', NULL);
INSERT INTO `topic` VALUES (1426, '　　关于软件测试的叙述中，正确的是（）。', 1, '软件测试不仅能表明软件中存在错误，也能说明软件中不存在错误', '软件测试活动应从编码阶段开始', '一个成功的测试能发现至今未发现的错误', '在一个被测试程序段中，若已发现的错误越多，则残存的错误数越少', 'C', NULL);
INSERT INTO `topic` VALUES (1427, '　　不属于黑盒测试技术的是（）。', 1, '错误猜测', '逻辑覆盖', '边界值分析', '等价类划分', 'B', NULL);
INSERT INTO `topic` VALUES (1428, '　　基于构件的软件开发，强调使用可复用对所需的构件进行合格性检验、（），并将它们集成到新系统中。', 1, '规模度量', '数据验证', '适应性修改', '正确性测试', 'C', NULL);
INSERT INTO `topic` VALUES (1429, '　　采用面向对象方法开发软件的过程中，抽取和整理用户需求并建立问题域型的过程叫（）。', 1, '面向对象测试', '面向对象实现', '面向对象设计', '面向对象分析', 'D', NULL);
INSERT INTO `topic` VALUES (1430, '　　使用白盒测试方法时，应根据（）和指定的覆盖标准确定。', 1, '程序的内部逻辑', '程序结构的复杂性', '使用说明书', '程序的功能', 'A', NULL);
INSERT INTO `topic` VALUES (1431, '　　对于一个大型软件来说，不加控制的变更很快就会引起混乱。为有效地实现变更控制，需借助于配置数据库和基线的概念。（）不属于配置数据库。', 1, '开发库', '受控库', '信息库', '产品库', 'C', NULL);
INSERT INTO `topic` VALUES (1432, '　　软件设计时需要遵循抽象、模块化、信息隐蔽和模块独立原则。在划分软件系统模块时，应尽量做到（）。', 1, '高内聚高耦合', '高内聚低耦合', '低内聚高耦合', '低内聚低耦合', 'B', NULL);
INSERT INTO `topic` VALUES (1433, '　　采用结构化方法进行系统分析时，根据分解和抽象的原则，按照系统中数据处理的流程，用（）来建立系统的逻辑模型，从而完成分析工作。', 1, 'E-R图', '数据流图', '程序流程图', '软件体系结构', 'B', NULL);
INSERT INTO `topic` VALUES (1434, '　　面向对象开发方法的基本思想是尽可能按照人类认识客观世界的方法来分析和解决问题，（）方法不属于面向对象方法。', 1, 'Booch', 'Coad', 'OTM', 'Jackson', 'D', NULL);
INSERT INTO `topic` VALUES (1435, '　　确定构建软件系统所需要的人数时，无需考虑（）。', 1, '系统的市场前景', '系统的规模', '系统的技术复杂性', '项目计划', 'A', NULL);
INSERT INTO `topic` VALUES (1436, '　　风险预测从两个方面评估风险，即风险发生的可能性以及（）。', 1, '风险产生的原因', '风险监控技术', '风险能否消除', '风险发生所产生的后果', 'D', NULL);
INSERT INTO `topic` VALUES (1437, '　　软件能力成熟度模型的第4级（已管理级）的核心是（）。', 1, '建立基本的项目管理和实践来跟踪项目费用、进度和功能特性', '组织具有标准软件过程', '对软件过程和产品都有定量的理解和控制', '先进的新思想和新技术促进过程不断改进', 'C', NULL);
INSERT INTO `topic` VALUES (1438, '　　软件系统设计的主要目的是为系统制定蓝图，（）并不是软件设计模型所关注的。', 1, '系统总体结构', '数据结构', '界面模型', '项目范围', 'D', NULL);
INSERT INTO `topic` VALUES (1439, '　　系统开发计划用于系统开发人员与项目管理人员在项目期内进行沟通，它包括（）和预算分配表等。', 1, 'PERT图', '总体规划', '测试计划', '开发合同', 'A', NULL);
INSERT INTO `topic` VALUES (1440, '　　改正在软件系统开发阶段已经发生而系统测试阶段还没有发现的错误，属于（）维护。', 1, '正确性', '适应性', '完善性', '预防性', 'A', NULL);
INSERT INTO `topic` VALUES (1441, '　　某系统重用了第三方组件（但无法获得其源代码），则应采用（）对组件进行测试。', 1, '基本路径覆盖', '分支覆盖', '环路覆盖', '黑盒测试', 'D', NULL);
INSERT INTO `topic` VALUES (1442, '　　极限编程（XP）由价值观、原则、实践和行为四个部分组成，其中价值观包括沟通、简单性、（）。', 1, '好的计划', '不断的发布', '反馈和勇气', '持续集成', 'C', NULL);
INSERT INTO `topic` VALUES (1443, '　　在采用面向对象技术构建软件系统时，很多敏捷方法都建议的一种重要的设计活动是（），它是一种重新组织的技术，可以简化构件的设计而无需改变其功能或行为。', 1, '精化', '设计类', '重构', '抽象', 'C', NULL);
INSERT INTO `topic` VALUES (1444, '　　一个软件开发过程描述了“谁做”、“做什么”、“怎么做”和“什么时候做”，RUP用（）来表述“谁做”。', 1, '角色', '活动', '制品', '工作流', 'A', NULL);
INSERT INTO `topic` VALUES (1445, '　　软件风险一般包含（）两个特性。', 1, '救火和危机管理', '已知风险和未知风险', '不确定性和损失', '员工和预算', 'C', NULL);
INSERT INTO `topic` VALUES (1446, '　　软件能力成熟度模型（CMM）将软件能力成熟度自低到高依次划分为5级。目前，达到第3级（已定义级）是许多组织努力的目标，该级的核心是（）。', 1, '建立基本的项目管理和实践来跟踪项目费用、进度和功能特性', '使用标准开发过程（或方法论）构建（或集成）系统', '管理层寻求更主动地应对系统的开发问题', '连续地监督和改进标准化的系统开发过程', 'B', NULL);
INSERT INTO `topic` VALUES (1447, '　　RUP在每个阶段都有主要目标，并在结束时产生一些制品。在（）结束时产生“在适当的平台上集成的软件产品”。', 1, '初期阶段', '精化阶段', '构建阶段', '移交阶段', 'C', NULL);
INSERT INTO `topic` VALUES (1448, '　　软件工程每一个阶段结束前，应该着重对可维护性进行复审。在系统设计阶段的复审期间，应该从（）出发，评价软件的结构和过程。', 1, '指出可移植性问题以及可能影响软件维护的系统界面', '容易修改、模块化和功能独立的目的', '强调编码风格和内部说明文档', '可测试性', 'B', NULL);
INSERT INTO `topic` VALUES (1449, '　　某银行为了使其网上银行系统能够支持信用卡多币种付款功能而进行扩充升级，这需要对数据类型稍微进行一些改变，这一状况需要对网上银行系统进行（）维护。', 1, '正确性', '适应性', '完善性', '预防性', 'B', NULL);
INSERT INTO `topic` VALUES (1450, '　　RUP（RationalUnifiedProcess）分为4个阶段，每个阶段结束时都有重要的里程碑，其中生命周期架构是在（）结束时的里程碑。', 1, '初启阶段', '精化阶段', '构建阶段', '移交阶段', 'B', NULL);
INSERT INTO `topic` VALUES (1451, '　　在软件工程环境中进行风险识别时，常见的、已知的及可预测的风险类包括产品、规模、商业影响等，与开发工具的可用性及质量相关的风险是（）。', 1, '客户特性', '过程定义', '开发环境', '构建技术', 'C', NULL);
INSERT INTO `topic` VALUES (1452, '　　软件能力成熟度模型（CMM）将软件能力成熟度自低到高依次划分为初始级、可重复级、定义级、管理级和优化级。其中（）对软件过程和产品都有定量的理解与控制。', 1, '可重复级和定义级', '定义级和管理级', '管理级和优化级', '定义级、管理级和优化级', 'C', NULL);
INSERT INTO `topic` VALUES (1453, '　　归并算法采用的设计方法是（）。', 1, '分治法', '贪心法', '动态规划法', '回溯法', 'A', NULL);
INSERT INTO `topic` VALUES (1454, '　　回溯法解旅行售货员问题时的解空间树是（）。', 1, '子集树', '排列树', '深度优先生成树', '广度优先生成树', 'B', NULL);
INSERT INTO `topic` VALUES (1455, '　　衡量一个算法好坏的标准是（）。', 1, '运行速度快', '占用空间少', '时间复杂度低', '代码短', 'C', NULL);
INSERT INTO `topic` VALUES (1456, '　　以下不可以使用分治法求解的是（）。', 1, '棋盘覆盖问题', '选择问题', '归并排序', '0/1背包问题', 'D', NULL);
INSERT INTO `topic` VALUES (1457, '　　实现循环赛日程表利用的算法是（）。', 1, '分治策略', '动态规划法', '贪心法', '回溯法', 'A', NULL);
INSERT INTO `topic` VALUES (1458, '　　下面不是分支界限法搜索方式的是（）。', 1, '广度优先', '最小耗费优先', '最大效益优先', '深度优先', 'D', NULL);
INSERT INTO `topic` VALUES (1459, '　　下列算法中通常以深度优先方式系统搜索问题解的是（）。', 1, '备忘录法', '动态规划法', '贪心法', '回溯法', 'D', NULL);
INSERT INTO `topic` VALUES (1460, '　　备忘录方法是（）算法的变形。', 1, '分治法', '动态规划法', '贪心法', '回溯法', 'B', NULL);
INSERT INTO `topic` VALUES (1461, '　　哈弗曼编码的贪心算法所需的计算时间为（）。', 1, 'O（n2n）', 'O（nlogn）', 'O（2n）', 'O（n）', 'B', NULL);
INSERT INTO `topic` VALUES (1462, '　　分支限界法解最大团问题时，活结点表的组织形式是（）。', 1, '最小堆', '最大堆', '栈', '数组', 'B', NULL);
INSERT INTO `topic` VALUES (1463, '　　实现棋盘覆盖算法利用的算法是（）。', 1, '分治法', '动态规划法', '贪心法', '回溯法', 'A', NULL);
INSERT INTO `topic` VALUES (1464, '　　下面是贪心算法的基本要素的是（）。', 1, '重叠子问题', '构造最优解', '贪心选择性质', '定义最优解', 'C', NULL);
INSERT INTO `topic` VALUES (1465, '　　回溯法的效率不依赖于下列哪些因素（）。', 1, '满足显约束的值的个数', '计算约束函数的时间', '计算限界函数的时间', '确定解空间的时间', 'D', NULL);
INSERT INTO `topic` VALUES (1466, '　　下面哪种函数是回溯法中为避免无效搜索采取的策略（）。', 1, '递归函数', '剪枝函数', '随机数函数', '搜索函数', 'B', NULL);
INSERT INTO `topic` VALUES (1467, '　　下面关于NP问题说法正确的是（）。', 1, 'NP问题都是不可能解决的问题', 'P类问题包含在NP类问题中', 'NP完全问题是P类问题的子集', 'NP类问题包含在P类问题中', 'B', NULL);
INSERT INTO `topic` VALUES (1468, '　　蒙特卡罗算法是（）的一种。', 1, '分支界限算法', '概率算法', '贪心算法', '回溯算法', 'B', NULL);
INSERT INTO `topic` VALUES (1469, '　　下列哪一种算法不是随机化算法（）。', 1, '蒙特卡罗算法', '拉斯维加斯算法', '动态规划算法', '舍伍德算法', 'C', NULL);
INSERT INTO `topic` VALUES (1470, '　　（）是贪心算法与动态规划算法的共同点。', 1, '重叠子问题', '构造最优解', '贪心选择性质', '最优子结构性质', 'D', NULL);
INSERT INTO `topic` VALUES (1471, '　　矩阵链乘问题的算法可由（）设计实现。', 1, '分支界限算法', '动态规划算法', '贪心算法', '回溯算法', 'B', NULL);
INSERT INTO `topic` VALUES (1472, '　　分支限界法解旅行售货员问题时，活结点表的组织形式是（）。', 1, '最小堆', '最大堆', '栈', '数组', 'A', NULL);
INSERT INTO `topic` VALUES (1473, '　　Strassen矩阵乘法是利用（）实现的算法。', 1, '分治策略', '动态规划法', '贪心法', '回溯法', 'A', NULL);
INSERT INTO `topic` VALUES (1474, '　　使用分治法求解不需要满足的条件是（）。', 1, '子问题必须是一样的', '子问题不能够重复', '子问题的解可以合并', '原问题和子问题使用相同的方法求解', 'A', NULL);
INSERT INTO `topic` VALUES (1475, '　　下面问题（）不能使用贪心法解决。', 1, '单源最短路径问题', 'N皇后问题', '最小花费生成树问题', '背包问题', 'B', NULL);
INSERT INTO `topic` VALUES (1476, '　　下列算法中不能解决0/1背包问题的是（）。', 1, '贪心法', '动态规划', '回溯法', '分支限界法', 'A', NULL);
INSERT INTO `topic` VALUES (1477, '　　回溯法搜索状态空间树是按照（）的顺序。', 1, '中序遍历', '广度优先遍历', '深度优先遍历', '层次优先遍历', 'C', NULL);
INSERT INTO `topic` VALUES (1478, '　　下列是动态规划算法基本要素的是（）。', 1, '定义最优解', '构造最优解', '算出最优解', '子问题重叠性质', 'D', NULL);
INSERT INTO `topic` VALUES (1479, '　　下列算法中通常以自底向上的方式求解最优解的是（）。', 1, '分治法', '动态规划法', '贪心法', '回溯法', 'B', NULL);
INSERT INTO `topic` VALUES (1480, '　　采用广度优先策略搜索的算法是（）。', 1, '分支界限法', '动态规划法', '贪心法', '回溯法', 'A', NULL);
INSERT INTO `topic` VALUES (1481, '　　合并排序算法是利用（）实现的算法。', 1, '分治策略', '动态规划法', '贪心法', '回溯法', 'A', NULL);
INSERT INTO `topic` VALUES (1482, '　　在下列算法中得到的解未必正确的是（）。', 1, '蒙特卡罗算法', '拉斯维加斯算法', '舍伍德算法', '数值概率算法', 'B', NULL);
INSERT INTO `topic` VALUES (1483, '　　背包问题的贪心算法所需的计算时间为（）。', 1, 'O（n2n）', 'O（nlogn）', 'O（2n）', 'O（n）', 'B', NULL);
INSERT INTO `topic` VALUES (1484, '　　实现大整数的乘法是利用算法（）。', 1, '贪心法', '动态规划法', '分治策略', '回溯法', 'C', NULL);
INSERT INTO `topic` VALUES (1485, '　　0-1背包问题的回溯算法所需的计算时间为（）。', 1, 'O（n2n）', 'O（nlogn）', 'O（2n）', 'O（n）', 'A', NULL);
INSERT INTO `topic` VALUES (1486, '　　贪心算法与动态规划算法的主要区别是（）。', 1, '最优子结构', '贪心选择性质', '构造最优解', '定义最优解', 'B', NULL);
INSERT INTO `topic` VALUES (1487, '　　实现最大子段和利用的算法是（）。', 1, '分治策略', '动态规划法', '贪心法', '回溯法', 'B', NULL);
INSERT INTO `topic` VALUES (1488, '　　优先队列式分支限界法选取扩展结点的原则是（）。', 1, '先进先出', '后进先出', '结点的优先级', '随机', 'C', NULL);
INSERT INTO `topic` VALUES (1489, '　　广度优先是（）的一种搜索方式。', 1, '分支界限法', '动态规划法', '贪心法', '回溯法', 'A', NULL);
INSERT INTO `topic` VALUES (1490, '　　舍伍德算法是（）的一种。', 1, '分支界限算法', '概率算法', '贪心算法', '回溯算法', 'B', NULL);
INSERT INTO `topic` VALUES (1491, '　　下列哪一种算法是随机化算法（）。', 1, '贪心算法', '回溯法', '动态规划算法', '舍伍德算法', 'D', NULL);
INSERT INTO `topic` VALUES (1492, '　　一个问题可用动态规划算法或贪心算法求解的关键特征是问题的（）。', 1, '重叠子问题', '最优子结构性质', '贪心选择性质', '定义最优解', 'B', NULL);
INSERT INTO `topic` VALUES (1493, '　　采用贪心算法的最优装载问题的主要计算量在于将集装箱依其重量从小到大排序，故算法的时间复杂度为（）。', 1, 'O（n2n）', 'O（nlogn）', 'O（2n）', 'O（n）', 'B', NULL);
INSERT INTO `topic` VALUES (1494, '　　以深度优先方式系统搜索问题解的算法称为（）。', 1, '分支界限算法', '概率算法', '贪心算法', '回溯算法', 'D', NULL);
INSERT INTO `topic` VALUES (1495, '　　实现最长公共子序列利用的算法是（）。', 1, '分治策略', '动态规划法', '贪心法', '回溯法', 'B', NULL);
INSERT INTO `topic` VALUES (1496, '　　函数32n+10nlogn的渐进表达式是（）。', 1, '2n', '32n', 'nlogn', '10nlogn', 'B', NULL);
INSERT INTO `topic` VALUES (1497, '　　大整数乘法算法是（）算法。', 1, '分治', '贪心', '动态规划', '穷举', 'A', NULL);
INSERT INTO `topic` VALUES (1498, '　　用动态规划算法解决最大子段和问题，其时间复杂性为（）。', 1, 'logn', 'n', 'n2', 'nlogn', 'B', NULL);
INSERT INTO `topic` VALUES (1499, '　　解决活动安排问题，最好用（）算法。', 1, '分治', '贪心', '动态规划', '穷举', 'B', NULL);
INSERT INTO `topic` VALUES (1500, '　　设f（N），g（N）是定义在正数集上的正函数，如果存在正的常数C和自然数N0，使得当N≥N0时有f（N）≤Cg（N），则称函数f（N）当N充分大时有下界g（N），记作f（N）∈○（g（N）），即f（N）的阶（）g（N）的阶。', 1, '不高于', '不低于', '等价于', '逼近', 'A', NULL);
INSERT INTO `topic` VALUES (1501, '　　回溯法在解空间树T上的搜索方式是（）。', 1, '深度优先', '广度优先', '最小耗费优先', '活结点优先', 'A', NULL);
INSERT INTO `topic` VALUES (1502, '　　回溯算法和分支限界法的问题的解空间树不会是（）。', 1, '有序树', '子集树', '排列树', '无序树', 'D', NULL);
INSERT INTO `topic` VALUES (1503, '　　在对问题的解空间树进行搜索的方法中，一个活结点最多有一次机会成为活结点的是（）。', 1, '回溯法', '分支限界法', '回溯法和分支限界法', '回溯法求解子集树问题', 'B', NULL);
INSERT INTO `topic` VALUES (1504, '　　从活结点表中选择下一个扩展结点的不同方式将导致不同的分支限界法，以下除（）之外都是最常见的方式。', 1, '队列式分支限界法', '优先队列式分支限界法', '栈式分支限界法', 'FIFO分支限界法', 'C', NULL);
INSERT INTO `topic` VALUES (1505, '　　在13个元素构成的有序表A[1..13]中进行折半查找（或称为二分查找，向下取整）。那么以下叙述中，错误的是（）。', 1, '无论查找哪个元素，都先与A[7]进行比较', '若要查找的元素等于A[9]，则需要与A[7]、A[11]、A[9]进行比较', '无论要查找的元素是否在A[]中，最多与表中的4个元素比较即可', '若待查找的元素不在A[]中，最少需要与表中的3个元素进行比较', 'B', NULL);
INSERT INTO `topic` VALUES (1506, '　　递归算法的执行过程,一般来说,可先后分成（）两个阶段。', 1, '试探与回溯', '递推与回归', '枚举与返回', '分析与合成', 'B', NULL);
INSERT INTO `topic` VALUES (1507, '　　若一个问题的求解既可以用递归算法，也可以用递推算法，则往往用（）算法。', 1, '先递归后递推', '先递推后递归', '递归', '递推', 'D', NULL);
INSERT INTO `topic` VALUES (1508, '　　贪心算法是一种（）的算法。', 1, '不求最优，只求满意', '只求最优', '求取全部可行解', '求取全部最优解', 'A', NULL);
INSERT INTO `topic` VALUES (1509, '　　算法是对问题求解过程的一类精确描述，算法中描述的操作都是可以通过已经实现的基本操作在限定时间内执行有限次来实现的，这说明算法具有（）特性。', 1, '正确性', '确定性', '能行性', '健壮性', 'C', NULL);
INSERT INTO `topic` VALUES (1510, '　　快速排序算法采用的设计方法是（）。', 1, '动态规划法(DynamicProgramming)', '分治法(DivideandConquer)', '回溯法(Backtracking)', '分枝定界法(BranchandBound)', 'B', NULL);
INSERT INTO `topic` VALUES (1511, '　　在数据压缩编码的应用中，哈夫曼算法可以用来构造具有最优前缀码的二叉树，这是一种采用了（）的算法。', 1, '贪心', '分治', '递推', '回溯', 'A', NULL);
INSERT INTO `topic` VALUES (1512, '　　下述函数中渐进时间最小的是（）。', 1, 'T1(n)=nlog2n+100log2n', 'T2(n)=2nlog2n-100log2n', 'T3(n)=n2-100log2n', 'T4(n)=4nlog2n-100log2n', 'A', NULL);
INSERT INTO `topic` VALUES (1513, '　　将两个长度为n的递增有序表归并成一个长度为2n的递增有序表，最少需要进行关键字比较（）次。', 1, 'i', 'n-1', 'n', '2n', 'C', NULL);
INSERT INTO `topic` VALUES (1514, '　　对n个元素进行快速排序时，最坏情况下的时间复杂度为（）。', 1, 'O(1og2n)', 'O(n)', 'O(nlog2n)', 'O(n2)', 'D', NULL);
INSERT INTO `topic` VALUES (1515, '　　采用动态规划策略求解问题的显著特征是满足最优性原理，其含义是（）。', 1, '当前所出的决策不会影响后面的决策', '原问题的最优解包含其子问题的最优解', '问题可以找到最优解，但利用贪心法不能找到最优解', '每次决策必须是当前看来最优决策才可以找到最优解', 'B', NULL);
INSERT INTO `topic` VALUES (1516, '　　拉斯维加斯（LasVegas）算法是一种常用的（）算法。', 1, '确定性', '近似', '概率', '加密', 'C', NULL);
INSERT INTO `topic` VALUES (1517, '　　在分支-界限算法设计策略中，通常采用（）搜索问题的解空间。', 1, '深度优先', '广度优先', '自底向上', '拓扑排序', 'B', NULL);
INSERT INTO `topic` VALUES (1518, '　　在下列算法设计方法中，（）在求解问题的过程中并不从整体最优上加以考虑，而是做出在当前看来是最好的选择。', 1, '分治法', '贪心法', '动态规划法', '回溯法', 'B', NULL);
INSERT INTO `topic` VALUES (1519, '　　利用贪心方法可以解决（）问题。', 1, '排序', '检索', '背包', '0/1背包', 'C', NULL);
INSERT INTO `topic` VALUES (1520, '　　下面的排序算法中，最坏情况下计算时间可以达到O（nlogn）的是（）。', 1, '归并算法', '插入算法', '选择算法', '冒泡算法', 'A', NULL);
INSERT INTO `topic` VALUES (1521, '　　为在状态空间树中（），可以利用LC-检索（LeastCostSearch）快速找到一个答案结点。', 1, '找出任一个答案结点', '找出所有的答案结点', '找出最优的答案结点', '进行遍历', 'C', NULL);
INSERT INTO `topic` VALUES (1522, '利用动态规划方法求解每对结点之间的最短路径问题(allpairsshortestpathproblem)时，设有向图G=<V，E>共有n个结点，结点编号1～n，设C是G的成本邻接矩阵，Dk(i，j)即为图G中结点i到j并且不经过编号比k还大的结点的最短路径的长度（Dn(i，j)即为图G中结点i到j的最短路径长度），则求解该问题的递推关系式为（）。', 1, 'Dk(i，j)=Dk-1(i，j)+C(i，j)', 'Dk(i，j)=min{Dk-1(i，j)，Dk-1(i，j)+C(i，j)}', 'Dk(i，j)=Dk-1(i，k)+Dk-1(k，j)', 'Dk(i，j)=min{Dk-1(i，j)，Dk-1(i，k)+Dk-1(k，j)}', 'D', NULL);
INSERT INTO `topic` VALUES (1523, '　　利用贪心法求解背包问题时，（）能够确保获得最优解。', 1, '优先选取重量最小的物品', '优先选取效益最大的物品', '优先选取单位重量效益最大的物品', '没有任何准则', 'C', NULL);
INSERT INTO `topic` VALUES (1524, '　　对于求取两个长度为n的最长公共子序列问题，利用（）策略可以有效地避免最长公共子序列重复计算，得到时间复杂度为O(n2)的正确算法。', 1, '分治法', '贪心法', '动态规划方法', '分支-限界', 'C', NULL);
INSERT INTO `topic` VALUES (1525, '　　设某算法的计算时间可用递推关系式T(n)=2T(n/2)+n表示，则该算法的时间复杂度为（）。', 1, 'O(logn)', 'O(nlogn)', 'O(n)', 'O(n2)', 'B', NULL);
INSERT INTO `topic` VALUES (1526, '　　求单源点最短路径的迪杰斯特拉（Dijkstra）算法是按（）的顺序求源点到各顶点的最短路径的。', 1, '路径长度递减', '路径长度递增', '顶点编号递减', '顶点编号递增', 'B', NULL);
INSERT INTO `topic` VALUES (1527, '　　（）算法策略与递归技术的联系最弱。', 1, '动态规划', '贪心', '回溯', '分治', 'B', NULL);
INSERT INTO `topic` VALUES (1528, '　　对于有n个元素的一个数据序列，若只需得到其中第k个元素之前的部分序列，最好采用（）。', 1, '希尔排序', '直接插入排序', '快速排序', '堆排序', 'D', NULL);
INSERT INTO `topic` VALUES (1529, '　　使用分治(DivideandConquer)策略的是（）算法。', 1, '冒泡排序', '插入排序', '快速排序', '堆排序', 'C', NULL);
INSERT INTO `topic` VALUES (1530, '　　设商店有10元、5元、2元和1元的零币，每种零币的数量充足。售货员给顾客找零钱时，零币的数量越少越好。例如给顾客找零29元：先选2张10元币，然后选择1张5元币，再选择两张2元币。以上的找零钱方法采用了（）策略。', 1, '分治', '贪心', '动态规划', '回溯', 'B', NULL);
INSERT INTO `topic` VALUES (1531, '　　迪杰斯特拉（Dijkstra)算法按照路径长度递增的方式求解单源点最短路径问题，该算法运用了（）算法策略。', 1, '贪心', '分而治之', '动态规划', '试探＋回溯', 'A', NULL);
INSERT INTO `topic` VALUES (1532, '　　关于算法与数据结构的关系，（）是正确的。', 1, '算法的实现依赖于数据结构的设计', '算法的效率与数据结构无关', '数据结构越复杂，算法的效率越高', '数据结构越简单，算法的效率越高', 'A', NULL);
INSERT INTO `topic` VALUES (1533, '　　某一维数组中依次存放了数据元素12,23,30,38,41,52,54,76,85，在用折半(二分)查找方法(向上取整)查找元素54时，所经历“比较”运算的数据元素依次为（）。', 1, '41,52,54', '41,76,54', '41,76,52,54', '41,30,76,54', 'B', NULL);
INSERT INTO `topic` VALUES (1534, '　　给定一组长度为n的无序序列，将其存储在一维数组a[0..n-1]中。现采用如下方法找出其中的最大元素和最小元素：比较a[0]和a[n-1]，若a[0]较大，则将二者的值进行交换;再比较a[1]和a[n-2]，若a[1]较大，则交换二者的值;然后依次比较a[2]和a[n-3]、a[3]和a[n-4]、…，使得每一对元素中的较小者被交换到低下标端。重复上述方法，在数组的前n/2个元素中查找最小元素，在后n/2个元素查找最大元素，从而得到整个序列的最小元素和最大元素。上述方法采用的算法设计策略是（）。', 1, '动态规划法', '贪心法', '分治法', '回溯法', 'C', NULL);
INSERT INTO `topic` VALUES (1535, '　　现有16枚外形相同的硬币，其中有一枚比真币的重量轻的假币，若采用分治法找这枚假币，至少比较（）次才能够找出该假币。', 1, '3', '4', '5', '6', 'B', NULL);
INSERT INTO `topic` VALUES (1536, '　　以下的算法设计方法中，（）以获取问题最优解为目标。', 1, '回溯方法', '分治方法', '动态规划', '递推', 'C', NULL);
INSERT INTO `topic` VALUES (1537, '　　归并排序采用的算法设计方法属于（）。', 1, '归纳法', '分治法', '贪心法', '回溯方法', 'B', NULL);
INSERT INTO `topic` VALUES (1538, '　　以下关于快速排序算法描述中，错误的是（）。', 1, '快速排序算法是不稳定的排序算法', '快速排序算法在最坏情况下的时间复杂度为O（nlogn)', '快速排序算法是一种分治算法', '当输入数据基本有序时，快速排序算法具有最坏情况下的时间复杂度', 'B', NULL);
INSERT INTO `topic` VALUES (1539, '　　在快速排序过程中，需要设立基准元素并划分序列来进行排序。若序列由元素｛12，25，30，45，52，67，85｝构成，则初始排列为（）时，排序效率最高（令序列的第一个元素为基准元素）。', 1, '45，12，30，25，67，52，85', '85，67，52，45，30，25，12', '12，25，30，45，52，67，85', '45，12，25，30，85，67，52', 'A', NULL);
INSERT INTO `topic` VALUES (1540, '　　对n个元素的有序表A[1:n]进行顺序查找，其成功查找的平均查找长度（即在查找表中找到指定关键码的元素时，所进行比较的表中元素个数的期望值）为（）。', 1, 'n', '（n+1)/2', 'log2n', 'n2', 'B', NULL);
INSERT INTO `topic` VALUES (1541, '　　要在8*8的棋盘上摆放8个“皇后”，要求皇后之间不能发生冲突，即任何两个“皇后”不能在同一行、同一列和相同的对角线上，则一般采用（）来实现。', 1, '分治法', '动态规划法', '贪心法', '回溯法', 'D', NULL);
INSERT INTO `topic` VALUES (1542, '　　分治算法设计技术（）。', 1, '一般由三个步骤组成：问题划分、递归求解、合并解', '一定是用递归技术来实现', '将问题划分为k个规模相等的子问题', '划分代价很小而合并代价很大', 'A', NULL);
INSERT INTO `topic` VALUES (1543, '　　递增序列A(a1,a2,…,an)和B(b1,b2,…,bn)的元素互不相同，若需将它们合并为一个长度为2n的序列，则当最终的排列结果为（）时，归并过程中元素的比较次数最多。', 1, 'a1,a2,…,an,b1,b2,…,bn', 'b1,b2,…,bn,a1,a2,…,an', 'a1,b1,…,ai,bi,…an,bn', 'a1,a2,…,ai/2,b1,b2,…,bi/2,ai/2+1,ai/2+2,…,an,bi/2+1,bi/2+2,…bn', 'C', NULL);
INSERT INTO `topic` VALUES (1544, '　　某货车运输公司有一个中央仓库和n个运输目的地，每天要从中央仓库将货物运输到所有运输目的地，到达每个运输目的地一次且仅一次，最后回到中央仓库。在两个地点i和j之间运输货物存在费用cij，为求解旅行费用总和最小的运输路径，设计如下算法：首先选择离中央仓库最近的目的地1，然后选择离运输目的地1最近的运输目的地2，…，每次在来访过的运输目的地中选择离当前运输目的地最近的运输目的地，最后回到中央仓库，该算法采用了（）算法的设计策略。', 1, '分治', '动态规划', '贪心', '回溯', 'C', NULL);
INSERT INTO `topic` VALUES (1545, '　　对n个基本有序的整数进行排序，若采用插入排序算法，则时间和空间复杂度分别为（）。', 1, 'O(n2)和O(n)', 'O(n)和O(n)', 'O(n)和O(1)', 'O(n)和O(1)', 'C', NULL);
INSERT INTO `topic` VALUES (1546, '　　对n个基本有序的整数进行排序，若采用快速排序算法，则时间和空间复杂度分别为（）。', 1, 'O(n2)和O(n)', 'O(nlogn)和O(n)', 'O(n)和O(1)', 'O(nlogn)和O(1)', 'A', NULL);
INSERT INTO `topic` VALUES (1547, '　　在求解某问题时，经过分析发现该问题具有最优子结构性质，求解过程中子问题被重复求解，则采用（）算法设计策略。', 1, '分治', '动态规划', '贪心', '回溯', 'B', NULL);
INSERT INTO `topic` VALUES (1548, '　　在求解某问题时，以深度优先的方法搜索解空间，则采用（）算法设计策略。', 1, '分治', '动态规划', '贪心', '回溯', 'D', NULL);
INSERT INTO `topic` VALUES (1549, '　　实现二分查找（折半查找）时，要求查找表（）。', 1, '顺序存储，关键码无序排列', '顺序存储，关键码有序排列', '双向链表存储，关键码无序排列', '双向链表存储，关键码有序排列', 'B', NULL);
INSERT INTO `topic` VALUES (1550, '　　某个算法的时间复杂度递归式T(n)=T(n-1)+n，其中n为问题规模，该算法的渐进时间复杂度为（）。', 1, 'O（n）', 'O（nlgn）', 'O（n2）', 'O（n2lgn）', 'C', NULL);
INSERT INTO `topic` VALUES (1551, '　　快速排序算法在排序过程中，在待排序数组中确定一个元素为基准元素，根据基准元素把待排数组划分成两个部分，前一部分元素值小于等于基准元素，而后一部分元素值大于等于基准元素。然后再分别对前后两部分进一步进行划分。根据上述描述，快速排序采用了（）算法设计策略。', 1, '分治', '动态规划', '贪心', '回溯', 'A', NULL);
INSERT INTO `topic` VALUES (1552, '　　对某有序顺序表进行折半查找时，（）不可能构成查找过程中关键字的比较序列。', 1, '45,10,30,18,25', '45,30,18,25,10', '10,45,18,30,25', '10,18,25,30,45', 'B', NULL);
INSERT INTO `topic` VALUES (1553, '　　在n个数的数组中确定其第i(1<=i<=n)小的数时，可以采用快速排序算法中的划分思想，对n个元素划分，先确定第k小的数，根据i和k的大小关系，进一步处理，最终得到第i小的数。划分过程中，最佳的基准元素选择的方法是选择待划分数组的（）元素。', 1, '第一个', '最后一个', '中位数', '随机一个', 'C', NULL);
INSERT INTO `topic` VALUES (1554, '　已知算法A的运行时间函数为T(n)=8T(n/2)+n2，其中n表示问题的规模，则该算法的时间复杂度为（）。', 1, 'O(n)', 'O(nlgn)', 'O(n2)', 'O(n3)', 'D', NULL);
INSERT INTO `topic` VALUES (1555, '　　已知算法A的运行时间函数为T(n)=8T(n/2)+n2，算法B的运行时间函数为T(n)=XT(n/4)+n2，其中n表示问题的规模，对充分大的n，若要算法B比算法A快，则X的最大值为（）。', 1, '15', '17', '63', '65', 'C', NULL);
INSERT INTO `topic` VALUES (1556, '　　给定关系模式R<U,F>，U=｛A，B，C},F={AB→C,C→B｝。关系R（）。', 1, '只有1个候选关键字AC', '只有1个候选关键字AB', '有2个候选关键字AC和BC', '有2个候选关键字AC和AB', 'D', NULL);
INSERT INTO `topic` VALUES (1557, '　　在某企业的营销管理系统设计阶段，属性“员工”在考勤管理子系统中被称为“员工”，而在档案管理子系统中被称为“职工”，这类冲突称为（）冲突。', 1, '语义', '结构', '属性', '命名', 'D', NULL);
INSERT INTO `topic` VALUES (1558, '　　确定系统边界和关系规范化分别在数据库设计的（）阶段进行。', 1, '需求分析和逻辑设计', '需求分析和概念设计', '逻辑设计和概念设计', '需求分析和物理设计', 'A', NULL);
INSERT INTO `topic` VALUES (1559, '　　设有员工实体Emp（员工号，姓名，性别，年龄，出生年月，联系方式），其中联系方式要求记录该员工的手机号码和办公室电话。Emp实体存在派生属性和多值属性（）。', 1, '年龄和出生年月', '年龄和联系方式', '出生年月和联系方式', '出生年月和年龄', 'B', NULL);
INSERT INTO `topic` VALUES (1560, '　　软硬件故障造成数据库中的数据破坏，数据库恢复就是（）。', 1, '重新安装数据库管理系统和应用程序', '重新安装应用程序，并将数据库做镜像', '重新安装数据库管理系统，并将数据库做镜像', '在尽可能短的时间内，把数据库恢复到故障发生前的状态', 'D', NULL);
INSERT INTO `topic` VALUES (1561, '　　采用二维表结构表达实体类型及实体间联系的数据模型是（）。', 1, '层次模型', '网状模型', '关系模型', '面向对象模型', 'C', NULL);
INSERT INTO `topic` VALUES (1562, '　　若事务T1对数据A已加排它锁，那么其它事务对数据A（）。', 1, '加共享锁成功，加排它锁失败', '加排它锁成功，加共享锁失败', '加共享锁、加排它锁都成功', '加共享锁、加排它锁都失败', 'D', NULL);
INSERT INTO `topic` VALUES (1563, '　　建立一个供应商、零件数据库。其中“供应商”表S（Sno，Sname，Zip，City）分别表示：供应商代码、供应商名、供应商邮编、供应商所在城市，其函数依赖为：Sno→（Sname，Zip，City），Zip→City。“供应商”表S属于（）。', 1, '1NF', '2NF', '3NF', 'BCNF', 'B', NULL);
INSERT INTO `topic` VALUES (1564, '　　若某个关系的主码为全码，则该主码应包含（）。', 1, '单个属性', '两个属性', '多个属性', '全部属性', 'D', NULL);
INSERT INTO `topic` VALUES (1565, '　　在数据库系统中，数据的完整性约束的建立需要通过数据库管理系统提供的（）语言来实现。', 1, '数据定义', '数据操作', '数据查询', '数据控制', 'A', NULL);
INSERT INTO `topic` VALUES (1566, '　　设关系模式R（A,B,C），传递依赖指的是（）。', 1, '若A→B，B→C，则A→C', '若A→B，A→C，则A→BC', '若A→C，则AB→C', '若A→BC，则A→B，A→C', 'A', NULL);
INSERT INTO `topic` VALUES (1567, '　　设关系模式R（A,B,C），下列结论错误的是（）。', 1, '若A→BC，则A→B，A→C', '若A→B，A→C，则A→BC', '若A→C，则AB→C', '若AB→C，则A→C，B→C', 'D', NULL);
INSERT INTO `topic` VALUES (1568, '　　在数据库管理系统中，（）不属于安全性控制机制。', 1, '完整性约束', '视图', '密码验证', '用户授权', 'A', NULL);
INSERT INTO `topic` VALUES (1569, '　　对事务回滚的正确描述是（）。', 1, '将该事务对数据库的修改进行恢复', '将事务对数据库的更新写入硬盘', '跳转到事务程序的开头重新执行', '将事务中修改的变量值恢复到事务开始时的初值', 'A', NULL);
INSERT INTO `topic` VALUES (1570, '　　某数据库中有员工关系E(employeeID,name,department)、产品关系P(productID,name,model,size,color)、仓库关系W(warehouseID,name,address,employeelD)，其中employeelD是负责人编号、库存关系I(warehouseID，productID，quantity)。若要求仓库关系的负责人引用员工关系的员工编号，员工关系E的员工编号、仓库关系W的仓库编号和产品关系P的产品编号不能为空且惟一标识一个记录，并且仓库的地址不能为空，则依次要满足的完整性约束是（）。', 1, '实体完整性、参照完整性、用户定义完整性', '参照完整性、实体完整性、用户定义完整性', '用户定义完整性、实体完整性、参照完整性', '实体完整性、用户定义完整性、参照完整性', 'B', NULL);
INSERT INTO `topic` VALUES (1571, '　　给定关系R（A1，A2，A3，A4）上的函数依赖集F={A1A3→A2，A2→A3}，R的候选关键字为（）。', 1, 'A1A3', 'A1A2A3', 'A1A3A4', 'A2和A1A3', 'C', NULL);
INSERT INTO `topic` VALUES (1572, '　　给定关系R（A1，A2，A3，A4）上的函数依赖集F={A1A3→A2，A2→A3}，分解ρ={(A1,A2),(A1,A3)}（）。', 1, '是无损联接的', '是保持函数依赖的', '既是无损联接又保持函数依赖', '既是有损联接又不保持函数依赖', 'D', NULL);
INSERT INTO `topic` VALUES (1573, '　　关系模式R（U，F），其中U＝{W,X,Y,Z}，F={WX→Y,W→X,X→Z,Y→W}。关系模式R的候选键是（）。', 1, 'W和Y', 'WY', 'WX', 'WZ', 'A', NULL);
INSERT INTO `topic` VALUES (1574, '　　关系模式R（U，F），其中U＝{W,X,Y,Z}，F={WX→Y,W→X,X→Z,Y→W}。（）是无损连接并保持函数依赖的分解。', 1, 'ρ={R1(WY),R2(XZ)}', 'ρ={R1(WZ),R2(XY)}', 'ρ={R1(WXY),R2(XZ)}', 'ρ={R1(WX),R2(YZ)}', 'C', NULL);
INSERT INTO `topic` VALUES (1575, '　　给定关系模式R(U，F)，U={A，B，C，D，E}，F={B→A，D→A，A→E，AC→B}，其属性AD的闭包为（）。', 1, 'ADE', 'ABD', 'ABCD', 'ACD', 'A', NULL);
INSERT INTO `topic` VALUES (1576, '　　给定关系模式R(U，F)，U={A，B，C，D，E}，F={B→A，D→A，A→E，AC→B}，其候选关键字为（）。', 1, 'ABD', 'ADE', 'ACD', 'CD', 'D', NULL);
INSERT INTO `topic` VALUES (1577, '　　在数据库逻辑结构的设计中，将E-R模型转换为关系模型应遵循相关原则。对于三个不同实体集和它们之间的多对多联系m:n:p，最少可转换为（）个关系模式。', 1, '2', '3', '4', '5', 'C', NULL);
INSERT INTO `topic` VALUES (1578, '　　设关系模式R为R（H，I，J，K，L)，R上的一个函数依赖集为F={H→J，J→K，I→J，JL→H}，分解（）是无损联接的。', 1, 'ρ={HK，HI，IJ，JKL，HL}', 'ρ={HIL，IKL，IJL}', 'ρ={HJ，IK，HL}', 'ρ={HI，JK，HL}', 'B', NULL);
INSERT INTO `topic` VALUES (1579, '　　关系模式R(A,B,C,D,E)中的关系代数表达式σ5<\'2\'(R)等价于SQL语句（）。', 1, 'SELECT*FROMRWHEREE<\'2\'', 'SELECTB,EFROMRWHEREB<\'2\'', 'SELECTB,EFROMRHAVINGE<\'2\'', 'SELECT*FROMRWHERE\'5\'<B', 'A', NULL);
INSERT INTO `topic` VALUES (1580, '　　设学生S、课程C、学生选课SC的关系模式分别为：S（Sno，Sname，Sage，Saddr)、C(Cno，Cname，Pcno)以及SC(Sno，Cno，Grade)。与关系代数表达式πSno，Sname，Grade(σCname=\'数据库\'(S⋈SC⋈C))等价的元组演算表达式为：{t|(∃u)(∃v)(∃w)S(u)∧SC(v)∧C(w)∧u[1]=v[1]∧v[2]=w[l]∧w[2]=\'数据库\'∧（）}', 1, 't[1]=u[1]∧t[2]=u[2]∧t[3]=v[3]', 't[1]=u[1]∧t[2]=u[2]∧t[3]=v[2]', 't[1]=u[1]∧t[2]=w[1]∧t[3]=v[2]', 't[1]=u[1]∧t[2]=w[2]∧t[3]=v[3]', 'A', NULL);
INSERT INTO `topic` VALUES (1581, '　　要保证数据库的逻辑数据独立性，需要修改的是（）。', 1, '模式与外模式之间的映射', '模式与内模式之间的映射', '模式', '三级模式', 'A', NULL);
INSERT INTO `topic` VALUES (1582, '　　用户或应用程序看到的那部分局部逻辑结构和特征的描述是（）模式。', 1, '模式', '物理模式', '子模式', '内模式', 'C', NULL);
INSERT INTO `topic` VALUES (1583, '　　下述（）不是DBA数据库管理员的职责。', 1, '完整性约束说明', '定义数据库模式', '数据库安全', '数据库管理系统设计', 'D', NULL);
INSERT INTO `topic` VALUES (1584, '　　概念模型是现实世界的第一层抽象，这一类模型中最著名的模型是（）。', 1, '层次模型', '关系模型', '网状模型', '实体-联系模型', 'D', NULL);
INSERT INTO `topic` VALUES (1585, '　　在实体-联系图中区分不同实体的依据是（）。', 1, '名称', '属性', '对象', '概念', 'B', NULL);
INSERT INTO `topic` VALUES (1586, '　　关系数据模型是目前最重要的一种数据模型，它的三个要素分别是（）。', 1, '实体完整性、参照完整性、用户自定义完整性', '数据结构、关系操作、完整性约束', '数据增加、数据修改、数据查询', '外模式、模式、内模式', 'B', NULL);
INSERT INTO `topic` VALUES (1587, '　　在（）中一个结点可以有多个双亲，结点之间可以有多种联系。', 1, '网状模型', '关系模型', '层次模型', '以上都有', 'A', NULL);
INSERT INTO `topic` VALUES (1588, '　　（）的存取路径对用户透明，从而具有更高的数据独立性、更好的安全保密性，也简化了程序员的工作和数据库开发建立的工作。', 1, '网状模型', '关系模型', '层次模型', '以上都有', 'B', NULL);
INSERT INTO `topic` VALUES (1589, '　　数据库设计的根本目标是要解决（）。', 1, '数据共享问题', '数据安全问题', '大量数据存储问题', '简化数据维护', 'A', NULL);
INSERT INTO `topic` VALUES (1590, '　　数据库系统的核心是（）。', 1, '数据模型', '数据库管理系统', '数据库', '数据库管理员', 'B', NULL);
INSERT INTO `topic` VALUES (1591, '　　将两个关系拼接成一个新的关系，生成的新关系中包含满足条件的元组，这种操作称为（）。', 1, '选择', '投影', '联接', '并', 'C', NULL);
INSERT INTO `topic` VALUES (1592, '　　如果表A中的一条记录与表B中的多条记录相匹配，且表B中的一条记录与表A中的多条记录相匹配，则表A与表B存在的联系是（）。', 1, '一对一', '一对多', '多对一', '多对多', 'D', NULL);
INSERT INTO `topic` VALUES (1593, '　　在数据管理技术的发展过程中，经历了人工管理阶段、文件系统阶段和数据库系统阶段。在这几个阶段中，数据独立性最高的是（）阶段。', 1, '数据库系统', '文件系统', '人工管理', '数据项管理', 'A', NULL);
INSERT INTO `topic` VALUES (1594, '　　数据库的概念模型独立于（）。', 1, '具体的机器和DBMS', 'E-R图', '信息世界', '现实世界', 'A', NULL);
INSERT INTO `topic` VALUES (1595, '　　数据库的基本特点是（）。', 1, '(1)数据可以共享(或数据结构化)(2)数据独立性(3)数据冗余大，易移植(4)统一管理和控制', '(1)数据可以共享(或数据结构化)(2)数据独立性(3)数据冗余小，易扩充(4)统一管理和控制', '(1)数据可以共享(或数据结构化)(2)数据互换性(3)数据冗余小，易扩充(4)统一管理和控制', '(1)数据非结构化(2)数据独立性(3)数据冗余小，易扩充(4)统一管理和控制', 'B', NULL);
INSERT INTO `topic` VALUES (1596, '　　（）是存储在计算机内有结构的数据的集合。', 1, '数据库系统', '数据库', '数据库管理系统', '数据结构', 'B', NULL);
INSERT INTO `topic` VALUES (1597, '　　数据库中存储的是（）。', 1, '数据', '数据模型', '数据以及数据之间的联系', '信息', 'C', NULL);
INSERT INTO `topic` VALUES (1598, '　　数据库中，数据的物理独立性是指（）。', 1, '数据库与数据库管理系统的相互独立', '用户程序与DBMS的相互独立', '用户的应用程序与存储在磁盘上数据库中的数据是相互独立的', '应用程序与数据库中数据的逻辑结构相互独立', 'C', NULL);
INSERT INTO `topic` VALUES (1599, '　　数据库的特点之一是数据的共享，严格地讲，这里的数据共享是指（）。', 1, '同一个应用中的多个程序共享一个数据集合', '多个用户、同一种语言共享数据', '多个用户共享一个数据文件', '多种应用、多种语言、多个用户相互覆盖地使用数据集合', 'D', NULL);
INSERT INTO `topic` VALUES (1600, '　　下述关于数据库系统的正确叙述是（）。', 1, '数据库系统减少了数据冗余', '数据库系统避免了一切冗余', '数据库系统中数据的一致性是指数据类型一致', '数据库系统比文件系统能管理更多的数据', 'A', NULL);
INSERT INTO `topic` VALUES (1601, '　　在数据库中，产生数据不一致的根本原因是（）。', 1, '数据存储量太大', '没有严格保护数据', '未对数据进行完整性控制', '数据冗余', 'D', NULL);
INSERT INTO `topic` VALUES (1602, '　　数据库管理系统能实现对数据库中数据的查询、插入、修改和删除等操作，这种功能称为（）。', 1, '数据定义功能', '数据管理功能', '数据操纵功能', '数据控制功能', 'C', NULL);
INSERT INTO `topic` VALUES (1603, '　　数据库的三级模式结构中，描述数据库中全体数据的全局逻辑结构和特征的是（）。', 1, '外模式', '内模式', '存储模式', '模式', 'D', NULL);
INSERT INTO `topic` VALUES (1604, '　　数据库系统的数据独立性是指（）。', 1, '不会因为数据的变化而影响应用程序', '不会因为系统数据存储结构与数据逻辑结构的变化而影响应用程序', '不会因为存储策略的变化而影响存储结构', '不会因为某些存储结构的变化而影响其他的存储结构', 'B', NULL);
INSERT INTO `topic` VALUES (1605, '　　层次型、网状型和关系型数据库划分原则是（）。', 1, '记录长度', '文件的大小', '联系的复杂程度', '数据之间的联系', 'D', NULL);
INSERT INTO `topic` VALUES (1606, '　　按照传统的数据模型分类，数据库系统可以分为三种类型（）。', 1, '大型、中型和小型', '西文、中文和兼容', '层次、网状和关系', '数据、图形和多媒体', 'C', NULL);
INSERT INTO `topic` VALUES (1607, '　　层次模型不能直接表示（）。', 1, '1：1联系', '1：m联系', 'm：n联系', '1：1和1：m联系', 'C', NULL);
INSERT INTO `topic` VALUES (1608, '　　关系数据库管理系统应能实现的专门关系运算包括（）。', 1, '排序、索引、统计', '选择、投影、连接', '关联、更新、排序', '显示、打印、制表', 'B', NULL);
INSERT INTO `topic` VALUES (1609, '　　关系运算中花费时间可能最长的运算是（）。', 1, '投影', '选择', '笛卡尔积', '除', 'C', NULL);
INSERT INTO `topic` VALUES (1610, '　　下面（）不是数据库系统必须提供的数据控制功能。', 1, '安全性', '可移植性', '完整性', '并发控制', 'B', NULL);
INSERT INTO `topic` VALUES (1611, '　　保护数据库，防止未经授权的或不合法的使用造成的数据泄漏、更改破坏。这是指数据的（）。', 1, '安全性', '完整性', '并发控制', '恢复', 'A', NULL);
INSERT INTO `topic` VALUES (1612, '　　下列SQL语句中，能够实现“收回用户ZHAO对学生表（STUD）中学号（XH）的修改权”这一功能的是（）。', 1, 'REVOKEUPDATE(XH)ONTABLEFROMZHAO', 'REVOKEUPDATE(XH)ONTABLEFROMPUBLIC', 'REVOKEUPDATE(XH)ONSTUDFROMZHAO', 'REVOKEUPDATE(XH)ONSTUDFROMPUBLIC', 'C', NULL);
INSERT INTO `topic` VALUES (1613, '　　在数据库系统中，保证数据及语义正确和有效的功能是（）。', 1, '并发控制', '存取控制', '安全控制', '完整性控制', 'D', NULL);
INSERT INTO `topic` VALUES (1614, '　　关于主键约束以下说法错误的是（）。', 1, '一个表中只能设置一个主键约束', '允许空值的字段上不能定义主键约束', '允许空值的字段上可以定义主键约束', '可以将包含多个字段的字段组合设置为主键', 'C', NULL);
INSERT INTO `topic` VALUES (1615, '　　在表或视图上执行除了（）以外的语句都可以激活触发器。', 1, 'Insert', 'Delete', 'Update', 'Create', 'D', NULL);
INSERT INTO `topic` VALUES (1616, '　　在数据库的表定义中，限制成绩属性列的取值在0到100的范围内，属于数据的（）约束。', 1, '实体完整性', '参照完整性', '用户自定义', '用户操作', 'C', NULL);
INSERT INTO `topic` VALUES (1617, '　　设计性能较优的关系模式称为规范化，规范化主要的理论依据是（）。', 1, '关系规范化理论', '关系运算理论', '关系代数理论', '数理逻辑', 'A', NULL);
INSERT INTO `topic` VALUES (1618, '　　规范化过程主要为克服数据库逻辑结构中的插入异常、删除异常以及（）的缺陷。', 1, '数据的不一致性', '结构不合理', '冗余度大', '数据丢失', 'C', NULL);
INSERT INTO `topic` VALUES (1619, '　　在关系数据库中，任何二元关系模式的最高范式必定是（）。', 1, '1NF', '2NF', '3NF', 'BCNF', 'D', NULL);
INSERT INTO `topic` VALUES (1620, '　　根据关系数据库规范化理论，关系数据库中的关系要满足第一范式。部门(部门号，部门名，部门成员，部门总经理)中，因哪个属性而使它不满足第一范式（）。', 1, '部门总经理', '部门成员', '部门名', '部门号', 'B', NULL);
INSERT INTO `topic` VALUES (1621, '　　在数据库设计中，用E-R图来描述信息结构但不涉及信息在计算机中的表示，它是数据库设计的（）阶段。', 1, '需求分析', '概念设计', '逻辑设计', '物理设计', 'B', NULL);
INSERT INTO `topic` VALUES (1622, '　　在关系数据库设计中，设计关系模式是（）的任务。', 1, '需求分析阶段', '概念设计阶段', '逻辑设计阶段', '物理设计阶段', 'C', NULL);
INSERT INTO `topic` VALUES (1623, '　　数据库物理设计完成后，进入数据库实施阶段，下列各项中不属于实施阶段的工作是（）。', 1, '建立库结构', '扩充功能', '加载数据', '系统调试', 'B', NULL);
INSERT INTO `topic` VALUES (1624, '　　从E-R模型向关系模型转换时，一个M∶N联系转换为关系模式时，该关系模式的关键字是（）。', 1, 'M端实体的关键字', 'N端实体的关键字', 'M端实体关键字与N端实体关键字组合', '重新选取其他属性', 'C', NULL);
INSERT INTO `topic` VALUES (1625, '　　当局部E-R图合并成全局E-R图时可能出现冲突，不属于合并冲突的是（）。', 1, '属性冲突', '语法冲突', '结构冲突', '命名冲突', 'B', NULL);
INSERT INTO `topic` VALUES (1626, '　　修改存储过程使用的语句是（）。', 1, 'ALTERPROCEDURE', 'DROPPROCEDURE', 'INSERTPROCEDUE', 'DELETEPROCEDUE', 'A', NULL);
INSERT INTO `topic` VALUES (1627, '　　创建存储过程的语句是（）。', 1, 'ALTERPROCEDURE', 'DROPPROCEDURE', 'CREATEPROCEDUE', 'DELETEPROCEDUE', 'C', NULL);
INSERT INTO `topic` VALUES (1628, '　　下面（）组命令，将变量count值赋值为1。', 1, 'DECLARE', 'countSELECT', 'count=1', 'DIMcount=1', 'A', NULL);
INSERT INTO `topic` VALUES (1629, '　　（）是DBMS的基本单位，它是用户定义的一组逻辑一致的程序序列。', 1, '程序', '命令', '事务', '文件', 'C', NULL);
INSERT INTO `topic` VALUES (1630, '　　事务的原子性是指（）。', 1, '事务中包括的所有操作要么都做，要么都不做', '事务一旦提交，对数据库的改变是永久的', '一个事务内部的操作及使用的数据对并发的其他事务是隔离的', '事务必须是使数据库从一个一致性状态变到另一个一致性状态', 'A', NULL);
INSERT INTO `topic` VALUES (1631, '　　事务的一致性是指（）。', 1, '事务中包括的所有操作要么都做，要么都不做', '事务一旦提交，对数据为的改变是永久的', '一个事务内部的操作及使用的数据对并发的其他事务是隔离的', '事务必须是使数据库从一个一致性状态变到另一个一致性状态', 'D', NULL);
INSERT INTO `topic` VALUES (1632, '　　事务的隔离性是指（）。', 1, '事务中包括的所有操作要么都做，要么都不做', '事务一旦提交，对数据库的改变是永久的', '一个事务内部的操作及使用的数据对并发的其他事务是隔离的', '事务必须是使数据库从一个一致性状态变到另一个一致性状态', 'C', NULL);
INSERT INTO `topic` VALUES (1633, '　　事务的持续性是指（）。', 1, '事务中包括的所有操作要么都做，要么都不做', '事务一旦提交，对数据库的改变是永久的', '一个事务内部的操作及使用的数据对并发的其他事务是隔离的', '事务必须是使数据库从一个一致性状态变到另一个一致性状态', 'B', NULL);
INSERT INTO `topic` VALUES (1634, '　　若数据库中只包含成功事务提交的结果，则此数据库就称为处于（）状态。', 1, '安全', '一致', '不安全', '不一致', 'B', NULL);
INSERT INTO `topic` VALUES (1635, '　　若系统在运行过程中，由于某种原因，造成系统停止运行，致使事务在执行过程中以非控制方式终止，这时内存中的信息丢失，而存储在外存上的数据未受影响，这种情况称为（）。', 1, '事务故障', '系统故障', '介质故障', '运行故障', 'B', NULL);
INSERT INTO `topic` VALUES (1636, '　　若系统在运行过程中，由于某种硬件故障，使存储在外存上的数据部分损失或全部损失，这种情况称为（）。', 1, '事务故障', '系统故障', '介质故障', '运行故障', 'C', NULL);
INSERT INTO `topic` VALUES (1637, '　　（）用来记录对数据库中数据进行的每一次更新操作。', 1, '后援副本', '日志文件', '数据库', '缓冲区', 'B', NULL);
INSERT INTO `topic` VALUES (1638, '　　数据库恢复的基础是利用转储的冗余数据。这些转储的冗余数据包括（）。', 1, '数据字典、应用程序、审计档案、数据库后备副本', '数据字典、应用程序、日志文件、审计档案', '日志文件、数据库后备副本', '数据字典、应用程序、数据库后备副本', 'C', NULL);
INSERT INTO `topic` VALUES (1639, '　　解决并发操作带来的数据不一致性总是普遍采用（）。', 1, '封锁', '恢复', '存取控制', '协商', 'A', NULL);
INSERT INTO `topic` VALUES (1640, '　　若事务T对数据R已经加X锁，则其他事务对数据R（）。', 1, '可以加S锁不能加X锁', '不能加S锁可以加X锁', '可以加S锁也可以加X锁', '不能加任何锁', 'D', NULL);
INSERT INTO `topic` VALUES (1641, '　　关于“死锁”，下列说法中正确的是（）。', 1, '死锁是操作系统中的问题，数据库操作中不存在', '在数据库操作中防止死锁的方法是禁止两个用户同时操作数据库', '当两个用户竞争相同资源时不会发生死锁', '只有出现并发操作时，才有可能出现死锁', 'D', NULL);
INSERT INTO `topic` VALUES (1642, '　　对并发操作若不加以控制，可能会带来（）问题。', 1, '不安全', '死锁', '死机', '不一致', 'D', NULL);
INSERT INTO `topic` VALUES (1643, '　　并发操作会带来哪些数据不一致性（）。', 1, '丢失修改、不可重复读、脏读、死锁', '不可重复读、脏读、死锁', '丢失修改、脏读、死锁', '丢失修改、不可重复读、脏读', 'D', NULL);
INSERT INTO `topic` VALUES (1644, '　　在数据库系统中，模式/外模式映像用于解决数据的（）。', 1, '结构独立性', '物理独立性', '逻辑独立性', '分布独立性', 'C', NULL);
INSERT INTO `topic` VALUES (1645, '　　设有关系模式EMP（职工号，姓名，年龄，技能）。假设职工号唯一，每个职工有多项技能，则EMP表的主码是（）。', 1, '职工号', '姓名，技能', '技能', '职工号，技能', 'D', NULL);
INSERT INTO `topic` VALUES (1646, '（）指把作业提交给系统到作业完成的时间间隔。', 1, '周转时间', '响应时间', '等待时间', '触发时间', NULL, 'A');
INSERT INTO `topic` VALUES (1647, '　　支持虚拟存储，但不能以自然的方式提供存储器的共享和存取保护机制是（）的特点。', 1, '段页式', '非请求分页式', '请求分页式', '可重定位分区', NULL, 'C');
INSERT INTO `topic` VALUES (1648, '　　允许动态连接和装入，能消除碎片，支持虚拟存储是（）的特点。', 1, '段页式', '非请求分页式', '请求分页式', '可重定位分区', NULL, 'A');
INSERT INTO `topic` VALUES (1649, '　　通常，用户进程被建立后，（）。', 1, '便一直存在于系统中，直到被操作人员撤消', '随着作业运行正常或不正常结束而撤消', '随着时间片轮转而撤消与建立', '随着进程的阻塞或唤醒而撤消与建立', NULL, 'B');
INSERT INTO `topic` VALUES (1650, '　　在一单处理机中，若有5个用户进程，在非管态的某一时刻，处于就绪状态的用户进程最多有（）个。', 1, '0', '1', '4', '5', NULL, 'C');
INSERT INTO `topic` VALUES (1651, '　　在OS中，进程是一个具有一定独立功能的程序在某个数据集合上的一次（）。', 1, '并发活动', '运行活动', '单独操作', '关联操作', NULL, 'B');
INSERT INTO `topic` VALUES (1652, '　　由于内存大小有限，为使得一个或多个作业能在系统中运行，常需要外存来换取内存。其中以作业为单位对内外存进行交换的技术称为（）技术。', 1, 'SPOOLING', 'SWAPPING', '虚拟存储', '虚拟机', NULL, 'Ｂ');
INSERT INTO `topic` VALUES (1653, '　　由于内存大小有限，为使得一个或多个作业能在系统中运行，常需要外存来换取内存。其中在作业内部对内外存进行交换的技术称为（）技术。', 1, 'SPOOLING', 'SWAPPING', '虚拟存储', '虚拟机', NULL, 'Ｃ');
INSERT INTO `topic` VALUES (1654, '　　进程的最基本状态有（）。', 1, '就绪、运行、隐蔽', '停止、就绪、运行', '运行、就绪、阻塞', '就绪、撤消、运行', NULL, 'C');
INSERT INTO `topic` VALUES (1655, '　　（）是OS中可以并行工作的基本单位，也是核心调度及资源分配的最小单位。', 1, '作业', '过程', '函数', '进程', NULL, 'D');
INSERT INTO `topic` VALUES (1656, '　　因争用资源产生死锁的必要条件是互斥、循环等待、不可抢占和（）。', 1, '请求与释放', '释放与保持', '释放与阻塞', '保持与等待', NULL, 'D');
INSERT INTO `topic` VALUES (1657, '　　对于缓冲池(大量缓冲区)的管理，采用生产者-消费者方式解决同步或互斥时，通常需要用（）个信号量。', 1, '1', '2', '3', '4', NULL, 'C');
INSERT INTO `topic` VALUES (1658, '　　特权指令在多用户、多任务的计算机系统中必不可少,它主要用于（）。', 1, '检查用户的权限', '系统硬件自检和配置', '用户写汇编程序时调用', '系统资源的分配和管理', NULL, 'D');
INSERT INTO `topic` VALUES (1659, '在UNIX操作系统中，当用户执行如下命令：link(“/user/include/myfile.sh”，“/usr/userwang/youfile.sh”)，则文件名“/usr/userwang/youfile.sh”存放在（）。', 1, 'user目录文件中', 'include目录文件中', 'userwang目录文件中', 'youfile.sh的文件内容中', NULL, 'C');
INSERT INTO `topic` VALUES (1660, '假设在系统中一个文件有两个名字，它与一个文件保存有两个副本的区别是（）。', 1, '前者比后者所占用的存储空间更大', '前者需要两个目录项，后者只需要一个目录项', '前者存取文件的速度快，后者存取文件的速度慢', '前者改变与某个名字相联系的文件时，另一个名字相连的文件也改变；后者的另一个副本不改变', NULL, 'D');
INSERT INTO `topic` VALUES (1661, '　　在中断响应过程中，CPU保护程序计数器的主要目的是（）。', 1, '使CPU能找到中断服务程序的入口地址', '为了实现中断嵌套', '为了使CPU在执行完中断服务程序时能回到被中断程序的断点处', '为了使CPU与I/O设备并行工作', NULL, 'C');
INSERT INTO `topic` VALUES (1662, '　　中断响应时间是指（）。', 1, '从中断处理开始到中断处理结束所用的时间', '从发出中断请求到中断处理结束所用的时间', '从发出中断请求到进入中断处理所用的时间', '从中断处理结束到再次中断请求的时间', NULL, 'C');
INSERT INTO `topic` VALUES (1663, '　　虚拟存储管理系统的基础是程序的（）理论，这个理论的基本含义是指程序执行时往往会不均匀地访问主存储器单元。', 1, '全局性', '局部性', '时间全局性', '空间全局性', NULL, 'B');
INSERT INTO `topic` VALUES (1664, '　　在计算机系统中，构成虚拟存储器（）。', 1, '只需要一定的硬件资源便可实现', '只需要一定的软件即可实现', '既需要软件也需要硬件方可实现', '既不需要软件也不需要硬件', NULL, 'C');
INSERT INTO `topic` VALUES (1665, '　　为了解决进程间的同步和互斥问题，通常采用一种称为（）机制的方法。', 1, '调度', '信号量', '分派', '通讯', NULL, 'B');
INSERT INTO `topic` VALUES (1666, '　　若系统中有5个进程共享若干个资源R，每个进程都需要4个资源R，那么使系统不发生死锁的资源R的最少数目是（）。', 1, '20', '18', '16', '15', NULL, 'C');
INSERT INTO `topic` VALUES (1667, '　　在UNIX操作系统中，把输入/输出设备看作是（）。', 1, '普通文件', '目录文件', '索引文件', '特殊文件', NULL, 'D');
INSERT INTO `topic` VALUES (1668, '　　某软盘有40个磁道，磁头从一个磁道移至另一个磁道需要5ms。文件在磁盘上非连续存放，逻辑上相邻数据块的平均距离为10个磁道，每块的旋转延迟时间及传输时间分别为100ms和25ms，则读取一个100块的文件需要（）时间。', 1, '17500ms', '15000ms', '5000ms', '25000ms', NULL, 'A');
INSERT INTO `topic` VALUES (1669, '文件系统中，设立打开文件（Open）系统功能调用的基本操作是（）。', 1, '把文件信息从辅存读到内存', '把文件的控制管理信息从辅存读到内存', '把磁盘的超级块从辅存读到内存', '把文件的FAT表信息从辅存读到内存', NULL, 'Open');
INSERT INTO `topic` VALUES (1670, '　　在操作系统中，虚拟设备通常采用（）设备来提供虚拟设备。', 1, 'Spooling技术，利用磁带', 'Spooling技术，利用磁盘', '脱机批处理技术，利用磁盘', '通道技术，利用磁带', NULL, 'B');
INSERT INTO `topic` VALUES (1671, '　　某文件管理系统在磁盘上建立了位示图(bitmap)记录磁盘的使用情况。若系统中字长为32位，磁盘上的物理块依次编号为：0、1、2、…，那么8192号物理块的使用情况在位示图中的第（）个字中描述。', 1, '256', '257', '512', '1024', NULL, 'B');
INSERT INTO `topic` VALUES (1672, '　　设备驱动程序是直接与（）打交道的软件模块。', 1, '硬件', '办公软件', '编译程序', '连接程序', NULL, 'A');
INSERT INTO `topic` VALUES (1673, '　　一般而言，设备驱动程序的任务是接受来自与设备（）。', 1, '有关的上层软件的抽象请求，进行与设备相关的处理', '无关的上层软件的抽象请求，进行与设备相关的处理', '有关的上层软件的抽象请求，进行与设备无关的处理', '无关的上层软件的抽象请求，进行与设备无关的处理', NULL, 'B');
INSERT INTO `topic` VALUES (1674, '　　若文件系统容许不同用户的文件可以具有相同的文件名，则操作系统应采用（）来实现。', 1, '索引表', '索引文件', '指针', '多级目录', NULL, 'D');
INSERT INTO `topic` VALUES (1675, '内存采用段式存储管理有许多优点，但（）不是其优点。', 1, '分段是信息的逻辑单位，用户不可见', '各段程序的修改互不影响', '地址变换速度快、内存碎片少', '便于多道程序共享主存的某些段', NULL, 'A');
INSERT INTO `topic` VALUES (1676, '　　某文件管理系统为了记录磁盘的使用情况，在磁盘上建立了位示图(bitmap)。若系统中字长为16位，磁盘上的物理块依次编号为：0、1、2、…，那么8192号物理块的使用情况在位示图中的第（）个字中描述。', 1, '256', '257', '512', '513', NULL, 'D');
INSERT INTO `topic` VALUES (1677, '　　在操作系统设备管理中，通常临界资源不能采用（）分配算法。', 1, '静态优先级', '动态优先级', '时间片轮转', '先来先服务', NULL, 'C');
INSERT INTO `topic` VALUES (1678, '　　页式存储管理当中的页面是由（）所感知的。', 1, '用户', '操作系统', '编译系统', '链接程序', NULL, 'B');
INSERT INTO `topic` VALUES (1679, '　　某磁盘的转速为7200转/分，传输速度为4Mbps，控制器开销为1ms。要保证读或写一个512字节的扇区的平均时间为11.3ms。那么，该磁盘的平均寻道时间最大应不超过（）ms。', 1, '3.9', '4.7', '5.5', '6.1', NULL, 'D');
INSERT INTO `topic` VALUES (1680, '　　假设计算机系统中资源可用数为6，系统中有三个进程竞争R，且每个进程都需要i个R，该系统可能会发生死锁的最小值是（）。', 1, '1', '2', '3', '4', NULL, 'B');
INSERT INTO `topic` VALUES (1681, '　　假设计算机系统中资源可用数为6，系统中有三个进程竞争R，若信号量S的当前值为-2，则R可用数和等待进程数分别为（）。', 1, '0、0', '0、1', '1、0', '0、2', NULL, 'D');
INSERT INTO `topic` VALUES (1682, '　　当用户通过键盘或鼠标进入某应用系统时，通常最先获得键盘或鼠标输入信息的是（）程序。', 1, '命令解释', '中断处理', '用户登录', '系统调用', NULL, 'B');
INSERT INTO `topic` VALUES (1683, '　　在Windows操作系统中，当用户双击“IMG_20160122_103.jpg”文件名时，系统会自动通过建立的（）来决定使用什么程序打开该图像文件。', 1, '文件', '文件关联', '文件目录', '临时文件', NULL, 'B');
INSERT INTO `topic` VALUES (1684, '　　某磁盘有100个磁道，磁头从一个磁道移至另一个磁道需要6ms。文件在磁盘上非连续存放，逻辑上相邻数据块的平均距离为10个磁道，每块的旋转延迟时间及传输时间分别为100ms和20ms，则读取一个100块的文件需要（）ms。', 1, '12060', '12600', '18000', '186000', NULL, 'C');
INSERT INTO `topic` VALUES (1685, '　　实时操作系统主要用于有实时要求的过程控制等领域。实时系统对于来自外部的事件必须在（）。', 1, '一个时间片内进行处理', '一个周转时间内进行处理', '一个机器周期内进行处理', '被控对象规定的时间内做出及时响应并对其进行处理', NULL, 'D');
INSERT INTO `topic` VALUES (1686, '　　假设系统中有n个进程共享3台扫描仪，并采用PV操怍实现进程同步与互斥。若系统信号量S的当前值为-1，进程P1、P2又分别执行了1次P（S）操作，那么信号量S的值应为（）。', 1, '3', '-3', '1', '-1', NULL, 'S');
INSERT INTO `topic` VALUES (1687, '　　某字长为32位的计算机的文件管理系统采用位示图（bitmap）记录磁盘的使用情况。若磁盘的容量为300GB，物理块的大小为1MB，那么位示图的大小为（）个字。', 1, '1200', '3200', '6400', '9600', NULL, 'bitmap');
INSERT INTO `topic` VALUES (1688, '　　某文件系统采用索引结构。若磁盘块的大小为1K字节，每个块号3字节，那么采用二级索引时的文件最大长度为（）K字节。', 1, '1024', '2048', '116281', '232562', NULL, 'C');
INSERT INTO `topic` VALUES (1689, '　　采用可重定位分区分配方式，（）。', 1, '使用户程序占用若干不连续的内存空间', '解决了碎片问题', '为用户编写程序提供方便', '扩充了内存容量，提供了虚拟存储器', NULL, 'C');
INSERT INTO `topic` VALUES (1690, '　　下述（）不属于多道程序运行的特征。', 1, '多道', '运行速度快', '宏观上并行', '实际上多道程序是交替运行的', NULL, 'B');
INSERT INTO `topic` VALUES (1691, '　　使用SPOOLing系统的目的是为了提高（）的使用效率。', 1, '操作系统', '内存', 'CPU', 'I/O设备', NULL, 'D');
INSERT INTO `topic` VALUES (1692, '　　原语是一种特殊的系统调用命令，它的特点是（）。', 1, '功能强', '自己调用自己', '可被外层调用', '执行时不可中断', NULL, 'D');
INSERT INTO `topic` VALUES (1693, '　　一个正在运行的进程，当所分配的时间片用完后，将其挂在（）。', 1, '等待队列', '运行队列', '就绪队列', '任意一个队列', NULL, 'C');
INSERT INTO `topic` VALUES (1694, '　　UNIX操作系统是著名的（）。', 1, '多道批处理系统', '分时系统', '实时系统', '分布式系统', NULL, 'B');
INSERT INTO `topic` VALUES (1695, '　　某进程在运行过程中需要等待从磁盘上读入数据，此时该进程的状态将（）。', 1, '从就绪变为运行', '从运行变为就绪', '从等待变为就绪', '从运行变为等待', NULL, 'D');
INSERT INTO `topic` VALUES (1696, '　　　一个进程被唤醒意味着（）。', 1, '该进程重新占有了CPU', '进程状态变为就绪', '它的优先权变为最大', '其PCB移至就绪队列的队首', NULL, 'B');
INSERT INTO `topic` VALUES (1697, '　　下列性质中，哪一个不是分时系统的特征（）。', 1, '交互性', '多路性', '成批性', '独占性', NULL, 'C');
INSERT INTO `topic` VALUES (1698, '　　在页式存储管理中，当CPU形成一个有效地址时，要查页表。这一工作是由（）实现的。', 1, '硬件自动', '操作系统', '存储管理的查表程序', '存储管理进程', NULL, 'A');
INSERT INTO `topic` VALUES (1699, '　　现代操作系统的两个基本特征是（）和资源共享。', 1, '多道程序设计', '中断处理', '程序的并发执行', '实现分时与实时处理', NULL, 'C');
INSERT INTO `topic` VALUES (1700, '　　某进程在运行过程中等待的事件已发生，例如，打印结束，此时该进程的状态将（）。', 1, '从就绪变为运行', '从运行变为就绪', '从运行变为阻塞', '从阻塞变为就绪', NULL, 'D');
INSERT INTO `topic` VALUES (1701, '把逻辑地址转变为内存的物理地址的过程称作（）。', 1, '编译', '连接', '运行', '重定位或地址映射', NULL, 'D');
INSERT INTO `topic` VALUES (1702, '　　系统调用的目的是（）。', 1, '请求系统服务', '终止系统服务', '申请系统资源', '释放系统资源', NULL, 'A');
INSERT INTO `topic` VALUES (1703, '　　在操作系统中，可以并行工作的基本单位是（）。', 1, '作业', '程序', '进程', '过程', NULL, 'C');
INSERT INTO `topic` VALUES (1704, '　　时间片轮转法进行进程调度是为了（）。', 1, '多个终端都能得到系统的及时响应', '先来先服务', '优先级较高的进程得到及时响应', '需要CPU最短的进程先做', NULL, 'A');
INSERT INTO `topic` VALUES (1705, '　　引入多道程序的目的在于（）。', 1, '充分利用CPU，减少CPU等待时间', '提高实时响应速度', '有利于代码共享，减少主、辅存信息交换量', '充分利用存储器', NULL, 'A');
INSERT INTO `topic` VALUES (1706, '　　若处理器有32位地址，则它的虚拟地址空间为（）字节。', 1, '2G', '4G', '100K', '640K', NULL, 'B');
INSERT INTO `topic` VALUES (1707, '　　操作系统内核与用户程序、应用程序之间的接口是（）。', 1, 'shell命令', '图形界面', '系统调用', 'C语言函数', NULL, 'C');
INSERT INTO `topic` VALUES (1708, '　　在一段时间内，只允许一个进程访问的资源称为（）。', 1, '共享资源', '独占临源', '临界资源', '共享区', NULL, 'C');
INSERT INTO `topic` VALUES (1709, '　　操作系统采用缓冲技术，能够减少对CPU的（）次数，从而提高资源的利用率。', 1, '中断', '访问', '控制', '依赖', NULL, 'A');
INSERT INTO `topic` VALUES (1710, '　　文件的存储方法依赖于（）。', 1, '文件的物理结构', '存放文件的存储设备的特性', 'A和B', '文件的逻辑结构', NULL, 'C');
INSERT INTO `topic` VALUES (1711, '　　目录文件所存放的信息是（）。', 1, '某一文件存放的数据信息', '某一个文件的文件目录', '该目录中所有数据文件目录', '该目录中所有子目录文件和数据文件的目录', NULL, 'D');
INSERT INTO `topic` VALUES (1712, '　　在现代操作系统中采用缓冲技术的主要目的是（）。', 1, '改善用户编程环境', '提高CPU的处理速度', '提高CPU和设备之间的并行程度', '实现与设备无关性', NULL, 'C');
INSERT INTO `topic` VALUES (1713, '　　进程在系统中是否存在的惟一标志是（）。', 1, '数据集合', '目标程序', '源程序', '进程控制块', NULL, 'D');
INSERT INTO `topic` VALUES (1714, '　　虚拟存储器的最大容量是由（）决定的。', 1, '计算机系统的地址结构和外存空间', '页表长度', '内存空间', '逻辑空间', NULL, 'A');
INSERT INTO `topic` VALUES (1715, '　　在段式存储管理中，一个段是一个（）区域。', 1, '定长的连续', '不定长的连续', '定长的不连续', '不定长的不连续', NULL, 'B');
INSERT INTO `topic` VALUES (1716, '　　外存上存放的数据（）。', 1, 'CPU可直接访问', 'CPU不可访问', '是高速缓冲器中的信息', '必须在访问前先装入内存', NULL, 'D');
INSERT INTO `topic` VALUES (1717, '　　在下述存储管理技术中，（）处理不当会产生抖动。', 1, '固定分区', '可变分区', '简单分页', '请求分页', NULL, 'D');
INSERT INTO `topic` VALUES (1718, '　　（）存储管理支持多道程序设计，算法简单，但存储碎片多。', 1, '段式', '页式', '分区', '段页式', NULL, 'C');
INSERT INTO `topic` VALUES (1719, '　　多道程序设计是指（）。', 1, '在实时系统中并发运行多个程序', '在分布系统中同一时刻运行多个程序', '在一台处理机上同一时刻运行多个程序', '在一台处理机上并发运行多个程序', NULL, 'D');
INSERT INTO `topic` VALUES (1720, '　　进程和程序的一个本质区别是（）。', 1, '前者为动态的，后者为静态的', '前者存储在内存，后者存储在外存', '前者在一个文件中，后者在多个文件中', '前者分时使用CPU，后者独占CPU', NULL, 'A');
INSERT INTO `topic` VALUES (1721, '　　从下面描述中错误的一条描述是（）。', 1, '一个文件在同一个系统中、不同的存储介质上的拷贝，应采用同一种物理结构。', '文件的物理结构不仅与外存的分配方式相关，还与存储介质的特性相关，通常在磁带上只适合使用顺序结构。', '采用顺序结构的文件既适合进行顺序访问，也适合进行随机访问。', '虽然磁盘是随机访问的设备，但其中的文件也可以使用顺序结构。', NULL, 'A');
INSERT INTO `topic` VALUES (1722, '　　下面描述中正确的是（）。', 1, '顺序文件适合于建立在顺序存储设备上，而不适合建立在磁盘上。', '显式链接文件将分配给文件的下一个物理盘块的地址登记在该文件的前一个物理盘块中。', '顺序文件必须采用连续分配方式，而链接文件和索引文件则可采用离散分配方式。', '在MS-DOS中采用的是隐式链接文件结构。', NULL, 'C');
INSERT INTO `topic` VALUES (1723, '　　对于线性表，相对于顺序存储，采用链表存储的缺点是（）。', 1, '数据元素之间的关系需要占用存储空间，导致存储密度不高', '表中结点必须占用地址连续的存储单元，存储密度不高', '插入新元素时需要遍历整个链表，运算的时间效率不高', '删除元素时需要遍历整个链表，运算的时间效率不高', 'A', NULL);
INSERT INTO `topic` VALUES (1724, '　　设有一个包含n个元素的有序线性表。在等概率情况下删除其中的一个元素，若采用顺序存储结构，则平均需要移动（）个元素。', 1, '1', '(n-1)/2', 'logn', 'n', 'B', NULL);
INSERT INTO `topic` VALUES (1725, '　　设有一个包含n个元素的有序线性表。在等概率情况下删除其中的一个元素，若采用单链表存储，则平均需要移动（）个元素。', 1, '0', '1', '(n-1)/2', 'n/2', 'A', NULL);
INSERT INTO `topic` VALUES (1726, '　　设栈S和队列Q的初始状态为空，元素按照a、b、c、d、e的次序进入栈S，当一个元素从栈中出来后立即进入队列Q。若队列的输出元素序列是c、d、b、a、e，则元素的出栈顺序是（）。', 1, 'a、b、c、d、e', 'e、d、c、b、a', 'c、d、b、a、e', 'e、a、b、d、c', 'C', NULL);
INSERT INTO `topic` VALUES (1727, '下面关于栈和队列的叙述，错误的是（）。', 1, '栈和队列都是操作受限的线性表', '队列采用单循环链表存储时，只需设置队尾指针就可使入队和出队操作的时间复杂度都为O(1)', NULL, NULL, 'D', NULL);
INSERT INTO `topic` VALUES (1728, '　　对于长度为m（m>1）的指定序列，通过初始为空的一个栈、一个队列后，错误的叙述是（）。', 1, '若入栈和入队的序列相同，则出栈序列和出队序列可能相同', '若入栈和入队的序列相同，则出栈序列和出队序列可以互为逆序', '入队序列与出队序列关系为1:1，而入栈序列与出栈序列关系是1:n(n≥1)', '入栈序列与出栈序列关系为1:1，而入队序列与出队序列关系是1:n(n≥1)', 'C', NULL);
INSERT INTO `topic` VALUES (1729, '　　栈是一种按“后进先出”原则进行插入和删除操作的数据结构，因此，（）必须用栈。', 1, '实现函数或过程的递归调用及返回处理时', '将一个元素序列进行逆置', '链表结点的申请和释放', '可执行程序的装入和卸载', 'A', NULL);
INSERT INTO `topic` VALUES (1730, '　　若一个栈初始为空，其输入序列是1，2，3，…，n-1，n，其输出序列的第一个元素为k(1≤k≤「n/2」)，则输出序列的最后一个元素是（）。', 1, '值为n的元素', '值为1的元素', '值为n-k的元素', '不确定的', 'D', NULL);
INSERT INTO `topic` VALUES (1731, '　　设栈S和队列Q的初始状态为空，元素abcdefg依次进入栈S。要求每个元素出栈后立即进入队列Q，若7个元素出队列的顺序为bdfecag，则栈S的容量最小应该是（）。', 1, '5', '4', '3', '2', 'B', NULL);
INSERT INTO `topic` VALUES (1732, '　　若元素以a，b，c，d，e的顺序进入一个初始为空的栈中，每个元素进栈、出栈各1次，要求出栈的第一个元素为d，则合法的出栈序列共有（）种。', 1, '4', '5', '6', '24', 'A', NULL);
INSERT INTO `topic` VALUES (1733, '　　设L为广义表，将head(L)定义为取非空广义表的第一个元素，tail(L)定义为取非空广义表除第一个元素外剩余元素构成的广义表。若广义表L=((x,y,z),a,(u,t,w))，则从L中取出原子项y的运算是（）。', 1, 'head(tail(tail(L)))', 'tail(head(head(L)))', 'head(tail(head(L)))', 'tail(tail(head(L)))', 'C', NULL);
INSERT INTO `topic` VALUES (1734, '　　以下关于字符串的叙述中，正确的是（）。', 1, '包含任意个空格字符的字符串称为空串', '字符串不是线性数据结构', '字符串的长度是指串中所含字符的个数', '字符串的长度是指串中所含非空格字符的个数', 'C', NULL);
INSERT INTO `topic` VALUES (1735, '　　设S是一个长度为n的非空字符串，其中的字符各不相同，则其互异的非平凡子串（非空且不同于S本身）个数为（）。', 1, '2n-1', 'n2', 'n(n+1)/2', '(n+2)(n-1)/2', 'D', NULL);
INSERT INTO `topic` VALUES (1736, '　　设有n阶三对角矩阵A，即非零元素都位于主对角线以及与主对角线平行且紧邻的两条对角线上，现对该矩阵进行按行压缩存储，若其压储空间用数组B表示，A的元素下标从0开始，B的元素下标从1开始。已知A[0，0]存储在B[1]，A[n-1，n-1]存储在B[3n-2]，那么非零元素A[i，j](0≤i<n，0≤j<n，|i-j|≤1)存储在B[（）]。', 1, '2i+j-1', '2i+j', '2i+j+1', '3i-j+1', 'C', NULL);
INSERT INTO `topic` VALUES (1737, '　　已知一棵度为3的树（一个结点的度是指其子树的数目，树的度是指该树中所有结点的度的最大值）中有5个度为1的结点，4个度为2的结点，2个度为3的结点，那么，该树中的叶子结点数目为（）。', 1, '10', '9', '8', '7', 'B', NULL);
INSERT INTO `topic` VALUES (1738, '　　若一棵二叉树的高度（即层数）为h，则该二叉树（）。', 1, '有2h个结点', '有2h-1个结点', '最少有2h-1个结点', '最多有2h-1个结点', 'D', NULL);
INSERT INTO `topic` VALUES (1739, '　　具有3个结点的二叉树有（）种形态。', 1, '2', '3', '5', '7', 'C', NULL);
INSERT INTO `topic` VALUES (1740, '　　已知一个二叉树的先序遍历序列为①、②、③、④、⑤，中序遍历序列为②、①、④、③、⑤，则该二叉树的后序遍历序列为（）。', 1, '②、③、①、⑤、④', '①、②、③、④、⑤', '②、④、⑤、③、①', '④、⑤、③、②、①', 'D', NULL);
INSERT INTO `topic` VALUES (1741, '　　在（）中任意一个结点的左、右子树的高度之差的绝对值不超过1。', 1, '完全二叉树', '二叉排序树', '线索二叉树', '最优二叉树', 'A', NULL);
INSERT INTO `topic` VALUES (1742, '　　若n2、n1、n0分别表示一个二叉树中度为2、度为1和叶子结点的数目（结点的度定义为结点的子树数目），则对于任何一个非空的二叉树（）。', 1, 'n2一定大于n1', 'n1一定大于n0', 'n2一定大于n0', 'n0一定大于n2', 'D', NULL);
INSERT INTO `topic` VALUES (1743, '　　若用n个权值构造一棵最优二叉树（哈弗曼树），则该二叉树的结点总数为（）。', 1, '2n', '2n-1', '2n+1', '2n+2', 'B', NULL);
INSERT INTO `topic` VALUES (1744, '　　假设某消息中只包含7个字符{a,b,c,d,e,f,g}，这7个字符在消息中出现的次数为{5,24,8,17,34,4,13}，利用哈夫曼树（最优二叉树）为该消息中的字符构造符合前缀编码要求的不等长编码。各字符的编码长度分别为（）。', 1, 'a:4,b:2,c:3,d:3,e:2,f:4,g:3', 'a:6,b:2,c:5,d:3,e:1,f:6,g:4', 'a:3,b:3,c:3,d:3,e:3,f:2,g:3', 'a:2,b:6,c:3,d:5,e:6,f:1,g:4', 'A', NULL);
INSERT INTO `topic` VALUES (1745, '　　设一个包含N个顶点、E条边的简单有向图采用邻接矩阵存储结构（矩阵元素A[i][j]等于1/0分别表示顶点i与顶点j之间有/无弧），则该矩阵中非零元素数目为（）。', 1, 'N', 'N+E', 'E', 'N–E', 'C', NULL);
INSERT INTO `topic` VALUES (1746, '　　（）的邻接矩阵是一个对称矩阵。', 1, '无向图', 'AOV网', 'AOE网', '有向图', 'A', NULL);
INSERT INTO `topic` VALUES (1747, '　　具有n个顶点、e条边的图采用邻接表存储结构，进行深度优先遍历和广度优先遍历运算的时间复杂度均为（）。', 1, 'O(n2)', 'O(e2)', 'O(n*e)', 'O(n+e)', 'D', NULL);
INSERT INTO `topic` VALUES (1748, '　　在一个有向图G的拓扑序列中，顶点vi排列在vj之前，说明图G中（）。', 1, '一定存在弧(vj,vi)', '一定存在弧', '可能存在vi到vj的路径，而不可能存在vj到vi的路径', '可能存在vj到vi的路径，而不可能存在vi到vj的路径', 'C', NULL);
INSERT INTO `topic` VALUES (1749, '　　下面关于图（网）的叙述，正确的是（）。', 1, '连通无向网的最小生成树中，顶点数恰好比边数多1', '若有向图是强连通的，则其边数至少是顶点数的2倍', '可以采用AOV网估算工程的工期', '关键路径是AOE网中源点至汇点的最短路径', 'A', NULL);
INSERT INTO `topic` VALUES (1750, '　　数据结构中，与所使用的计算机无关的是数据的（）结构。', 1, '存储', '物理', '逻辑', '物理和存储', 'C', NULL);
INSERT INTO `topic` VALUES (1751, '　　算法分析的目的是（）。', 1, '找出数据结构的合理性', '研究算法中的输入和输出的关系', '分析算法的效率以求改进', '分析算法的易懂性和文档性', 'C', NULL);
INSERT INTO `topic` VALUES (1752, '　　若一个线性表中最常用的操作是取第i个元素和找第i个元素的前驱元素，则采用（）存储方式最节省时间。', 1, '顺序表', '单链表', '双链表', '单循环链表', 'A', NULL);
INSERT INTO `topic` VALUES (1753, '　　一个顺序表的第一个元素的存储地址是90，每个元素的长度为2，则第6个元素的存储地址是（）。', 1, '98', '100', '102', '106', 'B', NULL);
INSERT INTO `topic` VALUES (1754, '　　五节车厢以编号1，2，3，4，5顺序进入铁路调度站（栈），可以得到（）的编组。', 1, '3，4，5，1，2', '2，4，1，3，5', '3，5，4，2，1', '1，3，5，2，4', 'C', NULL);
INSERT INTO `topic` VALUES (1755, '　　设广义表L=((a，b，c))，则L的长度和深度分别为（）。', 1, '1和1', '1和3', '1和2', '2和3', 'C', NULL);
INSERT INTO `topic` VALUES (1756, '　　如果从无向图的任一顶点出发进行一次深度优先搜索即可访问所有顶点，则该图一定是（）。', 1, '完全图', '连通图', '有回路', '一棵树', 'B', NULL);
INSERT INTO `topic` VALUES (1757, '　　解决散列法中出现的冲突问题常采用的方法是（）。', 1, '数字分析法、除余法、平方取中法', '数字分析法、除余法、线性探测法', '数字分析法、线性探测法、多重散列法', '线性探测法、多重散列法、链地址法', 'D', NULL);
INSERT INTO `topic` VALUES (1758, '　　以下关于二叉排序树（或二叉查找树、二叉搜索树）的叙述中，正确的是（）。', 1, '对二叉排序树进行先序、中序和后序遍历，都得到结点关键字的有序序列', '含有n个结点的二叉排序树高度为（log2n）+1', '从根到任意一个叶子结点的路径上，结点的关键字呈现有序排列的特点', '从左到右排列同层次的结点，其关键字呈现有序排列的特点', 'D', NULL);
INSERT INTO `topic` VALUES (1759, '　　对于n个元素的关键宇序列{k1,k2,...kn}，当且仅当满足关系ki≤k2i且ki≤k2i+1{i=1.2...[n/2]}时称其为小根堆(小顶堆)。以下序列中，（）不是小根堆。', 1, '16,25,40,55,30,50,45', '16,40,25,50,45,30,55', '16,25,39.,41,45,43,50', '16,40,25,53,39,55,45', 'D', NULL);
INSERT INTO `topic` VALUES (1760, '　　将数组{1,1,2,4,7,5}从小到大排序，若采用（）排序算法，则元素之间需要进行的比较次数最少。', 1, '直接插入', '归并', '堆', '快速', 'A', NULL);
INSERT INTO `topic` VALUES (1761, '　　对以下四个序列用直接插入排序方法由小到大进行排序时，元素比较次数最少的是（）。', 1, '89,27,35,78,41,15', '27,35,41,16,89,70', '15,27,46,40,64,85', '90,80,45,38,30,25', 'C', NULL);
INSERT INTO `topic` VALUES (1762, '　　现需要对一个基本有序的数组进行排序。此时最适宜采用的算法为（）序排算法。', 1, '插入', '快速', '归并', '堆', 'A', NULL);
INSERT INTO `topic` VALUES (1763, '研究数据结构就是研究（）。', 1, '数据的逻辑结构', '数据的存储结构', '数据的逻辑结构和存储结构', '数据的逻辑结构、存储结构及其基本操作', 'D', NULL);
INSERT INTO `topic` VALUES (1764, '算法分析的两个主要方面是（）。', 1, '空间复杂度和时间复杂度', '正确性和简单性', '可读性和文档性', '数据复杂性和程序复杂性', 'A', NULL);
INSERT INTO `topic` VALUES (1765, '具有线性结构的数据结构是（）。', 1, '图', '树', '广义表', '栈', 'C', NULL);
INSERT INTO `topic` VALUES (1766, '计算机中的算法指的是解决某一个问题的有限运算序列，它必须具备输入、输出、（）等5个特性。', 1, '可执行性、可移植性和可扩充性', '可执行性、有穷性和确定性', '确定性、有穷性和稳定性', '易读性、稳定性和确定性', 'B', NULL);
INSERT INTO `topic` VALUES (1767, '某算法的语句执行频度为（3n+nlog2n+n2+8），其时间复杂度表示为（）。', 1, 'O(n)', 'O(nlog2n)', 'O(n2)', 'O(log2n)', 'C', NULL);
INSERT INTO `topic` VALUES (1768, '　　递归是程序设计中很重要的一种控制结构，通常实现递归时，采用的数据结构是（）。', 1, '数组', '栈', '队列', '循环链表', 'B', NULL);
INSERT INTO `topic` VALUES (1769, '　　对那些既可以用递归方式也可以用循环方式求解的问题，就执行效率而言（）。', 1, '难以断定', '两者相同', '循环优于递归', '递归优于循环', 'C', NULL);
INSERT INTO `topic` VALUES (1770, '　　文法G=(VT，VN，P，S)的类型由G中的（）决定。', 1, 'VT', 'VN', 'P', 'S', 'C', NULL);
INSERT INTO `topic` VALUES (1771, '有限状态自动机可用五元组（VT，Q，δ，q0，Qf）来描述，它可对应于（）。', 1, '0型文法', '1型文法', '2型文法', '3型文法正', 'D', NULL);
INSERT INTO `topic` VALUES (1772, '　　在允许子程序递归调用的高级语言环境中，需用动态存储管理方法，它通常使用一个（）存入子程序的调用记录。', 1, '线性表', '队列', '堆', '下推栈', 'D', NULL);
INSERT INTO `topic` VALUES (1773, '　　算符优先文法是一种自下而上的语法分析文法，其文法的特点是文法的产生式中（）。', 1, '不含两个相邻的非终结符', '不含两个相邻的终结符', '不含ε产生式', '不含长度为1的产生式', 'A', NULL);
INSERT INTO `topic` VALUES (1774, '　　自上而下的语法分析方法通常要求文法的产生式（）。', 1, '不以非终结符开头', '不以终结符开头', '不含左递归', '不含右递归', 'C', NULL);
INSERT INTO `topic` VALUES (1775, '　　C语言中的函数以（）方式进行参数传递。', 1, '传值调用', '引用调用', '传名凋用', '宏扩展', 'A', NULL);
INSERT INTO `topic` VALUES (1776, '　　与正规式(a|b)*等价的正规式为（）。', 1, 'a*|b*', 'a*b*', '(a*b*)*', '(ab)*', 'C', NULL);
INSERT INTO `topic` VALUES (1777, '　　语言L={ambn|m≥0，n≥1}的正规表达式是（）。', 1, 'a*bb*', 'aa*bb*', 'aa*b*', 'a*b*', 'A', NULL);
INSERT INTO `topic` VALUES (1778, '　　一个文法G=(N，T，P，S)，其中N是非终结符号的集合，T是终结符号的集合，P是产生式集合，S是开始符号，令集合V=N∪T，那么G所描述的语言是（）的集合。', 1, '由S推导出的所有符号串', '由S推导出的所有终结符号串', 'N中所有符号组成的符号串', 'T的闭包中的所有符号串', 'B', NULL);
INSERT INTO `topic` VALUES (1779, '　　程序设计语言引入“类”的概念是为了解决数据保护问题。C++语言将类的成员封装在类体之中，使之具有一定的存取规则，这些规则规定了存取类的成员的权利，其中，对于用private说明的成员，它（）。', 1, '既能被该类的成员函数访问，又能被外界直接访问', '只能被该类的成员函数访问，外界不能直接访问', '不能被该类的成员函数访问，只能被外界直接访问', '既不能被该类的成员函数访问，也不能被外界直接访问', 'B', NULL);
INSERT INTO `topic` VALUES (1780, '　　已知有一维数组A[0..m*n-1]，若要对应为m行、n列的矩阵，则下面的对应关系（）可将元素A[k](0≤k<m*n)表示成矩阵的第i行、第j列的元素(0≤i<m，0≤j<n)。', 1, 'i=k/n,j=k%m', 'i=k/m,j=k%m', 'i=k/n,j=k%n', 'i=k/m,j=k%n', 'C', NULL);
INSERT INTO `topic` VALUES (1781, '　　文法G[S]:S→xSx|y所描述的语言是（）（n≥0）。', 1, '(xyx)n', 'xyxn', 'xynx', 'xnyxn', 'D', NULL);
INSERT INTO `topic` VALUES (1782, '某一DFA的状态转换图如下图所示，令d=0|1|2|…|9，与该DFA等价的正规式是（）。', 1, '(-d|d)d*E(-d|d)d*|(-d|d)d*.d*(ε|E(-d|d)d*)', '-(d|d)dd*(.|ε)d*(ε|E(-d|d)d*)', '(-|d)dd*E(-|d)d*|(-d|d)dd*.d*(ε|E(-|E(-|d)d*)', '(-d|d)dd*E(-d|d)d*|(-d|d)dd*.d*(ε|E(-dd*|dd*)', 'A', NULL);
INSERT INTO `topic` VALUES (1783, '　　编译程序进行词法分析时不能（）。', 1, '过滤源程序中的注释', '扫描源程序并识别记号', '指出出错行号', '查出拼错的保留字', 'D', NULL);
INSERT INTO `topic` VALUES (1784, '　　开发专家系统时，通过描述事实和规则由模式匹配得出结论，这种情况下适用的开发语言是（）。', 1, '面向对象语言', '函数式语言', '过程式语言', '逻辑式语言', 'D', NULL);
INSERT INTO `topic` VALUES (1785, '　　高级程序设计语言中用于描述程序中的运算步骤、控制结构及数据传输的是（）。', 1, '语句', '语义', '语用', '语法', 'A', NULL);
INSERT INTO `topic` VALUES (1786, '　　“通过指明一系列可执行的运算及运算的次序来描述计算过程”是（）语言的特点。', 1, '逻辑式', '函数式', '交互式', '命令式（或过程式）', 'D', NULL);
INSERT INTO `topic` VALUES (1787, '　　 “X=(A+B)×(C-D/E)”的后缀式表示为（）。', 1, 'XAB+CDE/-×=', 'XAB-C-DE/×=', 'XAB+CDE-/×=', 'XAB-CD-E/×=', 'A', NULL);
INSERT INTO `topic` VALUES (1788, '下面关于编程语言的各种说法中，（）是正确的。', 1, '由于C语言程序是由函数构成的，因此它是一种函数型语言', 'Smalltalk、C++、Java、C#都是面向对象语言', '函数型语言适用于编写处理高速计算的程序，常用于超级计算机的模拟计算', '逻辑型语言是在Client/Server系统中用于实现负载分散的程序语言', 'B', NULL);
INSERT INTO `topic` VALUES (1789, '程序设计语言中（）。', 1, 'while循环语句的执行效率比do-while循环语句的执行效率高', 'while循环语句的循环体执行次数比循环条件的判断次数多1，而do-while语句的循环体执行次数比循环条件的判断次数少1', 'while语句的循环体执行次数比循环条件的判断次数少1，而do-while语句的循环体执行次数比循环条件的判断次数多1', 'while语句的循环体执行次数比循环条件的判断次数少1，而do-while语句的循环体执行次数等于循环条件的判断次数', 'D', NULL);
INSERT INTO `topic` VALUES (1790, '　　C语言是一种（）语言。', 1, '编译型', '解释型', '编译、解释混合型', '脚本', 'A', NULL);
INSERT INTO `topic` VALUES (1791, '　　若程序运行时系统报告除数为0，这属于（）错误。', 1, '语法', '语用', '语义', '语境', 'C', NULL);
INSERT INTO `topic` VALUES (1792, '　　集合L={ambm|m≥0}（）。', 1, '可用正规式“a*b*”表示', '不能用正规式表示，但可用非确定的有限自动机识别', '可用正规式“ambm”表示', '不能用正规式表示，但可用上下文无关文法表示', 'D', NULL);
INSERT INTO `topic` VALUES (1793, '　　表达式“X=A+B×(C-D)/E”的后缀表示形式可以为（）（运算符优先级相同时，遵循左结合的原则）。', 1, 'XAB+CDE/-×=', 'XA+BC-DE/×=', 'XABCD-×E/+=', 'XABCDE+×-/=', 'C', NULL);
INSERT INTO `topic` VALUES (1794, '　　正则表达式1*(0|01)*表示的集合元素的特点是（）。', 1, '长度为奇数的0、1串', '开始和结尾字符必须为1的0、1串', '串的长度为偶数的0、1串', '不包含子串011的0、1串', 'D', NULL);
INSERT INTO `topic` VALUES (1795, '　　程序语言的大多数语法现象可用上下文无关文法描述。对于一个上下文无关文法G=(N，T，P，S)，其中N是非终结符号的集合，T是终结符号的集合，P是产生式集合，S是开始符号。令集合V=N∪T，那么G所描述的语言是（）的集合。', 1, '从S出发推导出的包含V中所有符号的串', '从S出发推导出的仅包含T中符号的串', 'N中所有符号组成的串', 'T中所有符号组成的串', 'B', NULL);
INSERT INTO `topic` VALUES (1796, '　　程序设计语言一般都提供多种循环语句，例如实现先判断循环条件再执行循环体的while语句和先执行循环体再判断循环条件的do-while语句。关于这两种循环语句，在不改变循环体的条件下，（）是正确的。', 1, 'while语句的功能可由do-while语句实现', 'do-while语句的功能可由while语句实现', '若已知循环体的次数，则只能使用while语句', '循环条件相同时，do-while语句的执行效率更高', 'B', NULL);
INSERT INTO `topic` VALUES (1797, '　　表达式(a-b)*(c+5)的后缀式是（）。', 1, 'abc5+*-', 'ab–c+5*', 'abc-*5+', 'ab-c5+*', 'D', NULL);
INSERT INTO `topic` VALUES (1798, '　　高级语言源程序的编译过程分若干个阶段，分配寄存器属于（）阶段的工作。', 1, '词法分析', '语法分析', '语义分析', '代码生成', 'D', NULL);
INSERT INTO `topic` VALUES (1799, '　　设某上下文无关文法如下：S→11|1001|S0|SS，则该文法所产生的所有二进制字符串都具有的特点是（）。', 1, '能被3整除', '0、1出现的次数相等', '0和1的出现次数都为偶数', '能被2整除', 'A', NULL);
INSERT INTO `topic` VALUES (1800, '　　逻辑表达式“a∧b∨c∧(b∨x>0)”的后缀式为（）。（其中∧、∨分别表示逻辑与、逻辑或，>表示关系运算大于，对逻辑表达式进行短路求值）', 1, 'abcbx0>∨∧∧∨', 'ab∧c∨b∧x0>∨', 'ab∧cb∧x>0∨∨', 'ab∧cbx0>∨∧∨', 'D', NULL);
INSERT INTO `topic` VALUES (1801, '　　编译程序对C语言源程序进行语法分析时，可以确定（）。', 1, '变量是否定义(或声明)   ', '变量的值是否正确', '循环语句的执行次数     ', '循环条件是否正确', 'A', NULL);
INSERT INTO `topic` VALUES (1802, '　　表达式（）对应的逆波兰式是“ab+-c/d-”。', 1, 'a-b-c/d', '-(a+b)/c-d', '-a+b/c-d', '(a+b)/(-c-d)', 'B', NULL);
INSERT INTO `topic` VALUES (1803, '　　以下关于解释程序和编译程序的叙述中，正确的是（）。', 1, '编译程序和解释程序都生成源程序的目标程序', '编译程序和解释程序都不生成源程序的目标程序', '编译程序生成源程序的目标程序，而解释程序则不然', '编译程序不生成源程序的目标程序，而解释程序反之', 'C', NULL);
INSERT INTO `topic` VALUES (1804, '　　在对高级语言源程序进行编译的过程中，为源程序中变量所分配的存储单元的地址属于（）。', 1, '逻辑地址', '物理地址', '接口地址', '线性地址', 'A', NULL);
INSERT INTO `topic` VALUES (1805, '　　以下关于语言L={anbn|n>1}的叙述中，正确的是（）。', 1, '可用正规式“aa*bb*”描述，但不能通过有限自动机识别', '可用正规式“ambm”表示，但可用有限自动机识别', '不能用正规式表示，但可用有限自动机识别', '不能用正规式表示，也不能通过有限自动机识别', 'D', NULL);
INSERT INTO `topic` VALUES (1806, '　　编译过程中，对高级语言程序语句的翻译主要考虑声明语句和可执行语句。对声明语句，主要是将所需要的信息正确地填入合理组织的（）中。', 1, '符号表', '栈', '队列', '树', 'A', NULL);
INSERT INTO `topic` VALUES (1807, '　　编译过程中，对高级语言程序语句的翻译主要考虑声明语句和可执行语句。对可执行语句，（）。', 1, '翻译成机器代码并加以执行', '转换成语法树', '翻译成中间代码或目标代码', '转换成有限自动机', 'C', NULL);
INSERT INTO `topic` VALUES (1808, '　　已知文法G：S→A0|B1，A→S1|1，B→S0|0。从S出发可以推导出（）。', 1, '所有由0构成的字符串', '所有由1构成的字符串', '某些0和1个数相等的字符串', '所有0和1个数不同的字符串', 'C', NULL);
INSERT INTO `topic` VALUES (1809, '　　算术表达式a+(b-c)*d的后缀式是（）。（-、+、*表示算术的减、加、乘运算，字符的优先级和结合性遵循惯例）', 1, 'bc-d*a', 'abc-d*+', 'ab+c-d*', 'abcd-*+', 'B', NULL);
INSERT INTO `topic` VALUES (1810, '　　将高级语言程序翻译为机器语言程序的过程中，常引入中间代码，其好处是（）。', 1, '有利于反编译处理', '有利于进行与机器无关的优化处理', '尽早发现语法错误', '可以简化语法和语义分析', 'B', NULL);
INSERT INTO `topic` VALUES (1811, '　　对高级语言源程序进行编译的过程中，有穷自动机(NFA或DFA)是进行（）的适当工具。', 1, '词法分析', '语法分析', '语义分析', '出错处理', 'A', NULL);
INSERT INTO `topic` VALUES (1812, '　　编译过程中进行的语法分析主要是分析（）。', 1, '源程序中的标识符是否合法', '程序语句的含义是否合法', '程序语句的结构是否合法', '表达式的类型是否合法', 'C', NULL);
INSERT INTO `topic` VALUES (1813, '　　对布尔表达式进行短路求值是指：无须对表达式中所有操作数或运算符进行计算就可确定表达式的值。对于表达式aor((c<d)andb)，（）时可进行短路计算。', 1, 'd为true', 'a为true', 'b为true', 'c为true', 'B', NULL);
INSERT INTO `topic` VALUES (1814, '可用于编写独立程序和快速脚本的语言是（）。', 1, 'Python', 'Prolog', 'Java', 'C#', 'A', NULL);
INSERT INTO `topic` VALUES (1815, '　　数据流图中某个加工的一组动作依赖于多个逻辑条件的取值，则用（）能够清楚地表示复杂的条件组合与应做的动作之间的对应关系。', 1, '流程图', 'NS盒图', '形式语言', '决策树', 'D', NULL);
INSERT INTO `topic` VALUES (1816, '某数码相机内置128MB的存储空间，拍摄分辨率设定为1600×1200像素，颜色深度为24位，若不采用压缩存储技术，使用内部存储器最多可以存储22张照片。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1817, '在面向对象系统中，用泛化关系表示一个较大的整体类包含一个或多个较小的部分类。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1818, 'RUP(Rational Unified Process)分为4个阶段，每个阶段结束时都有重要的里程碑，其中生命周期架构是在构建阶段结束时的里程碑。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1819, '在软件工程环境中进行风险识别时，常见的、已知的及可预测的风险类包括产品规模、商业影响等，与开发工具的可用性及质量相关的风险是开发环境。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1820, '编译程序对高级语言源程序进行翻译时，需要在该程序的地址空间中为变量指定地址，这种地址称为逻辑地址。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1821, '对于线性表，相对于顺序存储，采用链表存储的缺点是数据元素之间的关系需要占用存储空间，导致存储密度不高。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1822, '利用两个栈可以模拟一个队列的操作，反之亦可。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1823, '某些OS把一条命令的执行结果输出给下一条命令，作为它的输入，并加以处理，这种机制称为输出重定向。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1824, '在OS中，解决进程间的同步与互斥两种基本关系，往往运用对信号量进行P-V操作的通信原语。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1825, '软件能力成熟度模型(CMM)将软件能力成熟度自低到高依次划分为初始级、可重复级、定义级、管理级和优化级。其中管理级和优化级对软件过程和产品都有定量的理解与控制。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1826, '极限编程(XP)包含了策划、设计、编程和测试4个活动，其12个最佳实践中的持续集成实践在设计和编程活动中进行。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1827, 'ISO/IEC9126软件质量模型中第一层定义了6个质量特性，并为各质量特性定义了相应的质量子特性。子特性准确性属于可靠性质量特性。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1828, 'UP(统一过程)是用例驱动的、以架构为核心、迭代和增量的软件过程框架，它提供了一种持续集成的特性。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1829, '系统测试人员与系统开发人员需要通过文档进行沟通，系统测试人员应根据一系列文档对系统进行测试，然后将工作结果撰写成系统测试报告交给系统开发人员。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1830, '系统的可维护性可以用系统的可维护性评价指标来衡量。系统的可维护性评价指标不包括可修改性。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1831, '在模拟环境下，常采用黑盒测试检验所开发的软件是否与需求规格说明书一致。其中有效性测试属于集成测试中的一个步骤。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1832, '在选择某种面向对象语言进行软件开发时，不需要着重考虑的因素是该语言开发环境是否成熟。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1833, '静态绑定是指在运行时把过程调用和响应调用所需要执行的代码加以结合。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1834, '由a、b构造且包含偶数个a的串的集合用正规式表示为(b*(ab*a)*)*。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1835, '许多程序设计语言规定，程序中的数据都必须具有类型，其作用不包括便于定义动态数据结构。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1836, '设某上下文无关文法如下：S→11|1001|S0|SS，则该文法所产生的所有二进制字符串都具有的特点是0和1的出现次数都为偶数。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1837, '由二叉树的后序遍历序列和中序遍历序列可以构造该二叉树的先序遍历序列。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1838, '将一个无序序列中的元素依次插入到一棵二叉排序树，并进行中序遍历，可得到一个有序序列。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1839, '广义表中的元素可以是原子，也可以是表，因此广义表的适用存储结构是静态数组。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1840, '具有n个顶点、e条边的图采用邻接表存储结构，进行深度优先遍历和广度优先遍历运算的时间复杂度均为O(e2)。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1841, '在二叉排序树中，从左到右排列同层次的结点，其关键字呈现有序排列的特点。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1842, '栈是一种按“后进先出”原则进行插入和删除操作的数据结构，因此，可执行程序的装入和卸载必须用栈。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1843, '设某算法的计算时间表示为递推关系式T(n)＝2T(n/2)+n（n＞0）及T(0)＝1，则该算法的时间复杂度为O(lgn)。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1844, 'ADSL是一种宽带接入技术，这种技术使用的传输介质是电话线。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1845, '关于网络系统设计原则，网络系统应采用开放的标准和技术。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1846, '防火墙一般由软件以及支持该软件运行的硬件系统构成。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1847, 'Internet上的DNS服务器中保存有所有主机的MAC地址。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1848, '在计算机体系结构中，CPU内部包括程序计数器PC、存储器数据寄存器MDR、指令寄存器IR和存储器地址寄存器MAR等。若CPU要执行的指令为：MOV R0，#100（即将数值100传送到寄存器R0中），则CPU首先要完成的操作是100→R0。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1849, '现有四级指令流水线，分别完成取指、取数、运算、传送结果4步操作。若完成上述操作的时间依次为9ns、10ns、6ns、8ns，则流水线的操作周期应设计为10ns。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1850, '内存按字节编址，地址从90000H到CFFFFH，若用存储容量为16KB×8bit的存储器芯片构成该内存，至少需要4片。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1851, 'CPU中的数据总线宽度会影响指令系统的指令数量。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1852, '利用高速通信网络将多台高性能工作站或微型机互连构成机群系统，其系统结构形式属于多指令流多数据流（MIMD）计算机。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1853, '内存采用段式存储管理有许多优点，但地址变换速度快、内存碎片少不是其优点。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1854, '某银行为用户提供网上服务，允许用户通过浏览器管理自己的银行账户信息。为保障通信的安全性，该Web服务器可选的协议是HTTPS。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1855, '李某大学毕业后在M公司销售部门工作，后由于该公司软件开发部门人手较紧，李某被暂调到该公司软件开发部开发新产品，2周后，李某开发出一种新软件。该软件著作权应归李某和M公司所有。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1856, '一幅灰度图像，若每个像素有8位像素深度，则最大灰度数目为256。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1857, '当图像分辨率为800×600，屏幕分辨率为640×480时，屏幕上显示一幅图像的64%左右。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1858, '结构化开发方法是一种面向数据流的开发方法，其基本思想是软件功能的分解和抽象。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1859, '采用UML进行软件设计时，可用泛化关系表示两类事物之间存在的特殊/一般关系，用聚集关系表示事物之间存在的整体/部分关系。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1860, '编译器对高级语言源程序的处理过程可以划分为词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成等几个阶段，其中代码优化和目标代码生成并不是每种编译器都必需的。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1861, '已知某文法G[S]：S→0S0   S→1，从S推导出的符号串可用(010)n（n≥0）描述。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1862, '极限编程(eXtreme Programming)是一种轻量级软件开发方法，持续的交流和沟通是它强调的准则。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1863, '某公司采用的软件开发过程通过了CMM2认证，表明该公司对软件过程和产品质量建立了定量的质量目标。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1864, '在软件设计和编码过程中，采取良好的程序结构，有无文档均可的做法将使软件更加容易理解和维护。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1865, '软件维护成本在软件成本中占较大比重。为降低维护的难度，可采取的措施有限制可修改的范围。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1866, '软件文档按照其产生和使用的范围可分为开发文档、管理文档和用户文档。其中开发文档不包括维护修改建议。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1867, '有限自动机(FA)可用于识别高级语言源程序中的记号（单词），FA可分为确定的有限自动机(DFA)和不确定的有限自动机(NFA)。若某DFA D与某NFA M等价，则DFA D与NFA M可识别的记号相同。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1868, 'IMAP不属于电子邮件协议。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1869, '为实现程序指令的顺序执行，CPU程序计数器（PC）中的值将自动加1。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1870, '非法进行拷贝、发布或更改软件的人被称为软件盗版者。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1871, '某软件程序员接受一个公司(软件著作权人)委托开发完成一个软件，三个月后又接受另一公司委托开发功能类似的软件，此程序员仅将受第一个公司委托开发的软件略作修改即提交给第二家公司，此种行为不构成侵权。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1872, '王某是某公司的软件设计师，完成某项软件开发后按公司规定进行软件归档。该软件著作权应由公司和王某共同享有。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1873, '由I/0设备提出的中断请求是不可屏蔽中断，电源掉电是可屏蔽中断。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1874, '计算机指令一般包括操作码和地址码两部分，为分析执行一条指令，其操作码应存入程序计数器（PC）。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1875, '关于64位和32位微处理器，不能以2倍关系描述的是通用寄存器的位数和数据总线的宽度。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1876, '两个以上的申请人分别就相同内容的计算机程序的发明创造先后向国务院专利行政部门提出申请，先申请人可以获得专利申请权。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1877, '王某是一名程序员，每当软件开发完成后均按公司规定完成软件文档，并上交公司存档，自己没有留存。因撰写论文的需要，王某向公司要求将软件文档原本借出复印，但遭到公司拒绝，理由是该软件文档属于职务作品，著作权归公司。该软件文档属于职务作品，著作权归公司。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1878, '基于构件的软件开发，强调使用可复用的软件构件来设计和构建软件系统，对所需的构件进行合格性检验、适应性修改，并将它们集成到新系统中。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1879, '采用面向对象方法开发软件的过程中，抽取和整理用户需求并建立问题域精确模型的过程叫面向对象测试。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1880, '使用白盒测试方法时，应根据程序结构的复杂性和指定的覆盖标准确定测试数据。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1881, '若某整数的16位补码为FFFFH（H表示十六进制），则该数的十进制值为216-1。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1882, '在定点二进制运算器中，减法运算一般通过补码运算的二进制加法器来实现。 （）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1883, '编译程序对C语言源程序进行语法分析时，可以确定变量是否定义（或声明）。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1884, '如果系统采用信箱通信方式，当进程调用Send原语被设置成等信箱状态时，其原因是指定的信箱不存在。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1885, '若在系统中有若干个互斥资源R，6个并发进程，每个进程都需要2个资源R，那么使系统不发生死锁的资源R的最少数目为9。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1886, '对于一个大型软件来说，不加控制地变更很快就会引起混乱。为有效地实现变更控制，需借助于配置数据库和基线的概念。信息库不属于配置数据库。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1887, '软件设计时需要遵循抽象、模块化、信息隐蔽和模块独立原则。在划分软件系统模块时，应尽量做到高内聚高耦合。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1888, '能力成熟度集成模型CMMI是CMM模型的最新版本，它有连续式和阶段式两种表示方式。基于连续式表示的CMMI共有6个(0～5)能力等级，每个能力等级对应到一个一般目标以及一组一般执行方法和特定方法，其中能力等级3主要关注过程的组织标准化和部署。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1889, '统一过程(UP)定义了初启阶段、精化阶段、构建阶段、移交阶段和产生阶段，每个阶段以达到某个里程碑时结束，其中精化阶段的里程碑是生命周期架构。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1890, '程序的三种基本控制结构是递归、堆栈和队列。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1891, '版本控制不属于软件配置管理的活动。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1892, '一个功能模块M1中的函数F1有一个参数需要接收指向整型的指针，但是在功能模块M2中调用F1时传递了一个整型值，在软件测试中，M1和M2的集成测试最可能测出这一问题。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1893, '在面向对象程序设计中，继承是父类和子类之间共享数据和方法的机制。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1894, '实现对象及其相互关系不是面向对象分析阶段需要完成的。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1895, '面向对象设计应该依赖于面向对象分析的结果。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1896, '解释方式下，可以省略对源程序的词法分析和语法分析。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1897, '标记语言用一系列约定好的标记来对电子文档进行标记，以实现对电子文档的语义、结构及格式的定义。PHP不是标记语言。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1898, '对于正规式0*(10*1)*0*，其正规集中字符串的特点是开头和结尾必须是0。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1899, '确定系统边界和关系规范化分别在数据库设计的需求分析和逻辑设计阶段进行。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1900, '程序计数器PC除了存放指令地址，也可以临时存储算术/逻辑运算结果。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1901, '采用CISC技术的CPU，其芯片设计复杂度更高。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1902, '浮点数的一般表示形式为N=2E×F，其中E为阶码，F为尾数。两个浮点数进行相加运算，首先需要对阶，然后再进行尾数的相加处理。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1903, '海明码利用多组数位的奇偶性来检错和纠错。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1904, '在容量确定的情况下，替换算法的时间复杂度是影响Cache命中率的关键因素。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1905, '数据库容灾属于物理线路安全和网络安全。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1906, '包过滤防火墙对数据包的过滤依据不包括MAC地址。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1907, '某网站向CA申请了数字证书，用户通过CA的签名来验证网站的真伪。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1908, '软件权利人与被许可方签订一份软件使用许可合同。若在该合同约定的时间和地域范围内，软件权利人不得再许可任何第三人以此相同的方法使用该项软件，但软件权利人可以自己使用，则该项许可使用是独占许可使用。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1909, '多媒体中的“媒体”有两重含义，一是指存储信息的实体；二是指表达与传递信息的载体。文字、图形、磁带、半导体存储器是存储信息的实体。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1910, 'RGB 8:8:8表示一帧彩色图像的颜色数为224种。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1911, '面向对象开发方法的基本思想是尽可能按照人类认识客观世界的方法来分析和解决问题，Booch方法不属于面向对象方法。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1912, '确定构建软件系统所需要的人数时，无需考虑系统的市场前景。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1913, '风险预测从两个方面评估风险，即风险发生的可能性以及风险发生所产生的后果。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1914, 'C/C++语言指针变量可以是全局变量也可以是局部变量。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1915, '若系统正在将空闲块文件修改的结果写回磁盘时系统发生崩溃，则对系统的影响相对较大。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1916, '软件能力成熟度模型(CMM)的第4级(已管理级)的核心是组织具有标准软件过程。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1917, '改正在软件系统开发阶段已经发生而系统测试阶段还没有发现的错误，属于适应性维护。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1918, '类是具有相同属性和服务的一组对象的集合。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1919, '面向对象分析着重分析问题域和系统责任。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1920, '面向对象设计中抽象不应该依赖于细节。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1921, '若一个程序语言可以提供链表的定义和运算，则其运行时的数据空间必须采用堆存储分配策略。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1922, '软硬件故障常造成数据库中的数据破坏。数据库恢复就是重新安装数据库管理系统，并将数据库做镜像。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1923, '海明校验码是在n个数据位之外增k个校验位，从而形成一个k+n位的新的码字，使新的码字的码距比较均匀地拉大。n与k的关系是2n-1≤n+k。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1924, '相联存储器是指按内容访问的存储器。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1925, '处理机主要由处理器、存储器和总线组成，总线包括数据总线、地址总线、控制总线。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1926, '计算机中常采用原码、反码、补码和移码表示数据，其中，±0编码相同的是原码和补码。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1927, '漏洞扫描系统是一种自动检测目标主机安全弱点的程序。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1928, '网络安全包含了网络信息的可用性、保密性、完整性和网络通信对象的真实性。其中，数字签名是对真实性的保护。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1929, '计算机感染特洛伊木马后的典型现象是程序异常退出。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1930, '软件著作权产生的时间是自作品首次公开发表时。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1931, 'PC处理的音频信号主要是人耳能听得到的音频信号，它的频率范围是20Hz～20kHz。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1932, '多媒体计算机图像文件格式分为静态图像文件格式和动态图像文件格式，AVI属于静态图像文件格式。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1933, '计算机获取模拟视频信息的过程中首先要进行A/D变换。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1934, '在采用面向对象技术构建软件系统时，很多敏捷方法都建议的一种重要的设计活动是抽象，它是一种重新组织的技术，可以简化构件的设计而无需改变其功能或行为。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1935, '若用单链表作为栈的存储结构，并用头指针作为栈顶指针，则入栈和出栈操作都不需要遍历链表。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1936, '函数调用时，基本的参数传递方式有传值与传地址两种，在传地址方式下，形参和实参间可以实现数据的双向传递。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1937, '己知某高级语言源程序A经编译后得到机器C上的目标程序B，则对B进行反汇编，不能得到与源程序A等价的汇编程序代码。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1938, '脚本语言属于动态语言，其程序结构可以在运行中改变。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1939, '在移臂调度算法中，先来先服务和最短寻找时间优先算法可能会随时改变移动臂的运动方向。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1940, '软件能力成熟度模型(CMM)将软件能力成熟度自低到高依次划分为5级。目前，达到CMM第3级(已定义级)是许多组织努力的目标，该级的核心是使用标准开发过程(或方法论)构建(或集成)系统。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1941, 'RUP在每个阶段都有主要目标，并在结束时产生一些制品。在构建阶段结束时产生“在适当的平台上集成的软件产品”。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1942, '字符串的长度是指串中所含非空格字符的个数。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1943, '在开发信息系统时，用于系统开发人员与项目管理人员沟通的主要文档是系统开发计划。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1944, '软件工程每一个阶段结束前，应该着重对可维护性进行复审。在系统设计阶段的复审期间，应该从指出可移植性问题以及可能影响软件维护的系统界面出发，评价软件的结构和过程。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1945, '某银行为了使其网上银行系统能够支持信用卡多币种付款功能而进行扩充升级，这需要对数据类型稍微进行一些改变，这一状况需要对网上银行系统进行适应性维护。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1946, '哈夫曼树中权值最小的两个结点互为兄弟结点。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1947, '设某语言的语法规则用上下文无关文法G=(N，T，P，S)表示，其中N是非终结符号的集合，T是终结符号的集合，P是产生式集合，S是开始符号，令V=N∪T，那么符合该语言的句型是从S出发推导的、包含V中符号的符号串。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1948, '采用二维表格结构表达实体类型及实体间联系的数据模型是网状模型。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1949, '哈希表可以动态创建。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1950, '连通无向网的最小生成树中，顶点数恰好比边数多1。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1951, '依据关键字无序的序列建立二叉排序树，也可能构造出单支树。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1952, '若队列的数据规模n可以确定，则采用顺序存储结构比链式存储结构效率更高。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1953, '完全二叉树的高度h与其结点数n之间存在确定的关系。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1954, '现有16枚外形相同的硬币，其中有一枚比真币的重量轻的假币，若采用分治法找出这枚假币，至多比较3次就能够找出该假币。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1955, '分治法以获取问题最优解为目标。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1956, '归并排序采用的算法设计方法属于回溯方法。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1957, '在Windows系统中设置默认路由的作用是访问本地主机的路由。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1958, 'HTML＜body＞元素中，vlink属性用于定义超链接被鼠标点击后所显示的颜色。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1959, 'HTML中＜tr＞标记用于定义表格的列。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1960, 'XML文档必须包含根元素。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1961, '网络互连设备中，属于物理层的是中继器，属于网络层的是路由器。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1962, '某算法的时间复杂度表达式为T(n)=an2+bnlgn+cn+d，其中，n为问题的规模，a、b、c和d为常数，用O表示其渐近时间复杂度为O(n)。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1963, '字符串采用链表存储方式时，每个结点存储多个字符有助于提高存储密度。若采用结点大小相同的链表存储串，在串比较、求子串、串连接、串替换等串的基本运算中，进行串替换最不方便。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1964, '对二叉排序树进行先序、中序和后序遍历，都得到结点关键字的有序序列。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1965, '单向链表中往往含有一个头结点，该结点不存储数据元素，一般令链表的头指针指向该结点，而该结点指针域的值为第一个元素结点的指针。若在头结点中存入链表长度值，则求链表长度运算的时间复杂度为O(1)。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1966, '邻接矩阵和邻接表是图(网)的两种基本存储结构，对于具有n个顶点、e条边的图进行广度优先遍历运算所消耗的时间与采用哪一种存储结构无关。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1967, '编译系统对某高级语言进行翻译时，语法分析阶段可以发现程序中所有的语法错误。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1968, '极限编程(XP)由价值观、原则、实践和行为四个部分组成，其中价值观包括沟通、简单性、完善性。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1969, '某系统重用了第三方组件(但无法获得其源代码)，则应采用环路覆盖对组件进行测试。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1970, '系统开发计划用于系统开发人员与项目管理人员在项目期内进行沟通，它包括总体规划和预算分配表等。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1971, 'ISO/IEC9126软件质量模型中，可靠性质量特性包括多个子特性。软件在故障发生后，要求在90秒内恢复其性能和受影响的数据，与达到此目的有关的软件属性为易恢复性子特性。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1972, 'UNIX系统采用直接、一级、二级和三级间接索引技术访问文件，其索引结点有13个地址项(i_addr[0]～i_addr[12])。如果每个盘块的大小为1KB，每个盘块号占4B，则进程A访问文件F中第11264字节处的数据时，需要一级间接寻址。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1973, '将高级语言源程序翻译为机器语言程序的过程中常引入中间代码。不同的高级程序语言可以产生同一种中间代码。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1974, '一个项目为了修正一个错误而进行了变更。但这个错误被修正后，却引起以前可以正确运行的代码出错。回归测试最可能发现这一问题。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1975, '在采用结构化方法进行系统分析时，根据分解与抽象的原则，按照系统中数据处理的流程，用E-R图来建立系统的逻辑模型，从而完成分析工作。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1976, '位图与矢量图相比，位图占用空间较大，处理侧重于获取和复制，显示速度快。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1977, '李某购买了一张有注册商标的应用软件光盘，则李某享有注册商标专用权。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1978, '网络安全体系设计可从物理线路安全、网络安全、系统安全、应用安全等方面来进行，其中，数据库容灾属于系统安全和网络安全。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1979, '快速排序算法和堆排序算法都是不稳定的排序算法。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1980, '已知一个二叉树的先序遍历序列为①、②、③、④、⑤，中序遍历序列为②、①、④、③、⑤，则该二叉树的后序遍历序列为②、④、⑤、③、①。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1981, '采用单例(Singleton)设计模式可保证一个类仅有一个实例。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1982, '采用组合(Composite)设计模式可将对象组合成树形结构以表示“部分-整体”的层次结构，使用户对单个对象和组合对象的使用具有一致性。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1983, '采用命令(Command)设计模式可动态地给一个对象添加一些额外的职责。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1984, '封装是把对象的属性和服务结合成一个独立的系统单元，并尽可能隐藏对象的内部细节。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1985, '多态是指子类可以自动拥有父类的全部属性和服务。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1986, '封装是对象发出的服务请求，一般包含提供服务的对象标识、服务标识、输入信息和应答信息等。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1987, '在Windows XP操作系统中，用户利用“磁盘管理”程序可以对磁盘进行初始化、创建卷，可以选择使用FAT、FAT32或NTFS文件系统格式化卷。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1988, '在面向对象分析与设计中，边界类是应用领域中的核心类，一般用于保存系统中的信息以及提供针对这些信息的相关处理行为。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1989, '边界类是系统内对象和系统外参与者的联系媒介。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1990, '若类A仅在其方法Method1中定义并使用了类B的一个对象，类A其他部分的代码都不涉及类B，那么类A与类B的关系应为关联。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1991, '若类A的某个属性是类B的一个对象，并且类A对象消失时，类B对象也随之消失，则类A与类B的关系应为组合。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1992, '当应用程序由于使用大量的对象，造成很大的存储开销时，可以采用享元(Flyweight)设计模式运用共享技术来有效地支持大量细粒度的对象。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1993, '零件关系P(零件号，零件名称，供应商，供应商所在地，单价，库存量)存在冗余以及插入异常和删除异常等问题。为了解决这些问题，需将零件关系分解为P1(零件号，零件名称)、P2(供应商，供应商所在地，单价，库存量)。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1994, '编译系统对某高级语言进行翻译时，语义分析阶段可以发现程序中所有的语义错误。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1995, '甲软件公司受乙企业委托安排公司软件设计师开发了信息系统管理软件，由于在委托开发合同中未对软件著作权归属做出明确的约定，所以该信息系统管理软件的著作权由甲享有。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1996, '甲乙两人在同一天就同样的发明创造提交了专利申请，专利局将分别向各申请人通报有关情况，并提出多种可能采用的解决办法。可以将甲、乙作为共同申请人。（）', 2, 'A', 'B', NULL, NULL, 'A', NULL);
INSERT INTO `topic` VALUES (1997, '某软件公司参与开发管理系统软件的程序员张某，辞职到另一公司任职，于是该项目负责人将该管理系统软件开发者的署名更改为李某（接张某工作）。该项目负责人的行为不构成侵权，因为程序员张某不是软件著作权人。（）', 2, 'A', 'B', NULL, NULL, 'B', NULL);
INSERT INTO `topic` VALUES (1998, '　　在软件评审中，设计质量是指设计的规格说明书符合用户的要求。设计质量的评审内容包括（）。', 3, '软件可靠性', '软件的可测试性', '软件性能实现情况', '模块层次', 'ABC', NULL);
INSERT INTO `topic` VALUES (1999, '　　在某班级管理系统中，班级的班委有班长、副班长、学习委员和生活委员，且学生年龄在15～25岁。若用等价类划分来进行相关测试，则（）是好的测试用例。', 3, '(队长，15)', '(班长，20)', '(班长，15)', '(队长，12)', 'ABC', NULL);
INSERT INTO `topic` VALUES (2000, '　　采用面向对象开发方法时，对象是系统运行时基本实体。以下关于对象的叙述中，不正确的是（）。', 3, '对象只能包括数据(属性)', '对象只能包括操作(行为)', '对象一定有相同的属性和行为', '对象通常由对象名、属性和操作三个部分组成', 'ABC', NULL);
INSERT INTO `topic` VALUES (2001, 'E-R图转换为关系模型时，对于实体E1与E2间的多对多联系，不应该将（）。', 3, 'E1的码加上联系上的属性并入E', 'E1的码加上联系上的属性独立构成一个关系模式', 'E2的码加上联系上的属性独立构成一个关系模式', 'E1与E2码加上联系上的属性独立构成一个关系模式', 'ABC', NULL);
INSERT INTO `topic` VALUES (2002, '无向图中一个顶点的度是指图中与该顶点相邻接的顶点数。若无向图G中的顶点数为n，边数为e，则所有顶点的度数之和不可能是（）。', 3, 'n*e', 'n+e', '2n', '2e', 'ABC', NULL);
INSERT INTO `topic` VALUES (2003, '　　以下关于大数据的叙述中，正确的包括（）。', 3, '大数据是仅靠现有数据库管理工具或传统数据处理系统很难处理的大型而复杂的数据集', '大数据具有数据体量巨大、数据类型繁多、处理速度快等特性', '大数据的战略意义是实现数据的增值', '大数据研究中，数据之间的因果关系比关联关系更重要', 'ABC', NULL);
INSERT INTO `topic` VALUES (2004, '　　常用的软件需求分析方法有很多，其中面向数据流的分析方法不包含（）。', 3, '结构化分析方法', '统一建模语言', '对象分析方法', '状态迁移图法', 'BCD', NULL);
INSERT INTO `topic` VALUES (2005, '在定义类时，将属性声明为private的目的不是  （）  。', 3, '实现数据隐藏，以免意外更改', '操作符重载', '实现属性值不可更改 ', '实现属性值对类的所有对象共享', 'BCD', NULL);
INSERT INTO `topic` VALUES (2006, '在面向对象软件开发中，封装不是（）技术，其目的是使对象的使用者和生产者分离。', 3, '接口管理', '信息隐藏', '多态', '聚合', 'ACD', NULL);
INSERT INTO `topic` VALUES (2007, '　　下列关于加密的叙述中，不正确的是（）。', 3, 'DES属于公钥密码体制', 'RSA属于公钥密码体制，其安全性基于大数因子分解困难', '公钥密码体制的密钥管理复杂', '公钥密码体制中，加密和解密采用不同的密钥，解密密钥是向社会公开的', 'ACD', NULL);
INSERT INTO `topic` VALUES (2008, '　　构成运算器需要多个部件，（）是构成运算器的部件。', 3, '加法器', '累加器', '地址寄存器', 'ALU(算术逻辑部件)', 'ABD', NULL);
INSERT INTO `topic` VALUES (2009, '　　通常，在软件的输入输出设计中，不合理的要求是：   （） 。', 3, '数据尽量由用户来输入，以便给用户提供更大的自主性', '输入过程应尽量容易，以减少错误的发生', '不能在输入过程中检验数据的正确性', '在输入过程中，为了不干扰用户，应尽量避免提示信息', 'ACD', NULL);
INSERT INTO `topic` VALUES (2010, '　　不属于物理层的互连设备是  （）  。', 3, '中继器', '网桥', '交换机', '路由器', 'BCD', NULL);
INSERT INTO `topic` VALUES (2011, '　　TCP/IP网络的体系结构分为应用层、传输层、网络互联层和网络接口层。属于传输层协议的是  （）  。', 3, 'ICMP  ', 'IP  ', 'TCP  ', 'UDP', 'CD', NULL);
INSERT INTO `topic` VALUES (2012, '　　  （）  能减少用户计算机被攻击的可能性。', 3, '选用比较长和复杂的用户登录口令', '使用防病毒软件', '尽量避免开放过多的网络服务', '定期扫描系统硬盘碎片', 'ABC', NULL);
INSERT INTO `topic` VALUES (2013, '　　  （）  是通信协议的基本元素。', 3, '格式', '语法', '传输介质', '计时', 'ABD', NULL);
INSERT INTO `topic` VALUES (2014, '　　   （）   是C语言的关键字。', 3, 'do', 'else', 'fopen', 'static', 'ABC', NULL);
INSERT INTO `topic` VALUES (2015, '　　以下关于编程风格的叙述中，应提倡的是  （）  。', 3, '使用括号以改善表达式的清晰性', '用计数方法而不是文件结束符来判断文件的结束', '一般情况下，不要直接进行浮点数的相等比较', '使用有清晰含义的标识符', 'ACD', NULL);
INSERT INTO `topic` VALUES (2016, '　　以下关于程序测试的叙述，不正确的是  （）  。', 3, '程序测试的目的是为了证明程序的正确性', '白盒测试也称为功能测试', '黑盒测试也称为结构测试', '程序测试要注意检验程序是否有多余的功能', 'ABC', NULL);
INSERT INTO `topic` VALUES (2017, '　　下列标准代号中，  （）  不是国家标准的代号。', 3, 'IEEE', 'ISO', 'GB', 'GJB', 'ABD', NULL);
INSERT INTO `topic` VALUES (2018, '　　下面描述正确的是  （）  。', 3, '只要不使用U盘，就不会使系统感染病毒', '只要不执行U盘中的程序，就不会使系统感染病毒', '软盘比U盘更容易感染病毒', '设置写保护后使用U盘就不会使U盘内的文件感染病毒', 'ABC', NULL);
INSERT INTO `topic` VALUES (2019, '　　使用浏览器上网时，  （） 不可能影响系统和个人信息安全。', 3, '浏览包含有病毒的网站', '改变浏览器显示网页文字的字体大小', '在网站上输入银行账号、口令等敏感信息', '下载和安装互联网上的软件或者程序', 'B', NULL);
INSERT INTO `topic` VALUES (2020, '　　我国实行密码等级管理制度，各密码等级为：商用密码，普用密码，绝密密码和军用密码。其中商用密码等级的适用范围不包含（）。', 3, '政府、党政部门', '国内企业、事业单位', '中央和机要部门', '军队', 'ACD', NULL);
INSERT INTO `topic` VALUES (2021, '原码表示法和补码表示法是计算机中用于表示数据的两种编码方法，在计算机系统中常采用补码来表示和运算数据，采用补码无法（）。', 3, '保证运算过程与手工运算方法保持一致', '简化计算机运算部件的设计', '提高数据的运算速度', '提高数据的运算精度', 'ACD', NULL);
INSERT INTO `topic` VALUES (2022, '下列关于软件著作权中翻译权的叙述正确的是：翻译权是指（）的权利。', 3, '将原软件从一种自然语言文字转换成另一种自然语言文字', '将原软件从一种程序设计语言转换成另一种程序设计语言', '软件著作权人对其软件享有的以其他各种语言文字形式再表现', '对软件的操作界面或者程序中涉及的语言文字翻译成另一科，语言文字', 'ACD', NULL);
INSERT INTO `topic` VALUES (2023, '某软件公司研发的财务软件产品在行业中技术领先，具有很强的市场竞争优势。为确保其软件产品的技术领先及市场竞争优势，公司采取相应的保密措施，以防止软件技术秘密的外泄。并且，还为该软件产品冠以用友商标，但未进行商标注册。此情况下，公司不享有该软件产品的（）。', 3, '软件著作权和专利权', '商业秘密权和专利权', '软件著作权和商业秘密权', '软件著作权和商标权', 'ABD', NULL);
INSERT INTO `topic` VALUES (2024, '以下编码方法中，（）不属于熵编码。', 3, '哈夫曼编码', '小波变换编码', '线性预测编码', '行程编码', 'BCD', NULL);
INSERT INTO `topic` VALUES (2025, '由ISO制定的MPEG系列标准中，（）不是多媒体内容描述接口标准。', 3, 'MPEG-1', 'MPEG-2', 'MPEG-4', 'MPEG-7', 'ABC', NULL);
INSERT INTO `topic` VALUES (2026, '模块A直接访问模块B的内部数据，则模块A和模块B的耦合类型错误的是（）。', 3, '数据耦合  ', '标记耦合', '公共耦合', '内容耦合', 'ABC', NULL);
INSERT INTO `topic` VALUES (2027, '下列关于风险的叙述正确的是：风险是指（）。', 3, '可能发生的事件', '一定会发生的事件', '会带来损失的事件', '可能对其进行干预，以减少损失的事件', 'ACD', NULL);
INSERT INTO `topic` VALUES (2028, '关于过程改进，以下叙述中正确的是（）。', 3, '软件质量依赖于软件开发过程的质量，其中个人因素占主导作用', '要使过程改进有效，需要制定过程改进目标', '要使过程改进有效，需要进行培训', 'CMMI成熟度模型是一种过程改进模型，仅支持阶段性过程改进而不支持连续性过程改进', 'ABC', NULL);
INSERT INTO `topic` VALUES (2029, '软件产品的可靠性取决于（）。', 3, '潜在错误的数量', '潜在错误的位置', '软件产品的使用方式', '软件产品的开发方式', 'ABC', NULL);
INSERT INTO `topic` VALUES (2030, '高质量的文档所应具有的特性中，包括（）。', 3, '针对性，文档编制应考虑读者对象群', '精确性，文档的行文应该十分确切，不能出现多义性的描述', '完整性，任何文档都应当是完整的、独立的，应该自成体系', '无重复性，同一软件系统的几个文档之间应该没有相同的内容，若确实存在相同内容，则可以用见**文档**节的方式引用', 'ABC', NULL);
INSERT INTO `topic` VALUES (2031, '下列关于一个类的静态成员的描述中，正确的是（）。', 3, '类的静态方法只能访问该类的静态数据成员', '静态数据成员可被该类的所有方法访问', '该类的对象共享其静态数据成员的值', '该类的静态数据成员的值不可修改', 'D', NULL);
INSERT INTO `topic` VALUES (2032, '以下关于Singleton(单例)模式的描述中，错误的是（）。', 3, '它描述了只有一个方法的类的集合', '它描述了只有一个属性的类的集合', '它能够保证一个类的方法只能被一个唯一的类调用', '它能够保证一个类只产生唯一的一个实例', 'ABC', NULL);
INSERT INTO `topic` VALUES (2033, '以下关于高级程序设计语言翻译的叙述中，不正确的是（）。', 3, '可以先进行语法分析，再进行词法分析', '在语法分析阶段可以发现程序中的所有错误', '语义分析阶段的工作与目标机器的体系结构密切相关', '目标代码生成阶段的工作与目标机器的体系结构密切相关', 'ABC', NULL);
INSERT INTO `topic` VALUES (2034, '传值与传地址是函数调用时常采用的信息传递方式，错误的是（）。', 3, '在传值方式下，是将形参的值传给实参', '在传值方式下，形参可以是任意形式的表达式', '在传地址方式下，是将实参的地址传给形参', '在传地址方式下，实参可以是任意形式的表达式', 'ABD', NULL);
INSERT INTO `topic` VALUES (2035, '关于分治算法设计技术，错误的是（）。', 3, '一般由三个步骤组成：问题划分、递归求解、合并解', '一定是用递归技术来实现', '将问题划分为庀个规模相等的子问题', '划分代价很小而合并代价很大', 'BCD', NULL);
INSERT INTO `topic` VALUES (2036, '下面关于集线器与交换机的描述中，正确的是（）。', 3, '交换机是一种多端口网桥', '交换机的各个端口形成一个广播域', '集线器的所有端口组成一个冲突域', '集线器可以起到自动寻址的作用', 'ABC', NULL);
INSERT INTO `topic` VALUES (2037, '　　在信息系统中，信息的处理包括（）。', 3, '信息的输入', '信息的删除', '信息的修改', '信息的统计', 'BCD', NULL);
INSERT INTO `topic` VALUES (2038, '　　在描述复杂关系时，图形比文字叙述优越得多，下列四种图形工具中，适合需求分析阶段使用的是（）。', 3, '层次方框图', '用例图', 'IPO图', 'N＿S图', 'ABC', NULL);
INSERT INTO `topic` VALUES (2039, '　　以下关于数据库设计中范式的叙述，正确的是（）。', 3, '范式级别越高，数据冗余程度越小', '随着范式级别的提高，在需求变化时数据的稳定性越强', '范式级别越高，存储 同样的数据就需要分解成更多张表', '范式级别提高，数据库性能（速度）将下降', 'ACD', NULL);
INSERT INTO `topic` VALUES (2040, '（）可以用于表达类之间的关系。', 3, '关联', '依赖', '创建', '泛化', 'ABD', NULL);
INSERT INTO `topic` VALUES (2041, '　　根据《GB/T 16680-1996软件文档管理指南》的描述，软件文档的作用包括（）。', 3, '管理依据', '任务之间联系的凭证', '历史档案', '记录代码的工具', 'ABD', NULL);
INSERT INTO `topic` VALUES (2042, '　　根据《GB/T 12504-90计算机软件质量保证计划规范》的规定，为了确保软件的实现满足需求，需要的基本文档包括（）。', 3, '软件需求规格说明书', '软件界面设计说明书', '软件验证和确认报告', '用户文档', 'ACD', NULL);
INSERT INTO `topic` VALUES (2043, '　　（）属于网络存储结构或方式。', 3, '直连式存储', '哈希散列表存储', '网络存储设备', '存储网络', 'ACD', NULL);
INSERT INTO `topic` VALUES (2044, '　　（）是结构化综合布线的优点。', 3, '有利于不同网络协议间的转换', '移动、增加和改变配置容易', '单点故障隔离', '网络管理 简单易行', 'BCD', NULL);
INSERT INTO `topic` VALUES (2045, '　　下列技术规范中，（）是软件中间件的技术规范。', 3, 'EJB', 'COM', 'TPM标准', 'CORBA', 'ABD', NULL);
INSERT INTO `topic` VALUES (2046, '以下关于.NET的描述，正确的是（）。', 3, 'Microsoft ．NET是一个程序运行平台', 'NET Framework管理和支持．NET程序的执行', 'Visual Studio．NET是一个应用程序集成开发环境', '编译．NET时，应用程序被直接编译成机器代码y', 'ABC', NULL);
INSERT INTO `topic` VALUES (2047, '　　形成Web Service架构基础的协议包括（）。', 3, 'SOAP', 'DHCP', 'WSDL', 'UDDI', 'ACD', NULL);
INSERT INTO `topic` VALUES (2048, '　　委托开发完成的发明创造，除当事人另有约定的以外，申请专利的权利不属于（）所有。', 3, '完成者', '委托开发人', '开发人与委托开发人共同', '国家', 'BCD', NULL);
INSERT INTO `topic` VALUES (2049, '　　下列描述中（）是《中华人民共和国招投标法》的正确内容。', 3, '招标人采用公开招标方式的，应当发布招标公告', '招标人采用邀请招标方式的，应当向三个以上具备承担招标项目的能力、资信良好的特定的法人或者其他组织发出投标邀请书', '投标人报价不受限制', '中标人不得向他人转让中标项目，也不得将中标项目肢解后分别同他人转让', 'ABD', NULL);
INSERT INTO `topic` VALUES (2050, '　　（）是成本估算的方法。', 3, '类比法', '确定资源费率', '工料清单法', '挣值分析法', 'ABC', NULL);
INSERT INTO `topic` VALUES (2051, '　　以下关于工作分解结构的叙述，正确的是（）。', 3, '工作分解结构是项目各项计划和控制措施制定的基础和主要依据', '工作分解结构是面向可交付物的层次型结构', '工作分解结构可以不包括分包出去的工作', '工作分解结构能明确项目相关各方面的工作界面，便于责任划分和落实', 'ABD', NULL);
INSERT INTO `topic` VALUES (2052, '　　以下关于项目整体管理的叙述，错误的是（）。', 3, '项目整体管理把各个管理过程看成是完全独立的', '项目整体管理过程是线性的过程', '项目整体管理是对项目管理过程组中的不同过程和活动进行识别、定义、整合、统一和协调的过程', '项目整体管理不涉及成本估算过程', 'ABD', NULL);
INSERT INTO `topic` VALUES (2053, '　　一般而言，项目的范围确定后，项目的三个基本目标是（）。', 3, '时间', '质量标准', '成本', '功能', 'ABC', NULL);
INSERT INTO `topic` VALUES (2054, '　　以下有关质量保证的叙述，正确的是（）。', 3, '质量保证主要任务是识别与项目相关的各种质量标准', '质量保证该贯穿整个项目生命期', '质量保证给质量的持续改进过程提供保证', '质量审计是质量保证的有效手段', 'BCD', NULL);
INSERT INTO `topic` VALUES (2055, '　　下列选项中，属于质量控制工具的是（）。', 3, '甘特图', '趋势分析', '控制图', '因果图', 'BCD', NULL);
INSERT INTO `topic` VALUES (2056, '　　下列选项中．有关项目组合和项目组合管理的说法正确的是（）。', 3, '项目组合是项目或大项目和其他工作的一个集合', '组合中的项目或大项目应该是相互依赖或相关的', '项目组合管理中，资金和支持可以依据风险 ／回报类别来进行分配', '项目组合管理应该定期排除不满足项目组合的战略目标的项目y', 'ACD', NULL);
INSERT INTO `topic` VALUES (2057, '　　以下有关行业集中度的说法，正确的是（）。', 3, '计算行业集中度要考虑该行业中企业的销售额、职工人数、资产额等因素', '行业集中度较小则表明该行业为竞争型', '计算行业集中度要涉及该行业的大多数企业', '稳定的集中度曲线表明市场竞争结构相对稳定', 'ABD', NULL);
INSERT INTO `topic` VALUES (2058, '　　项目沟通中正确的做法是（）。', 3, '对外一致，一个团队 要用一种声音说话', '采用多样的沟通风格', '始终采用正式的沟通方式', '会议之前将会议资料发给所有参会人员', 'ABD', NULL);
INSERT INTO `topic` VALUES (2059, '　　下列选项中，项目经理进行成本估算时需要考虑的因素是（）。', 3, '人力资源', '工期长短', '风险因素', '盈利', 'ABC', NULL);
INSERT INTO `topic` VALUES (2060, '　　某项目成本偏差（CV）大于0，进度偏差（SV）小于0，则该项目的状态是（）。', 3, '成本超支', '成本节省', '进度落后', '进度超前', 'BC', NULL);
INSERT INTO `topic` VALUES (2061, '　　某工厂生产甲、乙两种产品，生产1公斤甲产品需要煤9公斤、电4度、油3公斤，生产1公斤乙产品需要煤4公斤、电5度、油10公斤。该工厂现有煤360公斤、电200度、油300公斤。已知甲产品每公斤利润为7千元，乙产品每公斤利润为1.2万元，为了获取最大利润应该生产甲产品____公斤，乙产品____公斤。选择（）', 3, '20', '22', '24', '26', 'AC', NULL);
INSERT INTO `topic` VALUES (2062, '　　算法的复杂性依赖于（）。', 3, '问题的规模', '算法的输入', '算法本身的函数', '设计者的水平', 'ABC', NULL);
INSERT INTO `topic` VALUES (2063, '　　关于递归，下面说法正确的是（）。', 3, '结构清晰，可读性强', '运行效率高   ', '设计算法、调试程序方便', '容易用数学归纳法来证明算法的正确性', 'ACD', NULL);
INSERT INTO `topic` VALUES (2064, '　　下面问题中可以用分治策略求解的是（）。', 3, '百钱百鸡问题', '归并排序', '快速排序', '水仙花数问题', 'BC', NULL);
INSERT INTO `topic` VALUES (2065, '　　下面问题中可以用贪心策略求解的是（）。', 3, '0-1背包问题', '最小生成树问题', '活动安排问题', '哈夫曼编码', 'BCD', NULL);
INSERT INTO `topic` VALUES (2066, '　　关于回溯法和穷举法的说法中，正确的是（）。', 3, '二者都是通过“枚举-判断”来寻找问题的解', '回溯法每次测试的是解的一部分', '穷举法每次枚举的都是问题的一个完整解', '回溯法有通用的解题法之称，可看成是优化了的穷举法', 'ABCD', NULL);
INSERT INTO `topic` VALUES (2067, '　　分支限界法的分支搜索方式有（）。', 3, '深度优先搜索', 'FIFO搜索', '优先队列式搜索', '随机搜索', 'BC', NULL);
INSERT INTO `topic` VALUES (2068, '　　有关作业管理的下述描述中，（）是正确的。', 3, '系统现有空闲资源能满足被选作业的资源要求是选择作业进入主存的一个必要条件', '作业与进程是一一对应的', '作业调度选中一个作业后，与作业相关的进程就处于运行状态', '在兼有批处理和分时的计算机系统中，往往把终端作业作为前台作业，把批处理作业作为后台作业', 'ACD', NULL);
INSERT INTO `topic` VALUES (2069, '　　下列文件中适合于随机存取的是（）。', 3, '连续文件', '索引文件', '串联文件', '索引顺序文件', 'BD', NULL);
INSERT INTO `topic` VALUES (2070, '　　有关中断的下列提法中（）是正确的。', 3, '中断事件是由硬件发现的', '中断事件是由软件处理的', '中断事件是正在运行的进程所期望的', '应在每一条指令执行后检测是否有中断事件', 'ABD', NULL);
INSERT INTO `topic` VALUES (2071, '　　设某信号量为S，一个正在运行的进程调用P(S)后，若S的值为（AD），则该进程可继续运行。', 3, 'S＞0', 'S＜0', 'S≠0', 'S＝0', 'AD', NULL);
INSERT INTO `topic` VALUES (2072, '　　下列作业调度算法中，（）算法是与作业的等待时间有关的。', 3, '先来先服务', '短作业优先调度', '最高响应比优先调度', '优先数调度', 'AC', NULL);
INSERT INTO `topic` VALUES (2073, '　　产生死锁的基本原因是（）。', 3, '竞争资源', '系统资源不足', '进程推进顺序不当', '作业调度不当', 'AC', NULL);
INSERT INTO `topic` VALUES (2074, '　　中间代码的形式包括（）。', 3, '后缀式', '树形', '三元式', '四元式', 'ABCD', NULL);
INSERT INTO `topic` VALUES (2075, '　　正规式的运算符有（）。', 3, '*', '.', '| ', '+', 'ABC', NULL);
INSERT INTO `topic` VALUES (2076, '　　下列工具中，可用于描述词法规则的是（）。', 3, '3型文法', '正规式', '有限自动机', '2型文法', 'ABC', NULL);
INSERT INTO `topic` VALUES (2077, '　　下列正规式中，等价的有（）。', 3, '(ab)*', '(a|b)*', '(a*|b*)*', '(a*b*)*', 'BCD', NULL);
INSERT INTO `topic` VALUES (2078, '　　关于在编译器中引入中间代码的叙述中，正确的是（）。', 3, '不同的高级程序语言不能产生同一种中间代码', '使用中间代码有利于进行与机器无关的优化处理', '使用中间代码有利于提高编译程序的可移植性', '中间代码与机器语言代码在指令结构上必须一致', 'BC', NULL);
INSERT INTO `topic` VALUES (2079, '　　对高级语言源程序进行编译或解释的过程可以分为多个阶段，解释方式必须包含（）阶段。', 3, '词法分析', '语法分析', '语义分析', '中间代码生成', 'ABC', NULL);
INSERT INTO `topic` VALUES (2080, '以下正规式中等价的是（）。', 3, '(aa*|ab)*b ', '(a|b)*b ', '((a|b)*|aa)*b  ', '(a|ab)*b', 'BC', NULL);
INSERT INTO `topic` VALUES (2081, '　　抽象数据类型包括（）。', 3, '逻辑结构', '数据元素', '运算', '数据类型', 'AC', NULL);
INSERT INTO `topic` VALUES (2082, '　　线性表的顺序存储结构可以进行（）。', 3, '随机存取', '顺序存取', '索引存取', '散列存取', 'AB', NULL);
INSERT INTO `topic` VALUES (2083, '　　下列说法正确的有（）。', 3, '树的后序遍历序列与其对应的二叉树的后序遍历序列相同', '满二叉树也是完全二叉树', '哈夫曼树也是完全二叉树', '二叉树的子树是有序的', 'BD', NULL);
INSERT INTO `topic` VALUES (2084, '　　下列二叉树中，适合于顺序存储的有（）。', 3, '完全二叉树', '满二叉树', '单支树', '二叉排序树', 'AB', NULL);
INSERT INTO `topic` VALUES (2085, '　　适合于元素个数很多的排序文法是（）。', 3, '堆', '归并', '折半插入', '快速', 'ABD', NULL);
INSERT INTO `topic` VALUES (2086, '　　可以进行压缩存储的矩阵有（）矩阵。', 3, '对称', '对角', '邻接', '稀疏', 'C', NULL);
INSERT INTO `topic` VALUES (2087, '　　下列概念中，与存储结构有关的是（）。', 3, '哈希表', '循环链表', '三叉链表', '十字链表', 'ABCD', NULL);
COMMIT;

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT ' ',
  `username` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
BEGIN;
INSERT INTO `user` VALUES (2, 'cx', '123123');
INSERT INTO `user` VALUES (3, 'lht', '123123');
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
